//=====================================================================
//文件名称：uecom.h
//功能概要：UE驱动构件头文件
//模组型号：ME3616（NB，电信）
//版权所有：苏州大学嵌入式系统与物联网研究所(sumcu.suda.edu.cn)
//更新记录：【20180718】   V2.0:将第一版的uecom构件移植到远程更新程序框架
//       【20180815】   V2.1:将指令的存放方式改为符号常量形式；基站号添加“460,11”填充；
//                       添加获取金葫芦型号和版本的构件
//       【20180902】    V6.0：添加GNSS相关函数，包括：uecom_gnssSwitch、
//                         uecom_gnssGetInfo
//       【20180922】    添加透传的发送、接收函数和中断处理函数
//       【20200723】    将uecom构件移植到STM32上，改变通讯模组电源引脚定义
//                       消除关于类型转换的警告
//=====================================================================

#ifndef _UECOM_H    //防止重复定义（_COMMON_H  开头)
#define _UECOM_H

# include <stdio.h>
# include <stdlib.h>
#include "string.h"
#include "valueType.h"
#include "includes.h"

//=======================构件使用步骤开始================================
//（1）根据实际项目需要配置本文件中的宏。
//（2）将本构件中的uecom_interrupt函数放入相应的串口中断中，并设置合适的入口参数。
//（3）调用uecom_init函数完成初始化.此过程约耗时15秒。
//（4）在有发送请求时，调用uecom_send函数发送数据。
//（5）通过判断uecom_interrupt的length是否为零判断是否接收到数据。
//（6）其他功能请参考本文件中的接口说明。
//=======================构件使用步骤结束================================

//硬件引脚宏定义

//#define UART_UE          UARTB         //模块通信串口
#define POWER_CONTROL    (PTE_NUM|22)   //电源控制引脚

//宏常数
#define UECOM_OFF        0
#define UECOM_ON         1
#define UECOM_REBOOT     2

//==========使用到的结构体的定义=============================================
typedef struct UecomGnssInfo{
    uint8_t time[15];     //UTC时间
    double latitude;     //纬度
    double longitude;    //经度
    double speed;        //速度
    double attitude;     //海拔
} UecomGnssInfo;
//=======================宏定义结束=====================================

//=====================================================================
//函数名称：uecom_power
//函数返回：无
//参数说明：state:通信模组电源控制命令。可取值为（使用宏常数）：
//         UECOM_OFF：关闭通信模组电源；
//         UECOM_ON：打开通信模组电源；
//         UECOM_REBOOT：重启通信模组（先关闭，延时，再开启）。
//功能概要：控制通信模块供电状态
//内部调用：gpio_init，delay_ms
//修改日期：【20180718】,LXD
//=====================================================================
void uecom_power(uint8_t state);    //控制通信模块供电状态

//====================================================================
//函数名称：uecom_init
//函数返回： 0：成功；1：与UE模块串口通讯失败；2：获取SIM卡的IMSI号失败；
//参数说明： 无
//功能概要：uecom模块初始化。（1）建立与通讯模组的串口通讯；（2）获取SIM卡的IMSI号。
//修改日期：【20180718】,LXD
//====================================================================
uint8_t uecom_init(void);

//=====================================================================
//函数名称： uecom_linkBase
//函数返回： 0：成功建立与铁塔建立连接；1：连接不上铁塔；
//参数说明：无
//功能概要：与网络运营商的基站（铁塔）建立连接
//修改日期：【20180718】,LXD
//=====================================================================
uint8_t uecom_linkBase(void);

//=====================================================================
//函数名称：uecom_linkCS
//函数返回： 0：成功建立TCP连接；1：建立TCP连接失败
//参数说明： IP:待连接服务器的IP地址； port:待连接服务器的端口号
//功能概要：与指定的服务器和端口建立TCP连接。
//修改日期：【20180718】,LXD
//=====================================================================
uint8_t uecom_linkCS(uint8_t *ip,uint8_t* port);

//=====================================================================
//函数名称：uecom_send
//函数返回：  0：发送成功；1：开启发送模式失败；2：数据发送失败
//参数说明： data:待发送数据缓存区，传入参数
//		           length:待发送数据的长度
//功能概要：将数据通过已经建立的TCP通道发送出去。最多500个字节。
//修改日期：【20180718】,LXD
//=====================================================================
uint8_t uecom_send(uint16_t length, uint8_t *data);

//=====================================================================
//函数名称：uecom_transparentSend
//函数返回：  0：发送成功；1：开启发送模式失败；2：数据发送失败
//参数说明： data:待发送数据缓存区，传入参数
//		           length:待发送数据的长度
//功能概要：透明发送，将数据通过已经建立的TCP通道发送出去。最多500个字节。
//修改日期：【20180922】,LXD
//=====================================================================
uint8_t uecom_transparentSend(uint16_t length, uint8_t *data);

//====================================================================
//函数名称：uecom_interrupt
//函数返回：无
//参数说明：ch：串口中断接收到的数据；length：接收到的网络数据长度；
//                   recvData：存储接收到的网络数据
//功能概要：本函数需要放在串口中断中。并需要传入串口中断接收到的数据。
//  本构件的所有功能实现均依赖该api。本api实现的功能：
//  （1）接收网络发送来的数据;（2）构件内部使用本api与模块进行数据交互
//修改日期：【20180718】,LXD
//=====================================================================
void uecom_interrupt(uint8_t ch,uint16_t *length,uint8_t recvData[]);

//====================================================================
//函数名称：uecom_transparentInterrupt
//函数返回：无
//参数说明：ch：串口中断接收到的数据；length：接收到的网络数据长度；
//                   recvData：存储接收到的网络数据
//功能概要：透传的中断处理函数，本函数需要放在串口中断中。并需要传入串口中断接收到的数据。
//  本构件的所有功能实现均依赖该api。本api实现的功能：
//  （1）接收网络发送来的数据;（2）构件内部使用本api与模块进行数据交互
//修改日期：【20180922】,LXD
//=====================================================================
void uecom_transparentInterrupt(uint8_t ch,uint16_t *length,
		uint8_t recvData[]);

//=====================================================================
//函数名称：uecom_ gnssSwitch
//函数返回：0：操作GNSS成功；1：操作GNSS失败
//参数说明：state：设置GNSS的开关状态。1：热启动；2：温启动；3：冷启动；
//          建议默认使用冷启动。
//功能概要：设置GNSS的状态。开启或关闭GNSS，并设定开启方式。
//修改日期：【20180902】；
//=====================================================================
uint8_t uecom_gnssSwitch (uint8_t state);


//====================================================================
//函数名称：uecom_ gnssGetInfo
//函数返回：0：获取定位信息成功；1：没有获得定位信息
//参数说明：data：存储获得的GNSS相关信息。采用结构体的方式，共包含4个成员：
//       time（15个字节的uint8_t数组）,例如:“20180706155132”表示2018年7月6日15:51:32
//       latitude（double类型），纬度信息；longitude（double），经度信息；
//       speed（double类型），速度，单位为：米每秒。
//       attitude（double类型），海拔高度，单位为：米
//功能概要：获得与GNSS定位相关的信息。
//修改日期：【20180902】
//=====================================================================
uint8_t uecom_gnssGetInfo (UecomGnssInfo *data);   // UecomGnssInfo为存储gnss信息的结构体数据


//====================================================================
//函数名称：uecom_baseInfo
//函数返回：0：获取基站信息成功；1：获取信号强度失败；
//参数说明：retData：存储返回的信息,最少分配20个字节。
//          信息组成：信号强度(1个字节)+基站号（19个字节）
//功能概要：获取与基站相关的信息：信号强度和基站号
//修改日期：【20180815】,LXD
//=====================================================================
uint8_t uecom_baseInfo (uint8_t retData [20]);

//====================================================================
//函数名称：uecom_ modelInfo
//函数返回：0：获取模组信息成功；1：获取模组信息失败
//参数说明：retData：存储返回的信息,最少分配40个字节。
//          信息组成：IMEI (20个字节)+IMSI（20个字节）
//功能概要：获得需要与模块相关的信息，包括：IMEI号，IMSI号
//修改日期：【20180718】,LXD
//=====================================================================
uint8_t uecom_modelInfo (uint8_t retData[40]);

//======================================================================
//函数名称：uecom_typeGet
//函数返回：无
//参数说明：type:金葫芦型号
//功能概要：获取金葫芦型号
//======================================================================
uint8_t uecom_typeGet(uint8_t *type);

//======================================================================
//函数返回：无
//参数说明：version:金葫芦版本（通信模组型号）
//功能概要：获取金葫芦版本
//======================================================================
void uecom_version(uint8_t *version);

//====================================================================
//函数返回：0：获得get请求成功；1：初始化http失败；2：传递url参数失败；3：设置网络失败；
//       4：开启网络失败；5：建立连接失败；6：发送请求失败；7：获得返回失败；
//参数说明：ip:目标服务器地址；port :目标地址；url:get请求的内容。result:get请求返回的结果，
//       数组长度由预计返回的长度（用户应已知返回内容）*1.5来决定。
//功能概要：发起http的get请求，并将返回结果存储在result中
//=====================================================================
uint8_t uecom_httpGet (uint8_t ip[],uint8_t port[],uint8_t url[],uint8_t result[]);

//=====================================================================
//函数返回：
//参数说明： IP:待连接更新服务器的IP地址； port:待连接更新服务器的端口号
//功能概要：配置更新服务器的IP地址和端口号
//修改日期：【20190426】,CC
//=====================================================================
void uecom_remoteConfig(uint8_t *ip,uint8_t *port);

//=====================================================================
//函数返回： 0：成功建立TCP连接；1：建立TCP连接失败
//参数说明： IP:待连接服务器的IP地址； port:待连接服务器的端口号
//功能概要：与指定的服务器和端口建立TCP连接。（使用套接字1）
//修改日期：【20181104】,LXD
//注：uecom_RemoteUpdate要在调用uecom_linkCS之前使用
//=====================================================================
uint8_t uecom_linkRemoteUpdate(uint8_t *ip,uint8_t* port);

//=====================================================================
//函数返回：  0：发送成功；1：开启发送模式失败；2：数据发送失败
//参数说明： data:待发送数据缓存区，传入参数
//		           length:待发送数据的长度
//功能概要：将数据通过已经建立的TCP通道发送出去。最多500个字节。（使用套接字0发送）
//修改日期：【20181104】,LXD
//=====================================================================
uint8_t uecom_updateSend(uint16_t length, uint8_t *data);

//=====================================================================
//函数返回：  无
//参数说明： 无
//功能概要：断开Socket连接
//修改日期：【20190503】,CC
//=====================================================================
void uecom_linkOff();



//======================================================================
//函数返回：成功：返回时间戳（1970.1.1至此所经历的秒数）       失败：返回0
//参数说明：无
//功能概要：获取附近基站的时间，以时间戳的格式返回，要求在通信模组完成基站初始化后才能使用
//======================================================================
//======================================================================
void uecom_getTime(uint8_t dateform[20]);




#endif
/*
知识要素：
1、通信模块采用的是串口通信，波特率为115200（有可能随着硬件版本升级而有所改变）
 注意：在开启串口中断之前，不可以关闭串口中断，否则程序会跑飞。
2、通讯模块采用AT指令进行控制
3、通讯模块的供电引脚在本文件中已给出，电压范围为：3.4V - 4.2V。3.9V较佳
4、初始化通讯模块时需要传入管理服务器IP地址和端口号
5、信号强度对于模块联网很重要。一般情况，信号强度应在百分之二十才可以实现通信
6、IMSI和IMEI是该通信模块的两个重要标志。IMSI号是该模块的卡号，是通信公司分配的
用来记录信息并缴费的凭证。IMEI号是该模块的编号，是模块的生产商决定的。
7、本模块采用的TCP通信方式，相比于UDP方式，该方式更加安全可靠。
8、通信模块附着核心网和发送数据所用的时间与信号强度成反比。信号强度越强，所用时间越少。

 */

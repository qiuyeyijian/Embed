
UART_上位机_按钮控制七色灯.elf:     file format elf32-littlearm
UART_上位机_按钮控制七色灯.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00006c59

Program Header:
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x000068c0 memsz 0x000068c0 flags r--
    LOAD off    0x00006c00 vaddr 0x00006c00 paddr 0x00006c00 align 2**16
         filesz 0x00000010 memsz 0x00000010 flags r--
    LOAD off    0x00006c10 vaddr 0x00006c10 paddr 0x00006c10 align 2**16
         filesz 0x00002630 memsz 0x00002630 flags rwx
    LOAD off    0x00010400 vaddr 0x20000400 paddr 0x00009240 align 2**16
         filesz 0x00000008 memsz 0x00000328 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .interrupts     000000c0  00006800  00006800  00006800  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .flash_config   00000010  00006c00  00006c00  00006c00  2**0  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text           00002620  00006c10  00006c10  00006c10  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .ARM            00000008  00009230  00009230  00009230  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array     00000004  00009238  00009238  00009238  2**2  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array     00000004  0000923c  0000923c  0000923c  2**2  CONTENTS, ALLOC, LOAD, DATA
  6 .mtb            00000000  20000400  20000400  00010408  2**0  CONTENTS
  7 .data           00000008  20000400  00009240  00010400  2**2  CONTENTS, ALLOC, LOAD, DATA
  8 .bss            00000020  20000408  00009248  00010408  2**2  ALLOC
  9 .heap           00000200  20000428  00009268  00010408  2**0  ALLOC
 10 .stack          00000100  20000628  00009468  00010408  2**0  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010408  2**0  CONTENTS, READONLY
 12 .debug_info     00006e35  00000000  00000000  00010430  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev   0000149b  00000000  00000000  00017265  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges  00000250  00000000  00000000  00018700  2**3  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges   000001b0  00000000  00000000  00018950  2**0  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro    0000ef21  00000000  00000000  00018b00  2**0  CONTENTS, READONLY, DEBUGGING
 17 .debug_line     000027a5  00000000  00000000  00027a21  2**0  CONTENTS, READONLY, DEBUGGING
 18 .debug_str      0004eac2  00000000  00000000  0002a1c6  2**0  CONTENTS, READONLY, DEBUGGING
 19 .comment        0000007e  00000000  00000000  00078c88  2**0  CONTENTS, READONLY
 20 .debug_frame    000007c0  00000000  00000000  00078d08  2**2  CONTENTS, READONLY, DEBUGGING
 21 .debug_loc      000021a4  00000000  00000000  000794c8  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00006800 l    d  .interrupts	00000000 .interrupts
00006c00 l    d  .flash_config	00000000 .flash_config
00006c10 l    d  .text	00000000 .text
00009230 l    d  .ARM	00000000 .ARM
00009238 l    d  .init_array	00000000 .init_array
0000923c l    d  .fini_array	00000000 .fini_array
20000400 l    d  .mtb	00000000 .mtb
20000400 l    d  .data	00000000 .data
20000408 l    d  .bss	00000000 .bss
20000428 l    d  .heap	00000000 .heap
20000628 l    d  .stack	00000000 .stack
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 ./obj/startup_MKL36Z4.o
00000000 l    df *ABS*	00000000 crtstuff.c
00009218 l     O .text	00000000 __EH_FRAME_BEGIN__
00006c10 l     F .text	00000000 __do_global_dtors_aux
20000408 l       .bss	00000001 completed.8654
0000923c l     O .fini_array	00000000 __do_global_dtors_aux_fini_array_entry
00006c38 l     F .text	00000000 frame_dummy
2000040c l       .bss	00000018 object.8659
00009238 l     O .init_array	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 _udivsi3.o
00006ca8 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _divsi3.o
00006dbc l       .text	00000000 .divsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 _clzsi2.o
00000000 l    df *ABS*	00000000 _clzdi2.o
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 system_MKL36Z4.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 flash.c
00000000 l    df *ABS*	00000000 gpio.c
00000000 l    df *ABS*	00000000 gec.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 isr.c
00000000 l    df *ABS*	00000000 printf.c
00008824 l     F .text	0000002a printk_putc
0000884e l     F .text	00000084 printk_mknumstr
000088d2 l     F .text	0000001e printk_pad_zero
000088f0 l     F .text	0000001e printk_pad_space
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 d:/freescale/ahl-gec-ide/gcc/bin/../lib/gcc/arm-none-eabi/7.2.1/thumb/v6-m/crti.o
00000000 l    df *ABS*	00000000 d:/freescale/ahl-gec-ide/gcc/bin/../lib/gcc/arm-none-eabi/7.2.1/thumb/v6-m/crtn.o
00000000 l    df *ABS*	00000000 
0000923c l       .init_array	00000000 __init_array_end
00009238 l       .init_array	00000000 __preinit_array_end
00009238 l       .init_array	00000000 __init_array_start
00009238 l       .init_array	00000000 __preinit_array_start
20000428 g       .heap	00000000 __HeapBase
00006fd4 g     F .text	00000012 .hidden __aeabi_dcmple
00008200 g     F .text	00000008 flash_read_physical
0000724c g     F .text	00000078 .hidden __eqdf2
20000400 g       .data	00000000 __data_start__
00000100 g       *ABS*	00000000 STACK_SIZE
00006ca0  w    F .text	00000006 I2C0_IRQHandler
0000003e g       *ABS*	00000000 GEC_USER_SECTOR_END
00006ca0  w    F .text	00000006 HardFault_Handler
00006ca0  w    F .text	00000006 SysTick_Handler
00006ca0  w    F .text	00000006 PendSV_Handler
00006ca0  w    F .text	00000006 NMI_Handler
00009238 g       .ARM	00000000 __exidx_end
00006ca0  w    F .text	00000006 PORTC_PORTD_IRQHandler
00006ca0  w    F .text	00000006 I2C1_IRQHandler
00006ca0  w    F .text	00000006 UART1_IRQHandler
000072c4 g     F .text	000000c8 .hidden __gtdf2
00009240 g       .fini_array	00000000 __etext
00006ca0  w    F .text	00000006 DMA2_IRQHandler
00008690 g     F .text	00000050 uart_enable_re_int
00006ca0  w    F .text	00000006 TPM0_IRQHandler
00006fa4 g     F .text	00000010 .hidden __aeabi_cdcmple
00006ca0  w    F .text	00000006 I2S0_IRQHandler
00006ca0  w    F .text	00000006 LLWU_IRQHandler
0000001a g       *ABS*	00000000 GEC_USER_SECTOR_START
00006ca0  w    F .text	00000006 TSI0_IRQHandler
000086e0 g     F .text	00000144 UART0_IRQHandler
00009028 g     F .text	00000012 memcpy
00006f94 g     F .text	00000020 .hidden __aeabi_cdrcmple
0000738c g     F .text	000000d0 .hidden __ltdf2
00009238 g       .init_array	00000000 __DTOR_END__
00007010 g     F .text	0000003e .hidden __aeabi_uldivmod
20000400 g     O .data	00000004 SystemCoreClock
00006ca0  w    F .text	00000006 ADC0_IRQHandler
00006ca8 g     F .text	0000010a .hidden __udivsi3
20000408 g       .bss	00000000 __START_BSS
00007050 g     F .text	0000003c .hidden __fixunsdfsi
20000628 g       .heap	00000000 __HeapLimit
20000408 g       .bss	00000000 __bss_start__
0000826c g     F .text	00000068 flash_erase
0000803c g     F .text	00000064 .hidden __aeabi_ui2d
00006ca0  w    F .text	00000006 SPI1_IRQHandler
000070c8 g     F .text	00000182 .hidden __udivmoddi4
00006ca0  w    F .text	00000006 DefaultISR
00006fc0 g     F .text	00000012 .hidden __aeabi_dcmplt
00009230 g       .ARM	00000000 __exidx_start
0000745c g     F .text	000004e4 .hidden __aeabi_dmul
0000891c g     F .text	00000188 printk_mkfloatstr
00009218 g     F .text	00000000 _init
00006ca0  w    F .text	00000006 TPM2_IRQHandler
0000708c g     F .text	0000003c .hidden __aeabi_d2ulz
00006ca0  w    F .text	00000006 RTC_IRQHandler
000090a0 g     O .text	00000014 PORT_ARR
00000400 g       *ABS*	00000000 MCU_SECTORSIZE
00006c58  w    F .text	00000048 Reset_Handler
00006ca0  w    F .text	00000006 LCD_IRQHandler
0000738c g     F .text	000000d0 .hidden __ledf2
200017ff g       *ABS*	00000000 GEC_USER_RAM_END
00009004 g     F .text	00000024 myprintf
00006ca0  w    F .text	00000006 RTC_Seconds_IRQHandler
00006dbc g     F .text	00000000 .hidden __aeabi_idiv
00006ca0  w    F .text	00000006 MCG_IRQHandler
00006ca0  w    F .text	00000006 UART2_IRQHandler
20000408 g       .data	00000000 __data_end__
00009238 g       .init_array	00000000 __CTOR_LIST__
00000200 g       *ABS*	00000000 HEAP_SIZE
00006fe8 g     F .text	00000012 .hidden __aeabi_dcmpgt
000080a0 g     F .text	0000003c .hidden __clzsi2
00008484 g     F .text	00000148 uart_init
20000428 g       .bss	00000000 __bss_end__
00006ca0  w    F .text	00000006 Reserved20_IRQHandler
00006ffc g     F .text	00000012 .hidden __aeabi_dcmpge
00008228 g     F .text	00000044 flash_cmd_launch
00007940 g     F .text	00000690 .hidden __aeabi_dsub
20000424 g     O .bss	00000004 component_fun
20000400 g       *ABS*	00000000 GEC_USER_RAM_START
000090fc g     O .text	00000008 UART_ARR
0000890e g     F .text	0000000c out_char
00008aa4 g     F .text	0000055e printk
00006f90  w    F .text	00000002 .hidden __aeabi_ldiv0
20000404 g     O .data	00000003 table_irq_uart
00008628 g     F .text	00000068 uart_re1
0000903a g     F .text	00000010 memset
00006800 g       .interrupts	000000c0 __isr_vector
000081c8 g     F .text	00000038 main
00006ca0  w    F .text	00000006 PIT_IRQHandler
00006ca8 g     F .text	00000000 .hidden __aeabi_uidiv
00006ca0  w    F .text	00000006 SVC_Handler
20000400 g       .data	00000000 __DATA_RAM
00008328 g     F .text	00000008 gpio_get_port_pin
20000428 g       .heap	00000000 __end__
00006dbc g     F .text	000001cc .hidden __divsi3
00009238 g       .init_array	00000000 __CTOR_END__
00006ca0  w    F .text	00000006 DMA3_IRQHandler
00009238 g       .init_array	00000000 __DTOR_LIST__
20000428 g       .bss	00000000 __END_BSS
00008104 g     F .text	000000c4 SystemInit
00006ca0  w    F .text	00000006 DMA0_IRQHandler
0000724c g     F .text	00000078 .hidden __nedf2
0000708c g     F .text	0000003c .hidden __fixunsdfdi
00009224 g     F .text	00000000 _fini
00006ca0  w    F .text	00000006 DAC0_IRQHandler
20001800 g       .stack	00000000 __StackTop
000082d4 g     F .text	00000054 flash_write_physical
20000400 g       .mtb	00000000 _mtb_end
00009248 g       *ABS*	00000000 __DATA_END
00008208 g     F .text	0000001e flash_isempty
00007050 g     F .text	0000003c .hidden __aeabi_d2uiz
00006ca0  w    F .text	00000006 TPM1_IRQHandler
000083ec g     F .text	0000008c Vectors_Init
20001800 g       *ABS*	00000000 __stack
00006db4 g     F .text	00000008 .hidden __aeabi_uidivmod
00006fb4 g     F .text	0000000c .hidden __aeabi_dcmpeq
00006ca0  w    F .text	00000006 LVD_LVW_IRQHandler
00006ca0  w    F .text	00000006 SPI0_IRQHandler
00006ca0  w    F .text	00000006 PORTA_IRQHandler
00006800 g       .interrupts	00000000 __VECTOR_TABLE
00009240 g       .fini_array	00000000 __DATA_ROM
20001700 g       *ABS*	00000000 __StackLimit
00006ca0  w    F .text	00000006 FTFA_IRQHandler
0000908c g     O .text	00000014 GPIO_ARR
00007fd0 g     F .text	0000006c .hidden __aeabi_d2iz
20000400 g       .mtb	00000000 _mtb_start
00006ca0  w    F .text	00000006 Reserved40_IRQHandler
00006f90  w    F .text	00000002 .hidden __aeabi_idiv0
00006ca0  w    F .text	00000006 LPTMR0_IRQHandler
000080f4 g     F .text	0000000e strlen
00006fa4 g     F .text	00000010 .hidden __aeabi_cdcmpeq
000072c4 g     F .text	000000c8 .hidden __gedf2
000085cc g     F .text	0000005c uart_send1
00008478 g     F .text	0000000c uart_is_uartNo
00008330 g     F .text	00000044 gpio_set
00008374 g     F .text	00000078 gpio_init
000080dc g     F .text	00000016 .hidden __clzdi2
00006ca0  w    F .text	00000006 CMP0_IRQHandler
00006f88 g     F .text	00000008 .hidden __aeabi_idivmod
00000000 g       *ABS*	00000000 MCU_FLASH_ADDR_START
00006ca0  w    F .text	00000006 DMA1_IRQHandler



Disassembly of section .text:

00006c10 <__do_global_dtors_aux>:
__do_global_dtors_aux():
    6c10:	b510      	push	{r4, lr}
    6c12:	4c06      	ldr	r4, [pc, #24]	; (6c2c <__do_global_dtors_aux+0x1c>)
    6c14:	7823      	ldrb	r3, [r4, #0]
    6c16:	2b00      	cmp	r3, #0
    6c18:	d107      	bne.n	6c2a <__do_global_dtors_aux+0x1a>
    6c1a:	4b05      	ldr	r3, [pc, #20]	; (6c30 <__do_global_dtors_aux+0x20>)
    6c1c:	2b00      	cmp	r3, #0
    6c1e:	d002      	beq.n	6c26 <__do_global_dtors_aux+0x16>
    6c20:	4804      	ldr	r0, [pc, #16]	; (6c34 <__do_global_dtors_aux+0x24>)
    6c22:	e000      	b.n	6c26 <__do_global_dtors_aux+0x16>
    6c24:	bf00      	nop
    6c26:	2301      	movs	r3, #1
    6c28:	7023      	strb	r3, [r4, #0]
    6c2a:	bd10      	pop	{r4, pc}
    6c2c:	20000408 	.word	0x20000408
    6c30:	00000000 	.word	0x00000000
    6c34:	00009218 	.word	0x00009218

00006c38 <frame_dummy>:
frame_dummy():
    6c38:	4b04      	ldr	r3, [pc, #16]	; (6c4c <frame_dummy+0x14>)
    6c3a:	b510      	push	{r4, lr}
    6c3c:	2b00      	cmp	r3, #0
    6c3e:	d003      	beq.n	6c48 <frame_dummy+0x10>
    6c40:	4903      	ldr	r1, [pc, #12]	; (6c50 <frame_dummy+0x18>)
    6c42:	4804      	ldr	r0, [pc, #16]	; (6c54 <frame_dummy+0x1c>)
    6c44:	e000      	b.n	6c48 <frame_dummy+0x10>
    6c46:	bf00      	nop
    6c48:	bd10      	pop	{r4, pc}
    6c4a:	46c0      	nop			; (mov r8, r8)
    6c4c:	00000000 	.word	0x00000000
    6c50:	2000040c 	.word	0x2000040c
    6c54:	00009218 	.word	0x00009218

00006c58 <Reset_Handler>:
Reset_Handler():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:118
    .align 2
    .globl   Reset_Handler
    .weak    Reset_Handler
    .type    Reset_Handler, %function
Reset_Handler:
    cpsid   i               /* Mask interrupts */
    6c58:	b672      	cpsid	i
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:120
#ifndef __NO_SYSTEM_INIT
    bl SystemInit
    6c5a:	f001 fa53 	bl	8104 <SystemInit>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:122
#endif
    cpsie   i               /* Unmask interrupts */
    6c5e:	b662      	cpsie	i
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:130
 *      linker script.
 *      __etext: End of code section, i.e., begin of data sections to copy from.
 *      __data_start__/__data_end__: RAM address range that data should be
 *      copied to. Both must be aligned to 4 bytes boundary.  */

    ldr    r1, =__etext
    6c60:	490a      	ldr	r1, [pc, #40]	; (6c8c <Reset_Handler+0x34>)
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:131
    ldr    r2, =__data_start__
    6c62:	4a0b      	ldr	r2, [pc, #44]	; (6c90 <Reset_Handler+0x38>)
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:132
    ldr    r3, =__data_end__
    6c64:	4b0b      	ldr	r3, [pc, #44]	; (6c94 <Reset_Handler+0x3c>)
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:134

    subs    r3, r2
    6c66:	1a9b      	subs	r3, r3, r2
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:135
    ble     .LC0
    6c68:	dd03      	ble.n	6c72 <Reset_Handler+0x1a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:138

.LC1:
    subs    r3, 4
    6c6a:	3b04      	subs	r3, #4
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:139
    ldr    r0, [r1,r3]
    6c6c:	58c8      	ldr	r0, [r1, r3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:140
    str    r0, [r2,r3]
    6c6e:	50d0      	str	r0, [r2, r3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:141
    bgt    .LC1
    6c70:	dcfb      	bgt.n	6c6a <Reset_Handler+0x12>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:154
 *     Loop to zero out BSS section, which uses following symbols
 *     in linker script:
 *      __bss_start__: start of BSS section. Must align to 4
 *      __bss_end__: end of BSS section. Must align to 4
 */
    ldr r1, =__bss_start__
    6c72:	4909      	ldr	r1, [pc, #36]	; (6c98 <Reset_Handler+0x40>)
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:155
    ldr r2, =__bss_end__
    6c74:	4a09      	ldr	r2, [pc, #36]	; (6c9c <Reset_Handler+0x44>)
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:157

    subs    r2, r1
    6c76:	1a52      	subs	r2, r2, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:158
    ble .LC3
    6c78:	dd03      	ble.n	6c82 <Reset_Handler+0x2a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:160

    movs    r0, 0
    6c7a:	2000      	movs	r0, #0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:162
.LC2:
    str r0, [r1, r2]
    6c7c:	5088      	str	r0, [r1, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:163
    subs    r2, 4
    6c7e:	3a04      	subs	r2, #4
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:164
    bge .LC2
    6c80:	dafc      	bge.n	6c7c <Reset_Handler+0x24>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:173
#define __START _start
#endif


/*【User程序修改处1】*/
	bl	 Vectors_Init  
    6c82:	f001 fbb3 	bl	83ec <Vectors_Init>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:175
  //  bl    __START
   bl main
    6c86:	f001 fa9f 	bl	81c8 <main>
    6c8a:	0000      	.short	0x0000
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:130
    ldr    r1, =__etext
    6c8c:	00009240 	.word	0x00009240
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:131
    ldr    r2, =__data_start__
    6c90:	20000400 	.word	0x20000400
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:132
    ldr    r3, =__data_end__
    6c94:	20000408 	.word	0x20000408
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:154
    ldr r1, =__bss_start__
    6c98:	20000408 	.word	0x20000408
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:155
    ldr r2, =__bss_end__
    6c9c:	20000428 	.word	0x20000428

00006ca0 <ADC0_IRQHandler>:
DMA1_IRQHandler():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:186
    .weak DefaultISR
    .type DefaultISR, %function
DefaultISR:    
    //ldr	r0, =DefaultISR   //误中断，进入无限循环
    //bx r0
       push  {lr}        //【20200326】WYH改，误中断，回原处
    6ca0:	b500      	push	{lr}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:187
       nop
    6ca2:	46c0      	nop			; (mov r8, r8)
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcs/startup_MKL36Z4.S:188
       pop   {pc}
    6ca4:	bd00      	pop	{pc}
    6ca6:	46c0      	nop			; (mov r8, r8)

00006ca8 <__udivsi3>:
__aeabi_uidiv():
    6ca8:	2200      	movs	r2, #0
    6caa:	0843      	lsrs	r3, r0, #1
    6cac:	428b      	cmp	r3, r1
    6cae:	d374      	bcc.n	6d9a <__udivsi3+0xf2>
    6cb0:	0903      	lsrs	r3, r0, #4
    6cb2:	428b      	cmp	r3, r1
    6cb4:	d35f      	bcc.n	6d76 <__udivsi3+0xce>
    6cb6:	0a03      	lsrs	r3, r0, #8
    6cb8:	428b      	cmp	r3, r1
    6cba:	d344      	bcc.n	6d46 <__udivsi3+0x9e>
    6cbc:	0b03      	lsrs	r3, r0, #12
    6cbe:	428b      	cmp	r3, r1
    6cc0:	d328      	bcc.n	6d14 <__udivsi3+0x6c>
    6cc2:	0c03      	lsrs	r3, r0, #16
    6cc4:	428b      	cmp	r3, r1
    6cc6:	d30d      	bcc.n	6ce4 <__udivsi3+0x3c>
    6cc8:	22ff      	movs	r2, #255	; 0xff
    6cca:	0209      	lsls	r1, r1, #8
    6ccc:	ba12      	rev	r2, r2
    6cce:	0c03      	lsrs	r3, r0, #16
    6cd0:	428b      	cmp	r3, r1
    6cd2:	d302      	bcc.n	6cda <__udivsi3+0x32>
    6cd4:	1212      	asrs	r2, r2, #8
    6cd6:	0209      	lsls	r1, r1, #8
    6cd8:	d065      	beq.n	6da6 <__udivsi3+0xfe>
    6cda:	0b03      	lsrs	r3, r0, #12
    6cdc:	428b      	cmp	r3, r1
    6cde:	d319      	bcc.n	6d14 <__udivsi3+0x6c>
    6ce0:	e000      	b.n	6ce4 <__udivsi3+0x3c>
    6ce2:	0a09      	lsrs	r1, r1, #8
    6ce4:	0bc3      	lsrs	r3, r0, #15
    6ce6:	428b      	cmp	r3, r1
    6ce8:	d301      	bcc.n	6cee <__udivsi3+0x46>
    6cea:	03cb      	lsls	r3, r1, #15
    6cec:	1ac0      	subs	r0, r0, r3
    6cee:	4152      	adcs	r2, r2
    6cf0:	0b83      	lsrs	r3, r0, #14
    6cf2:	428b      	cmp	r3, r1
    6cf4:	d301      	bcc.n	6cfa <__udivsi3+0x52>
    6cf6:	038b      	lsls	r3, r1, #14
    6cf8:	1ac0      	subs	r0, r0, r3
    6cfa:	4152      	adcs	r2, r2
    6cfc:	0b43      	lsrs	r3, r0, #13
    6cfe:	428b      	cmp	r3, r1
    6d00:	d301      	bcc.n	6d06 <__udivsi3+0x5e>
    6d02:	034b      	lsls	r3, r1, #13
    6d04:	1ac0      	subs	r0, r0, r3
    6d06:	4152      	adcs	r2, r2
    6d08:	0b03      	lsrs	r3, r0, #12
    6d0a:	428b      	cmp	r3, r1
    6d0c:	d301      	bcc.n	6d12 <__udivsi3+0x6a>
    6d0e:	030b      	lsls	r3, r1, #12
    6d10:	1ac0      	subs	r0, r0, r3
    6d12:	4152      	adcs	r2, r2
    6d14:	0ac3      	lsrs	r3, r0, #11
    6d16:	428b      	cmp	r3, r1
    6d18:	d301      	bcc.n	6d1e <__udivsi3+0x76>
    6d1a:	02cb      	lsls	r3, r1, #11
    6d1c:	1ac0      	subs	r0, r0, r3
    6d1e:	4152      	adcs	r2, r2
    6d20:	0a83      	lsrs	r3, r0, #10
    6d22:	428b      	cmp	r3, r1
    6d24:	d301      	bcc.n	6d2a <__udivsi3+0x82>
    6d26:	028b      	lsls	r3, r1, #10
    6d28:	1ac0      	subs	r0, r0, r3
    6d2a:	4152      	adcs	r2, r2
    6d2c:	0a43      	lsrs	r3, r0, #9
    6d2e:	428b      	cmp	r3, r1
    6d30:	d301      	bcc.n	6d36 <__udivsi3+0x8e>
    6d32:	024b      	lsls	r3, r1, #9
    6d34:	1ac0      	subs	r0, r0, r3
    6d36:	4152      	adcs	r2, r2
    6d38:	0a03      	lsrs	r3, r0, #8
    6d3a:	428b      	cmp	r3, r1
    6d3c:	d301      	bcc.n	6d42 <__udivsi3+0x9a>
    6d3e:	020b      	lsls	r3, r1, #8
    6d40:	1ac0      	subs	r0, r0, r3
    6d42:	4152      	adcs	r2, r2
    6d44:	d2cd      	bcs.n	6ce2 <__udivsi3+0x3a>
    6d46:	09c3      	lsrs	r3, r0, #7
    6d48:	428b      	cmp	r3, r1
    6d4a:	d301      	bcc.n	6d50 <__udivsi3+0xa8>
    6d4c:	01cb      	lsls	r3, r1, #7
    6d4e:	1ac0      	subs	r0, r0, r3
    6d50:	4152      	adcs	r2, r2
    6d52:	0983      	lsrs	r3, r0, #6
    6d54:	428b      	cmp	r3, r1
    6d56:	d301      	bcc.n	6d5c <__udivsi3+0xb4>
    6d58:	018b      	lsls	r3, r1, #6
    6d5a:	1ac0      	subs	r0, r0, r3
    6d5c:	4152      	adcs	r2, r2
    6d5e:	0943      	lsrs	r3, r0, #5
    6d60:	428b      	cmp	r3, r1
    6d62:	d301      	bcc.n	6d68 <__udivsi3+0xc0>
    6d64:	014b      	lsls	r3, r1, #5
    6d66:	1ac0      	subs	r0, r0, r3
    6d68:	4152      	adcs	r2, r2
    6d6a:	0903      	lsrs	r3, r0, #4
    6d6c:	428b      	cmp	r3, r1
    6d6e:	d301      	bcc.n	6d74 <__udivsi3+0xcc>
    6d70:	010b      	lsls	r3, r1, #4
    6d72:	1ac0      	subs	r0, r0, r3
    6d74:	4152      	adcs	r2, r2
    6d76:	08c3      	lsrs	r3, r0, #3
    6d78:	428b      	cmp	r3, r1
    6d7a:	d301      	bcc.n	6d80 <__udivsi3+0xd8>
    6d7c:	00cb      	lsls	r3, r1, #3
    6d7e:	1ac0      	subs	r0, r0, r3
    6d80:	4152      	adcs	r2, r2
    6d82:	0883      	lsrs	r3, r0, #2
    6d84:	428b      	cmp	r3, r1
    6d86:	d301      	bcc.n	6d8c <__udivsi3+0xe4>
    6d88:	008b      	lsls	r3, r1, #2
    6d8a:	1ac0      	subs	r0, r0, r3
    6d8c:	4152      	adcs	r2, r2
    6d8e:	0843      	lsrs	r3, r0, #1
    6d90:	428b      	cmp	r3, r1
    6d92:	d301      	bcc.n	6d98 <__udivsi3+0xf0>
    6d94:	004b      	lsls	r3, r1, #1
    6d96:	1ac0      	subs	r0, r0, r3
    6d98:	4152      	adcs	r2, r2
    6d9a:	1a41      	subs	r1, r0, r1
    6d9c:	d200      	bcs.n	6da0 <__udivsi3+0xf8>
    6d9e:	4601      	mov	r1, r0
    6da0:	4152      	adcs	r2, r2
    6da2:	4610      	mov	r0, r2
    6da4:	4770      	bx	lr
    6da6:	e7ff      	b.n	6da8 <__udivsi3+0x100>
    6da8:	b501      	push	{r0, lr}
    6daa:	2000      	movs	r0, #0
    6dac:	f000 f8f0 	bl	6f90 <__aeabi_idiv0>
    6db0:	bd02      	pop	{r1, pc}
    6db2:	46c0      	nop			; (mov r8, r8)

00006db4 <__aeabi_uidivmod>:
__aeabi_uidivmod():
    6db4:	2900      	cmp	r1, #0
    6db6:	d0f7      	beq.n	6da8 <__udivsi3+0x100>
    6db8:	e776      	b.n	6ca8 <__udivsi3>
    6dba:	4770      	bx	lr

00006dbc <__divsi3>:
__divsi3():
    6dbc:	4603      	mov	r3, r0
    6dbe:	430b      	orrs	r3, r1
    6dc0:	d47f      	bmi.n	6ec2 <__divsi3+0x106>
    6dc2:	2200      	movs	r2, #0
    6dc4:	0843      	lsrs	r3, r0, #1
    6dc6:	428b      	cmp	r3, r1
    6dc8:	d374      	bcc.n	6eb4 <__divsi3+0xf8>
    6dca:	0903      	lsrs	r3, r0, #4
    6dcc:	428b      	cmp	r3, r1
    6dce:	d35f      	bcc.n	6e90 <__divsi3+0xd4>
    6dd0:	0a03      	lsrs	r3, r0, #8
    6dd2:	428b      	cmp	r3, r1
    6dd4:	d344      	bcc.n	6e60 <__divsi3+0xa4>
    6dd6:	0b03      	lsrs	r3, r0, #12
    6dd8:	428b      	cmp	r3, r1
    6dda:	d328      	bcc.n	6e2e <__divsi3+0x72>
    6ddc:	0c03      	lsrs	r3, r0, #16
    6dde:	428b      	cmp	r3, r1
    6de0:	d30d      	bcc.n	6dfe <__divsi3+0x42>
    6de2:	22ff      	movs	r2, #255	; 0xff
    6de4:	0209      	lsls	r1, r1, #8
    6de6:	ba12      	rev	r2, r2
    6de8:	0c03      	lsrs	r3, r0, #16
    6dea:	428b      	cmp	r3, r1
    6dec:	d302      	bcc.n	6df4 <__divsi3+0x38>
    6dee:	1212      	asrs	r2, r2, #8
    6df0:	0209      	lsls	r1, r1, #8
    6df2:	d065      	beq.n	6ec0 <__divsi3+0x104>
    6df4:	0b03      	lsrs	r3, r0, #12
    6df6:	428b      	cmp	r3, r1
    6df8:	d319      	bcc.n	6e2e <__divsi3+0x72>
    6dfa:	e000      	b.n	6dfe <__divsi3+0x42>
    6dfc:	0a09      	lsrs	r1, r1, #8
    6dfe:	0bc3      	lsrs	r3, r0, #15
    6e00:	428b      	cmp	r3, r1
    6e02:	d301      	bcc.n	6e08 <__divsi3+0x4c>
    6e04:	03cb      	lsls	r3, r1, #15
    6e06:	1ac0      	subs	r0, r0, r3
    6e08:	4152      	adcs	r2, r2
    6e0a:	0b83      	lsrs	r3, r0, #14
    6e0c:	428b      	cmp	r3, r1
    6e0e:	d301      	bcc.n	6e14 <__divsi3+0x58>
    6e10:	038b      	lsls	r3, r1, #14
    6e12:	1ac0      	subs	r0, r0, r3
    6e14:	4152      	adcs	r2, r2
    6e16:	0b43      	lsrs	r3, r0, #13
    6e18:	428b      	cmp	r3, r1
    6e1a:	d301      	bcc.n	6e20 <__divsi3+0x64>
    6e1c:	034b      	lsls	r3, r1, #13
    6e1e:	1ac0      	subs	r0, r0, r3
    6e20:	4152      	adcs	r2, r2
    6e22:	0b03      	lsrs	r3, r0, #12
    6e24:	428b      	cmp	r3, r1
    6e26:	d301      	bcc.n	6e2c <__divsi3+0x70>
    6e28:	030b      	lsls	r3, r1, #12
    6e2a:	1ac0      	subs	r0, r0, r3
    6e2c:	4152      	adcs	r2, r2
    6e2e:	0ac3      	lsrs	r3, r0, #11
    6e30:	428b      	cmp	r3, r1
    6e32:	d301      	bcc.n	6e38 <__divsi3+0x7c>
    6e34:	02cb      	lsls	r3, r1, #11
    6e36:	1ac0      	subs	r0, r0, r3
    6e38:	4152      	adcs	r2, r2
    6e3a:	0a83      	lsrs	r3, r0, #10
    6e3c:	428b      	cmp	r3, r1
    6e3e:	d301      	bcc.n	6e44 <__divsi3+0x88>
    6e40:	028b      	lsls	r3, r1, #10
    6e42:	1ac0      	subs	r0, r0, r3
    6e44:	4152      	adcs	r2, r2
    6e46:	0a43      	lsrs	r3, r0, #9
    6e48:	428b      	cmp	r3, r1
    6e4a:	d301      	bcc.n	6e50 <__divsi3+0x94>
    6e4c:	024b      	lsls	r3, r1, #9
    6e4e:	1ac0      	subs	r0, r0, r3
    6e50:	4152      	adcs	r2, r2
    6e52:	0a03      	lsrs	r3, r0, #8
    6e54:	428b      	cmp	r3, r1
    6e56:	d301      	bcc.n	6e5c <__divsi3+0xa0>
    6e58:	020b      	lsls	r3, r1, #8
    6e5a:	1ac0      	subs	r0, r0, r3
    6e5c:	4152      	adcs	r2, r2
    6e5e:	d2cd      	bcs.n	6dfc <__divsi3+0x40>
    6e60:	09c3      	lsrs	r3, r0, #7
    6e62:	428b      	cmp	r3, r1
    6e64:	d301      	bcc.n	6e6a <__divsi3+0xae>
    6e66:	01cb      	lsls	r3, r1, #7
    6e68:	1ac0      	subs	r0, r0, r3
    6e6a:	4152      	adcs	r2, r2
    6e6c:	0983      	lsrs	r3, r0, #6
    6e6e:	428b      	cmp	r3, r1
    6e70:	d301      	bcc.n	6e76 <__divsi3+0xba>
    6e72:	018b      	lsls	r3, r1, #6
    6e74:	1ac0      	subs	r0, r0, r3
    6e76:	4152      	adcs	r2, r2
    6e78:	0943      	lsrs	r3, r0, #5
    6e7a:	428b      	cmp	r3, r1
    6e7c:	d301      	bcc.n	6e82 <__divsi3+0xc6>
    6e7e:	014b      	lsls	r3, r1, #5
    6e80:	1ac0      	subs	r0, r0, r3
    6e82:	4152      	adcs	r2, r2
    6e84:	0903      	lsrs	r3, r0, #4
    6e86:	428b      	cmp	r3, r1
    6e88:	d301      	bcc.n	6e8e <__divsi3+0xd2>
    6e8a:	010b      	lsls	r3, r1, #4
    6e8c:	1ac0      	subs	r0, r0, r3
    6e8e:	4152      	adcs	r2, r2
    6e90:	08c3      	lsrs	r3, r0, #3
    6e92:	428b      	cmp	r3, r1
    6e94:	d301      	bcc.n	6e9a <__divsi3+0xde>
    6e96:	00cb      	lsls	r3, r1, #3
    6e98:	1ac0      	subs	r0, r0, r3
    6e9a:	4152      	adcs	r2, r2
    6e9c:	0883      	lsrs	r3, r0, #2
    6e9e:	428b      	cmp	r3, r1
    6ea0:	d301      	bcc.n	6ea6 <__divsi3+0xea>
    6ea2:	008b      	lsls	r3, r1, #2
    6ea4:	1ac0      	subs	r0, r0, r3
    6ea6:	4152      	adcs	r2, r2
    6ea8:	0843      	lsrs	r3, r0, #1
    6eaa:	428b      	cmp	r3, r1
    6eac:	d301      	bcc.n	6eb2 <__divsi3+0xf6>
    6eae:	004b      	lsls	r3, r1, #1
    6eb0:	1ac0      	subs	r0, r0, r3
    6eb2:	4152      	adcs	r2, r2
    6eb4:	1a41      	subs	r1, r0, r1
    6eb6:	d200      	bcs.n	6eba <__divsi3+0xfe>
    6eb8:	4601      	mov	r1, r0
    6eba:	4152      	adcs	r2, r2
    6ebc:	4610      	mov	r0, r2
    6ebe:	4770      	bx	lr
    6ec0:	e05d      	b.n	6f7e <__divsi3+0x1c2>
    6ec2:	0fca      	lsrs	r2, r1, #31
    6ec4:	d000      	beq.n	6ec8 <__divsi3+0x10c>
    6ec6:	4249      	negs	r1, r1
    6ec8:	1003      	asrs	r3, r0, #32
    6eca:	d300      	bcc.n	6ece <__divsi3+0x112>
    6ecc:	4240      	negs	r0, r0
    6ece:	4053      	eors	r3, r2
    6ed0:	2200      	movs	r2, #0
    6ed2:	469c      	mov	ip, r3
    6ed4:	0903      	lsrs	r3, r0, #4
    6ed6:	428b      	cmp	r3, r1
    6ed8:	d32d      	bcc.n	6f36 <__divsi3+0x17a>
    6eda:	0a03      	lsrs	r3, r0, #8
    6edc:	428b      	cmp	r3, r1
    6ede:	d312      	bcc.n	6f06 <__divsi3+0x14a>
    6ee0:	22fc      	movs	r2, #252	; 0xfc
    6ee2:	0189      	lsls	r1, r1, #6
    6ee4:	ba12      	rev	r2, r2
    6ee6:	0a03      	lsrs	r3, r0, #8
    6ee8:	428b      	cmp	r3, r1
    6eea:	d30c      	bcc.n	6f06 <__divsi3+0x14a>
    6eec:	0189      	lsls	r1, r1, #6
    6eee:	1192      	asrs	r2, r2, #6
    6ef0:	428b      	cmp	r3, r1
    6ef2:	d308      	bcc.n	6f06 <__divsi3+0x14a>
    6ef4:	0189      	lsls	r1, r1, #6
    6ef6:	1192      	asrs	r2, r2, #6
    6ef8:	428b      	cmp	r3, r1
    6efa:	d304      	bcc.n	6f06 <__divsi3+0x14a>
    6efc:	0189      	lsls	r1, r1, #6
    6efe:	d03a      	beq.n	6f76 <__divsi3+0x1ba>
    6f00:	1192      	asrs	r2, r2, #6
    6f02:	e000      	b.n	6f06 <__divsi3+0x14a>
    6f04:	0989      	lsrs	r1, r1, #6
    6f06:	09c3      	lsrs	r3, r0, #7
    6f08:	428b      	cmp	r3, r1
    6f0a:	d301      	bcc.n	6f10 <__divsi3+0x154>
    6f0c:	01cb      	lsls	r3, r1, #7
    6f0e:	1ac0      	subs	r0, r0, r3
    6f10:	4152      	adcs	r2, r2
    6f12:	0983      	lsrs	r3, r0, #6
    6f14:	428b      	cmp	r3, r1
    6f16:	d301      	bcc.n	6f1c <__divsi3+0x160>
    6f18:	018b      	lsls	r3, r1, #6
    6f1a:	1ac0      	subs	r0, r0, r3
    6f1c:	4152      	adcs	r2, r2
    6f1e:	0943      	lsrs	r3, r0, #5
    6f20:	428b      	cmp	r3, r1
    6f22:	d301      	bcc.n	6f28 <__divsi3+0x16c>
    6f24:	014b      	lsls	r3, r1, #5
    6f26:	1ac0      	subs	r0, r0, r3
    6f28:	4152      	adcs	r2, r2
    6f2a:	0903      	lsrs	r3, r0, #4
    6f2c:	428b      	cmp	r3, r1
    6f2e:	d301      	bcc.n	6f34 <__divsi3+0x178>
    6f30:	010b      	lsls	r3, r1, #4
    6f32:	1ac0      	subs	r0, r0, r3
    6f34:	4152      	adcs	r2, r2
    6f36:	08c3      	lsrs	r3, r0, #3
    6f38:	428b      	cmp	r3, r1
    6f3a:	d301      	bcc.n	6f40 <__divsi3+0x184>
    6f3c:	00cb      	lsls	r3, r1, #3
    6f3e:	1ac0      	subs	r0, r0, r3
    6f40:	4152      	adcs	r2, r2
    6f42:	0883      	lsrs	r3, r0, #2
    6f44:	428b      	cmp	r3, r1
    6f46:	d301      	bcc.n	6f4c <__divsi3+0x190>
    6f48:	008b      	lsls	r3, r1, #2
    6f4a:	1ac0      	subs	r0, r0, r3
    6f4c:	4152      	adcs	r2, r2
    6f4e:	d2d9      	bcs.n	6f04 <__divsi3+0x148>
    6f50:	0843      	lsrs	r3, r0, #1
    6f52:	428b      	cmp	r3, r1
    6f54:	d301      	bcc.n	6f5a <__divsi3+0x19e>
    6f56:	004b      	lsls	r3, r1, #1
    6f58:	1ac0      	subs	r0, r0, r3
    6f5a:	4152      	adcs	r2, r2
    6f5c:	1a41      	subs	r1, r0, r1
    6f5e:	d200      	bcs.n	6f62 <__divsi3+0x1a6>
    6f60:	4601      	mov	r1, r0
    6f62:	4663      	mov	r3, ip
    6f64:	4152      	adcs	r2, r2
    6f66:	105b      	asrs	r3, r3, #1
    6f68:	4610      	mov	r0, r2
    6f6a:	d301      	bcc.n	6f70 <__divsi3+0x1b4>
    6f6c:	4240      	negs	r0, r0
    6f6e:	2b00      	cmp	r3, #0
    6f70:	d500      	bpl.n	6f74 <__divsi3+0x1b8>
    6f72:	4249      	negs	r1, r1
    6f74:	4770      	bx	lr
    6f76:	4663      	mov	r3, ip
    6f78:	105b      	asrs	r3, r3, #1
    6f7a:	d300      	bcc.n	6f7e <__divsi3+0x1c2>
    6f7c:	4240      	negs	r0, r0
    6f7e:	b501      	push	{r0, lr}
    6f80:	2000      	movs	r0, #0
    6f82:	f000 f805 	bl	6f90 <__aeabi_idiv0>
    6f86:	bd02      	pop	{r1, pc}

00006f88 <__aeabi_idivmod>:
__aeabi_idivmod():
    6f88:	2900      	cmp	r1, #0
    6f8a:	d0f8      	beq.n	6f7e <__divsi3+0x1c2>
    6f8c:	e716      	b.n	6dbc <__divsi3>
    6f8e:	4770      	bx	lr

00006f90 <__aeabi_idiv0>:
__aeabi_idiv0():
    6f90:	4770      	bx	lr
    6f92:	46c0      	nop			; (mov r8, r8)

00006f94 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
    6f94:	4684      	mov	ip, r0
    6f96:	1c10      	adds	r0, r2, #0
    6f98:	4662      	mov	r2, ip
    6f9a:	468c      	mov	ip, r1
    6f9c:	1c19      	adds	r1, r3, #0
    6f9e:	4663      	mov	r3, ip
    6fa0:	e000      	b.n	6fa4 <__aeabi_cdcmpeq>
    6fa2:	46c0      	nop			; (mov r8, r8)

00006fa4 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
    6fa4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    6fa6:	f000 f9f1 	bl	738c <__ledf2>
    6faa:	2800      	cmp	r0, #0
    6fac:	d401      	bmi.n	6fb2 <__aeabi_cdcmpeq+0xe>
    6fae:	2100      	movs	r1, #0
    6fb0:	42c8      	cmn	r0, r1
    6fb2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00006fb4 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
    6fb4:	b510      	push	{r4, lr}
    6fb6:	f000 f949 	bl	724c <__eqdf2>
    6fba:	4240      	negs	r0, r0
    6fbc:	3001      	adds	r0, #1
    6fbe:	bd10      	pop	{r4, pc}

00006fc0 <__aeabi_dcmplt>:
__aeabi_dcmplt():
    6fc0:	b510      	push	{r4, lr}
    6fc2:	f000 f9e3 	bl	738c <__ledf2>
    6fc6:	2800      	cmp	r0, #0
    6fc8:	db01      	blt.n	6fce <__aeabi_dcmplt+0xe>
    6fca:	2000      	movs	r0, #0
    6fcc:	bd10      	pop	{r4, pc}
    6fce:	2001      	movs	r0, #1
    6fd0:	bd10      	pop	{r4, pc}
    6fd2:	46c0      	nop			; (mov r8, r8)

00006fd4 <__aeabi_dcmple>:
__aeabi_dcmple():
    6fd4:	b510      	push	{r4, lr}
    6fd6:	f000 f9d9 	bl	738c <__ledf2>
    6fda:	2800      	cmp	r0, #0
    6fdc:	dd01      	ble.n	6fe2 <__aeabi_dcmple+0xe>
    6fde:	2000      	movs	r0, #0
    6fe0:	bd10      	pop	{r4, pc}
    6fe2:	2001      	movs	r0, #1
    6fe4:	bd10      	pop	{r4, pc}
    6fe6:	46c0      	nop			; (mov r8, r8)

00006fe8 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
    6fe8:	b510      	push	{r4, lr}
    6fea:	f000 f96b 	bl	72c4 <__gedf2>
    6fee:	2800      	cmp	r0, #0
    6ff0:	dc01      	bgt.n	6ff6 <__aeabi_dcmpgt+0xe>
    6ff2:	2000      	movs	r0, #0
    6ff4:	bd10      	pop	{r4, pc}
    6ff6:	2001      	movs	r0, #1
    6ff8:	bd10      	pop	{r4, pc}
    6ffa:	46c0      	nop			; (mov r8, r8)

00006ffc <__aeabi_dcmpge>:
__aeabi_dcmpge():
    6ffc:	b510      	push	{r4, lr}
    6ffe:	f000 f961 	bl	72c4 <__gedf2>
    7002:	2800      	cmp	r0, #0
    7004:	da01      	bge.n	700a <__aeabi_dcmpge+0xe>
    7006:	2000      	movs	r0, #0
    7008:	bd10      	pop	{r4, pc}
    700a:	2001      	movs	r0, #1
    700c:	bd10      	pop	{r4, pc}
    700e:	46c0      	nop			; (mov r8, r8)

00007010 <__aeabi_uldivmod>:
__aeabi_uldivmod():
    7010:	2b00      	cmp	r3, #0
    7012:	d111      	bne.n	7038 <__aeabi_uldivmod+0x28>
    7014:	2a00      	cmp	r2, #0
    7016:	d10f      	bne.n	7038 <__aeabi_uldivmod+0x28>
    7018:	2900      	cmp	r1, #0
    701a:	d100      	bne.n	701e <__aeabi_uldivmod+0xe>
    701c:	2800      	cmp	r0, #0
    701e:	d002      	beq.n	7026 <__aeabi_uldivmod+0x16>
    7020:	2100      	movs	r1, #0
    7022:	43c9      	mvns	r1, r1
    7024:	1c08      	adds	r0, r1, #0
    7026:	b407      	push	{r0, r1, r2}
    7028:	4802      	ldr	r0, [pc, #8]	; (7034 <__aeabi_uldivmod+0x24>)
    702a:	a102      	add	r1, pc, #8	; (adr r1, 7034 <__aeabi_uldivmod+0x24>)
    702c:	1840      	adds	r0, r0, r1
    702e:	9002      	str	r0, [sp, #8]
    7030:	bd03      	pop	{r0, r1, pc}
    7032:	46c0      	nop			; (mov r8, r8)
    7034:	ffffff5d 	.word	0xffffff5d
    7038:	b403      	push	{r0, r1}
    703a:	4668      	mov	r0, sp
    703c:	b501      	push	{r0, lr}
    703e:	9802      	ldr	r0, [sp, #8]
    7040:	f000 f842 	bl	70c8 <__udivmoddi4>
    7044:	9b01      	ldr	r3, [sp, #4]
    7046:	469e      	mov	lr, r3
    7048:	b002      	add	sp, #8
    704a:	bc0c      	pop	{r2, r3}
    704c:	4770      	bx	lr
    704e:	46c0      	nop			; (mov r8, r8)

00007050 <__aeabi_d2uiz>:
__aeabi_d2uiz():
    7050:	b570      	push	{r4, r5, r6, lr}
    7052:	2200      	movs	r2, #0
    7054:	4b0c      	ldr	r3, [pc, #48]	; (7088 <__aeabi_d2uiz+0x38>)
    7056:	0004      	movs	r4, r0
    7058:	000d      	movs	r5, r1
    705a:	f7ff ffcf 	bl	6ffc <__aeabi_dcmpge>
    705e:	2800      	cmp	r0, #0
    7060:	d104      	bne.n	706c <__aeabi_d2uiz+0x1c>
    7062:	0020      	movs	r0, r4
    7064:	0029      	movs	r1, r5
    7066:	f000 ffb3 	bl	7fd0 <__aeabi_d2iz>
    706a:	bd70      	pop	{r4, r5, r6, pc}
    706c:	4b06      	ldr	r3, [pc, #24]	; (7088 <__aeabi_d2uiz+0x38>)
    706e:	2200      	movs	r2, #0
    7070:	0020      	movs	r0, r4
    7072:	0029      	movs	r1, r5
    7074:	f000 fc64 	bl	7940 <__aeabi_dsub>
    7078:	f000 ffaa 	bl	7fd0 <__aeabi_d2iz>
    707c:	2380      	movs	r3, #128	; 0x80
    707e:	061b      	lsls	r3, r3, #24
    7080:	469c      	mov	ip, r3
    7082:	4460      	add	r0, ip
    7084:	e7f1      	b.n	706a <__aeabi_d2uiz+0x1a>
    7086:	46c0      	nop			; (mov r8, r8)
    7088:	41e00000 	.word	0x41e00000

0000708c <__aeabi_d2ulz>:
__fixunsdfdi():
    708c:	b570      	push	{r4, r5, r6, lr}
    708e:	2200      	movs	r2, #0
    7090:	4b0b      	ldr	r3, [pc, #44]	; (70c0 <__aeabi_d2ulz+0x34>)
    7092:	000d      	movs	r5, r1
    7094:	0004      	movs	r4, r0
    7096:	f000 f9e1 	bl	745c <__aeabi_dmul>
    709a:	f7ff ffd9 	bl	7050 <__aeabi_d2uiz>
    709e:	0006      	movs	r6, r0
    70a0:	f000 ffcc 	bl	803c <__aeabi_ui2d>
    70a4:	2200      	movs	r2, #0
    70a6:	4b07      	ldr	r3, [pc, #28]	; (70c4 <__aeabi_d2ulz+0x38>)
    70a8:	f000 f9d8 	bl	745c <__aeabi_dmul>
    70ac:	0002      	movs	r2, r0
    70ae:	000b      	movs	r3, r1
    70b0:	0020      	movs	r0, r4
    70b2:	0029      	movs	r1, r5
    70b4:	f000 fc44 	bl	7940 <__aeabi_dsub>
    70b8:	f7ff ffca 	bl	7050 <__aeabi_d2uiz>
    70bc:	0031      	movs	r1, r6
    70be:	bd70      	pop	{r4, r5, r6, pc}
    70c0:	3df00000 	.word	0x3df00000
    70c4:	41f00000 	.word	0x41f00000

000070c8 <__udivmoddi4>:
__udivmoddi4():
    70c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    70ca:	464f      	mov	r7, r9
    70cc:	4646      	mov	r6, r8
    70ce:	46d6      	mov	lr, sl
    70d0:	b5c0      	push	{r6, r7, lr}
    70d2:	0004      	movs	r4, r0
    70d4:	b082      	sub	sp, #8
    70d6:	000d      	movs	r5, r1
    70d8:	4691      	mov	r9, r2
    70da:	4698      	mov	r8, r3
    70dc:	428b      	cmp	r3, r1
    70de:	d82f      	bhi.n	7140 <__udivmoddi4+0x78>
    70e0:	d02c      	beq.n	713c <__udivmoddi4+0x74>
    70e2:	4641      	mov	r1, r8
    70e4:	4648      	mov	r0, r9
    70e6:	f000 fff9 	bl	80dc <__clzdi2>
    70ea:	0029      	movs	r1, r5
    70ec:	0006      	movs	r6, r0
    70ee:	0020      	movs	r0, r4
    70f0:	f000 fff4 	bl	80dc <__clzdi2>
    70f4:	1a33      	subs	r3, r6, r0
    70f6:	469c      	mov	ip, r3
    70f8:	3b20      	subs	r3, #32
    70fa:	469a      	mov	sl, r3
    70fc:	d500      	bpl.n	7100 <__udivmoddi4+0x38>
    70fe:	e076      	b.n	71ee <__udivmoddi4+0x126>
    7100:	464b      	mov	r3, r9
    7102:	4652      	mov	r2, sl
    7104:	4093      	lsls	r3, r2
    7106:	001f      	movs	r7, r3
    7108:	464b      	mov	r3, r9
    710a:	4662      	mov	r2, ip
    710c:	4093      	lsls	r3, r2
    710e:	001e      	movs	r6, r3
    7110:	42af      	cmp	r7, r5
    7112:	d828      	bhi.n	7166 <__udivmoddi4+0x9e>
    7114:	d025      	beq.n	7162 <__udivmoddi4+0x9a>
    7116:	4653      	mov	r3, sl
    7118:	1ba4      	subs	r4, r4, r6
    711a:	41bd      	sbcs	r5, r7
    711c:	2b00      	cmp	r3, #0
    711e:	da00      	bge.n	7122 <__udivmoddi4+0x5a>
    7120:	e07b      	b.n	721a <__udivmoddi4+0x152>
    7122:	2200      	movs	r2, #0
    7124:	2300      	movs	r3, #0
    7126:	9200      	str	r2, [sp, #0]
    7128:	9301      	str	r3, [sp, #4]
    712a:	2301      	movs	r3, #1
    712c:	4652      	mov	r2, sl
    712e:	4093      	lsls	r3, r2
    7130:	9301      	str	r3, [sp, #4]
    7132:	2301      	movs	r3, #1
    7134:	4662      	mov	r2, ip
    7136:	4093      	lsls	r3, r2
    7138:	9300      	str	r3, [sp, #0]
    713a:	e018      	b.n	716e <__udivmoddi4+0xa6>
    713c:	4282      	cmp	r2, r0
    713e:	d9d0      	bls.n	70e2 <__udivmoddi4+0x1a>
    7140:	2200      	movs	r2, #0
    7142:	2300      	movs	r3, #0
    7144:	9200      	str	r2, [sp, #0]
    7146:	9301      	str	r3, [sp, #4]
    7148:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    714a:	2b00      	cmp	r3, #0
    714c:	d001      	beq.n	7152 <__udivmoddi4+0x8a>
    714e:	601c      	str	r4, [r3, #0]
    7150:	605d      	str	r5, [r3, #4]
    7152:	9800      	ldr	r0, [sp, #0]
    7154:	9901      	ldr	r1, [sp, #4]
    7156:	b002      	add	sp, #8
    7158:	bc1c      	pop	{r2, r3, r4}
    715a:	4690      	mov	r8, r2
    715c:	4699      	mov	r9, r3
    715e:	46a2      	mov	sl, r4
    7160:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7162:	42a3      	cmp	r3, r4
    7164:	d9d7      	bls.n	7116 <__udivmoddi4+0x4e>
    7166:	2200      	movs	r2, #0
    7168:	2300      	movs	r3, #0
    716a:	9200      	str	r2, [sp, #0]
    716c:	9301      	str	r3, [sp, #4]
    716e:	4663      	mov	r3, ip
    7170:	2b00      	cmp	r3, #0
    7172:	d0e9      	beq.n	7148 <__udivmoddi4+0x80>
    7174:	07fb      	lsls	r3, r7, #31
    7176:	4698      	mov	r8, r3
    7178:	4641      	mov	r1, r8
    717a:	0872      	lsrs	r2, r6, #1
    717c:	430a      	orrs	r2, r1
    717e:	087b      	lsrs	r3, r7, #1
    7180:	4666      	mov	r6, ip
    7182:	e00e      	b.n	71a2 <__udivmoddi4+0xda>
    7184:	42ab      	cmp	r3, r5
    7186:	d101      	bne.n	718c <__udivmoddi4+0xc4>
    7188:	42a2      	cmp	r2, r4
    718a:	d80c      	bhi.n	71a6 <__udivmoddi4+0xde>
    718c:	1aa4      	subs	r4, r4, r2
    718e:	419d      	sbcs	r5, r3
    7190:	2001      	movs	r0, #1
    7192:	1924      	adds	r4, r4, r4
    7194:	416d      	adcs	r5, r5
    7196:	2100      	movs	r1, #0
    7198:	3e01      	subs	r6, #1
    719a:	1824      	adds	r4, r4, r0
    719c:	414d      	adcs	r5, r1
    719e:	2e00      	cmp	r6, #0
    71a0:	d006      	beq.n	71b0 <__udivmoddi4+0xe8>
    71a2:	42ab      	cmp	r3, r5
    71a4:	d9ee      	bls.n	7184 <__udivmoddi4+0xbc>
    71a6:	3e01      	subs	r6, #1
    71a8:	1924      	adds	r4, r4, r4
    71aa:	416d      	adcs	r5, r5
    71ac:	2e00      	cmp	r6, #0
    71ae:	d1f8      	bne.n	71a2 <__udivmoddi4+0xda>
    71b0:	9800      	ldr	r0, [sp, #0]
    71b2:	9901      	ldr	r1, [sp, #4]
    71b4:	4653      	mov	r3, sl
    71b6:	1900      	adds	r0, r0, r4
    71b8:	4169      	adcs	r1, r5
    71ba:	2b00      	cmp	r3, #0
    71bc:	db23      	blt.n	7206 <__udivmoddi4+0x13e>
    71be:	002b      	movs	r3, r5
    71c0:	4652      	mov	r2, sl
    71c2:	40d3      	lsrs	r3, r2
    71c4:	002a      	movs	r2, r5
    71c6:	4664      	mov	r4, ip
    71c8:	40e2      	lsrs	r2, r4
    71ca:	001c      	movs	r4, r3
    71cc:	4653      	mov	r3, sl
    71ce:	0015      	movs	r5, r2
    71d0:	2b00      	cmp	r3, #0
    71d2:	db2d      	blt.n	7230 <__udivmoddi4+0x168>
    71d4:	0026      	movs	r6, r4
    71d6:	4657      	mov	r7, sl
    71d8:	40be      	lsls	r6, r7
    71da:	0033      	movs	r3, r6
    71dc:	0026      	movs	r6, r4
    71de:	4667      	mov	r7, ip
    71e0:	40be      	lsls	r6, r7
    71e2:	0032      	movs	r2, r6
    71e4:	1a80      	subs	r0, r0, r2
    71e6:	4199      	sbcs	r1, r3
    71e8:	9000      	str	r0, [sp, #0]
    71ea:	9101      	str	r1, [sp, #4]
    71ec:	e7ac      	b.n	7148 <__udivmoddi4+0x80>
    71ee:	4662      	mov	r2, ip
    71f0:	2320      	movs	r3, #32
    71f2:	1a9b      	subs	r3, r3, r2
    71f4:	464a      	mov	r2, r9
    71f6:	40da      	lsrs	r2, r3
    71f8:	4661      	mov	r1, ip
    71fa:	0013      	movs	r3, r2
    71fc:	4642      	mov	r2, r8
    71fe:	408a      	lsls	r2, r1
    7200:	0017      	movs	r7, r2
    7202:	431f      	orrs	r7, r3
    7204:	e780      	b.n	7108 <__udivmoddi4+0x40>
    7206:	4662      	mov	r2, ip
    7208:	2320      	movs	r3, #32
    720a:	1a9b      	subs	r3, r3, r2
    720c:	002a      	movs	r2, r5
    720e:	4666      	mov	r6, ip
    7210:	409a      	lsls	r2, r3
    7212:	0023      	movs	r3, r4
    7214:	40f3      	lsrs	r3, r6
    7216:	4313      	orrs	r3, r2
    7218:	e7d4      	b.n	71c4 <__udivmoddi4+0xfc>
    721a:	4662      	mov	r2, ip
    721c:	2320      	movs	r3, #32
    721e:	2100      	movs	r1, #0
    7220:	1a9b      	subs	r3, r3, r2
    7222:	2200      	movs	r2, #0
    7224:	9100      	str	r1, [sp, #0]
    7226:	9201      	str	r2, [sp, #4]
    7228:	2201      	movs	r2, #1
    722a:	40da      	lsrs	r2, r3
    722c:	9201      	str	r2, [sp, #4]
    722e:	e780      	b.n	7132 <__udivmoddi4+0x6a>
    7230:	2320      	movs	r3, #32
    7232:	4662      	mov	r2, ip
    7234:	0026      	movs	r6, r4
    7236:	1a9b      	subs	r3, r3, r2
    7238:	40de      	lsrs	r6, r3
    723a:	002f      	movs	r7, r5
    723c:	46b0      	mov	r8, r6
    723e:	4666      	mov	r6, ip
    7240:	40b7      	lsls	r7, r6
    7242:	4646      	mov	r6, r8
    7244:	003b      	movs	r3, r7
    7246:	4333      	orrs	r3, r6
    7248:	e7c8      	b.n	71dc <__udivmoddi4+0x114>
    724a:	46c0      	nop			; (mov r8, r8)

0000724c <__eqdf2>:
__nedf2():
    724c:	b5f0      	push	{r4, r5, r6, r7, lr}
    724e:	464f      	mov	r7, r9
    7250:	4646      	mov	r6, r8
    7252:	46d6      	mov	lr, sl
    7254:	4684      	mov	ip, r0
    7256:	b5c0      	push	{r6, r7, lr}
    7258:	4680      	mov	r8, r0
    725a:	4e19      	ldr	r6, [pc, #100]	; (72c0 <__eqdf2+0x74>)
    725c:	0318      	lsls	r0, r3, #12
    725e:	030f      	lsls	r7, r1, #12
    7260:	004d      	lsls	r5, r1, #1
    7262:	0b00      	lsrs	r0, r0, #12
    7264:	005c      	lsls	r4, r3, #1
    7266:	4682      	mov	sl, r0
    7268:	0b3f      	lsrs	r7, r7, #12
    726a:	0d6d      	lsrs	r5, r5, #21
    726c:	0fc9      	lsrs	r1, r1, #31
    726e:	4691      	mov	r9, r2
    7270:	0d64      	lsrs	r4, r4, #21
    7272:	0fdb      	lsrs	r3, r3, #31
    7274:	2001      	movs	r0, #1
    7276:	42b5      	cmp	r5, r6
    7278:	d00a      	beq.n	7290 <__eqdf2+0x44>
    727a:	42b4      	cmp	r4, r6
    727c:	d003      	beq.n	7286 <__eqdf2+0x3a>
    727e:	42a5      	cmp	r5, r4
    7280:	d101      	bne.n	7286 <__eqdf2+0x3a>
    7282:	4557      	cmp	r7, sl
    7284:	d00c      	beq.n	72a0 <__eqdf2+0x54>
    7286:	bc1c      	pop	{r2, r3, r4}
    7288:	4690      	mov	r8, r2
    728a:	4699      	mov	r9, r3
    728c:	46a2      	mov	sl, r4
    728e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7290:	4666      	mov	r6, ip
    7292:	433e      	orrs	r6, r7
    7294:	d1f7      	bne.n	7286 <__eqdf2+0x3a>
    7296:	42ac      	cmp	r4, r5
    7298:	d1f5      	bne.n	7286 <__eqdf2+0x3a>
    729a:	4654      	mov	r4, sl
    729c:	4314      	orrs	r4, r2
    729e:	d1f2      	bne.n	7286 <__eqdf2+0x3a>
    72a0:	2001      	movs	r0, #1
    72a2:	45c8      	cmp	r8, r9
    72a4:	d1ef      	bne.n	7286 <__eqdf2+0x3a>
    72a6:	4299      	cmp	r1, r3
    72a8:	d007      	beq.n	72ba <__eqdf2+0x6e>
    72aa:	2d00      	cmp	r5, #0
    72ac:	d1eb      	bne.n	7286 <__eqdf2+0x3a>
    72ae:	4663      	mov	r3, ip
    72b0:	431f      	orrs	r7, r3
    72b2:	0038      	movs	r0, r7
    72b4:	1e47      	subs	r7, r0, #1
    72b6:	41b8      	sbcs	r0, r7
    72b8:	e7e5      	b.n	7286 <__eqdf2+0x3a>
    72ba:	2000      	movs	r0, #0
    72bc:	e7e3      	b.n	7286 <__eqdf2+0x3a>
    72be:	46c0      	nop			; (mov r8, r8)
    72c0:	000007ff 	.word	0x000007ff

000072c4 <__gedf2>:
__gedf2():
    72c4:	b5f0      	push	{r4, r5, r6, r7, lr}
    72c6:	464f      	mov	r7, r9
    72c8:	4646      	mov	r6, r8
    72ca:	46d6      	mov	lr, sl
    72cc:	004d      	lsls	r5, r1, #1
    72ce:	b5c0      	push	{r6, r7, lr}
    72d0:	030e      	lsls	r6, r1, #12
    72d2:	0fc9      	lsrs	r1, r1, #31
    72d4:	468a      	mov	sl, r1
    72d6:	492c      	ldr	r1, [pc, #176]	; (7388 <__gedf2+0xc4>)
    72d8:	031f      	lsls	r7, r3, #12
    72da:	005c      	lsls	r4, r3, #1
    72dc:	4680      	mov	r8, r0
    72de:	0b36      	lsrs	r6, r6, #12
    72e0:	0d6d      	lsrs	r5, r5, #21
    72e2:	4691      	mov	r9, r2
    72e4:	0b3f      	lsrs	r7, r7, #12
    72e6:	0d64      	lsrs	r4, r4, #21
    72e8:	0fdb      	lsrs	r3, r3, #31
    72ea:	428d      	cmp	r5, r1
    72ec:	d01e      	beq.n	732c <__gedf2+0x68>
    72ee:	428c      	cmp	r4, r1
    72f0:	d016      	beq.n	7320 <__gedf2+0x5c>
    72f2:	2d00      	cmp	r5, #0
    72f4:	d11e      	bne.n	7334 <__gedf2+0x70>
    72f6:	4330      	orrs	r0, r6
    72f8:	4684      	mov	ip, r0
    72fa:	2c00      	cmp	r4, #0
    72fc:	d101      	bne.n	7302 <__gedf2+0x3e>
    72fe:	433a      	orrs	r2, r7
    7300:	d023      	beq.n	734a <__gedf2+0x86>
    7302:	4662      	mov	r2, ip
    7304:	2a00      	cmp	r2, #0
    7306:	d01a      	beq.n	733e <__gedf2+0x7a>
    7308:	459a      	cmp	sl, r3
    730a:	d029      	beq.n	7360 <__gedf2+0x9c>
    730c:	4651      	mov	r1, sl
    730e:	2002      	movs	r0, #2
    7310:	3901      	subs	r1, #1
    7312:	4008      	ands	r0, r1
    7314:	3801      	subs	r0, #1
    7316:	bc1c      	pop	{r2, r3, r4}
    7318:	4690      	mov	r8, r2
    731a:	4699      	mov	r9, r3
    731c:	46a2      	mov	sl, r4
    731e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7320:	0039      	movs	r1, r7
    7322:	4311      	orrs	r1, r2
    7324:	d0e5      	beq.n	72f2 <__gedf2+0x2e>
    7326:	2002      	movs	r0, #2
    7328:	4240      	negs	r0, r0
    732a:	e7f4      	b.n	7316 <__gedf2+0x52>
    732c:	4330      	orrs	r0, r6
    732e:	d1fa      	bne.n	7326 <__gedf2+0x62>
    7330:	42ac      	cmp	r4, r5
    7332:	d00f      	beq.n	7354 <__gedf2+0x90>
    7334:	2c00      	cmp	r4, #0
    7336:	d10f      	bne.n	7358 <__gedf2+0x94>
    7338:	433a      	orrs	r2, r7
    733a:	d0e7      	beq.n	730c <__gedf2+0x48>
    733c:	e00c      	b.n	7358 <__gedf2+0x94>
    733e:	2201      	movs	r2, #1
    7340:	3b01      	subs	r3, #1
    7342:	4393      	bics	r3, r2
    7344:	0018      	movs	r0, r3
    7346:	3001      	adds	r0, #1
    7348:	e7e5      	b.n	7316 <__gedf2+0x52>
    734a:	4663      	mov	r3, ip
    734c:	2000      	movs	r0, #0
    734e:	2b00      	cmp	r3, #0
    7350:	d0e1      	beq.n	7316 <__gedf2+0x52>
    7352:	e7db      	b.n	730c <__gedf2+0x48>
    7354:	433a      	orrs	r2, r7
    7356:	d1e6      	bne.n	7326 <__gedf2+0x62>
    7358:	459a      	cmp	sl, r3
    735a:	d1d7      	bne.n	730c <__gedf2+0x48>
    735c:	42a5      	cmp	r5, r4
    735e:	dcd5      	bgt.n	730c <__gedf2+0x48>
    7360:	42a5      	cmp	r5, r4
    7362:	db05      	blt.n	7370 <__gedf2+0xac>
    7364:	42be      	cmp	r6, r7
    7366:	d8d1      	bhi.n	730c <__gedf2+0x48>
    7368:	d008      	beq.n	737c <__gedf2+0xb8>
    736a:	2000      	movs	r0, #0
    736c:	42be      	cmp	r6, r7
    736e:	d2d2      	bcs.n	7316 <__gedf2+0x52>
    7370:	4650      	mov	r0, sl
    7372:	2301      	movs	r3, #1
    7374:	3801      	subs	r0, #1
    7376:	4398      	bics	r0, r3
    7378:	3001      	adds	r0, #1
    737a:	e7cc      	b.n	7316 <__gedf2+0x52>
    737c:	45c8      	cmp	r8, r9
    737e:	d8c5      	bhi.n	730c <__gedf2+0x48>
    7380:	2000      	movs	r0, #0
    7382:	45c8      	cmp	r8, r9
    7384:	d3f4      	bcc.n	7370 <__gedf2+0xac>
    7386:	e7c6      	b.n	7316 <__gedf2+0x52>
    7388:	000007ff 	.word	0x000007ff

0000738c <__ledf2>:
__ledf2():
    738c:	b5f0      	push	{r4, r5, r6, r7, lr}
    738e:	464f      	mov	r7, r9
    7390:	4646      	mov	r6, r8
    7392:	46d6      	mov	lr, sl
    7394:	004d      	lsls	r5, r1, #1
    7396:	b5c0      	push	{r6, r7, lr}
    7398:	030e      	lsls	r6, r1, #12
    739a:	0fc9      	lsrs	r1, r1, #31
    739c:	468a      	mov	sl, r1
    739e:	492e      	ldr	r1, [pc, #184]	; (7458 <__ledf2+0xcc>)
    73a0:	031f      	lsls	r7, r3, #12
    73a2:	005c      	lsls	r4, r3, #1
    73a4:	4680      	mov	r8, r0
    73a6:	0b36      	lsrs	r6, r6, #12
    73a8:	0d6d      	lsrs	r5, r5, #21
    73aa:	4691      	mov	r9, r2
    73ac:	0b3f      	lsrs	r7, r7, #12
    73ae:	0d64      	lsrs	r4, r4, #21
    73b0:	0fdb      	lsrs	r3, r3, #31
    73b2:	428d      	cmp	r5, r1
    73b4:	d018      	beq.n	73e8 <__ledf2+0x5c>
    73b6:	428c      	cmp	r4, r1
    73b8:	d011      	beq.n	73de <__ledf2+0x52>
    73ba:	2d00      	cmp	r5, #0
    73bc:	d118      	bne.n	73f0 <__ledf2+0x64>
    73be:	4330      	orrs	r0, r6
    73c0:	4684      	mov	ip, r0
    73c2:	2c00      	cmp	r4, #0
    73c4:	d11e      	bne.n	7404 <__ledf2+0x78>
    73c6:	433a      	orrs	r2, r7
    73c8:	d11c      	bne.n	7404 <__ledf2+0x78>
    73ca:	4663      	mov	r3, ip
    73cc:	2000      	movs	r0, #0
    73ce:	2b00      	cmp	r3, #0
    73d0:	d030      	beq.n	7434 <__ledf2+0xa8>
    73d2:	4651      	mov	r1, sl
    73d4:	2002      	movs	r0, #2
    73d6:	3901      	subs	r1, #1
    73d8:	4008      	ands	r0, r1
    73da:	3801      	subs	r0, #1
    73dc:	e02a      	b.n	7434 <__ledf2+0xa8>
    73de:	0039      	movs	r1, r7
    73e0:	4311      	orrs	r1, r2
    73e2:	d0ea      	beq.n	73ba <__ledf2+0x2e>
    73e4:	2002      	movs	r0, #2
    73e6:	e025      	b.n	7434 <__ledf2+0xa8>
    73e8:	4330      	orrs	r0, r6
    73ea:	d1fb      	bne.n	73e4 <__ledf2+0x58>
    73ec:	42ac      	cmp	r4, r5
    73ee:	d026      	beq.n	743e <__ledf2+0xb2>
    73f0:	2c00      	cmp	r4, #0
    73f2:	d126      	bne.n	7442 <__ledf2+0xb6>
    73f4:	433a      	orrs	r2, r7
    73f6:	d124      	bne.n	7442 <__ledf2+0xb6>
    73f8:	4651      	mov	r1, sl
    73fa:	2002      	movs	r0, #2
    73fc:	3901      	subs	r1, #1
    73fe:	4008      	ands	r0, r1
    7400:	3801      	subs	r0, #1
    7402:	e017      	b.n	7434 <__ledf2+0xa8>
    7404:	4662      	mov	r2, ip
    7406:	2a00      	cmp	r2, #0
    7408:	d00f      	beq.n	742a <__ledf2+0x9e>
    740a:	459a      	cmp	sl, r3
    740c:	d1e1      	bne.n	73d2 <__ledf2+0x46>
    740e:	42a5      	cmp	r5, r4
    7410:	db05      	blt.n	741e <__ledf2+0x92>
    7412:	42be      	cmp	r6, r7
    7414:	d8dd      	bhi.n	73d2 <__ledf2+0x46>
    7416:	d019      	beq.n	744c <__ledf2+0xc0>
    7418:	2000      	movs	r0, #0
    741a:	42be      	cmp	r6, r7
    741c:	d20a      	bcs.n	7434 <__ledf2+0xa8>
    741e:	4650      	mov	r0, sl
    7420:	2301      	movs	r3, #1
    7422:	3801      	subs	r0, #1
    7424:	4398      	bics	r0, r3
    7426:	3001      	adds	r0, #1
    7428:	e004      	b.n	7434 <__ledf2+0xa8>
    742a:	2201      	movs	r2, #1
    742c:	3b01      	subs	r3, #1
    742e:	4393      	bics	r3, r2
    7430:	0018      	movs	r0, r3
    7432:	3001      	adds	r0, #1
    7434:	bc1c      	pop	{r2, r3, r4}
    7436:	4690      	mov	r8, r2
    7438:	4699      	mov	r9, r3
    743a:	46a2      	mov	sl, r4
    743c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    743e:	433a      	orrs	r2, r7
    7440:	d1d0      	bne.n	73e4 <__ledf2+0x58>
    7442:	459a      	cmp	sl, r3
    7444:	d1c5      	bne.n	73d2 <__ledf2+0x46>
    7446:	42a5      	cmp	r5, r4
    7448:	dcc3      	bgt.n	73d2 <__ledf2+0x46>
    744a:	e7e0      	b.n	740e <__ledf2+0x82>
    744c:	45c8      	cmp	r8, r9
    744e:	d8c0      	bhi.n	73d2 <__ledf2+0x46>
    7450:	2000      	movs	r0, #0
    7452:	45c8      	cmp	r8, r9
    7454:	d3e3      	bcc.n	741e <__ledf2+0x92>
    7456:	e7ed      	b.n	7434 <__ledf2+0xa8>
    7458:	000007ff 	.word	0x000007ff

0000745c <__aeabi_dmul>:
__aeabi_dmul():
    745c:	b5f0      	push	{r4, r5, r6, r7, lr}
    745e:	4657      	mov	r7, sl
    7460:	46de      	mov	lr, fp
    7462:	464e      	mov	r6, r9
    7464:	4645      	mov	r5, r8
    7466:	b5e0      	push	{r5, r6, r7, lr}
    7468:	4683      	mov	fp, r0
    746a:	0006      	movs	r6, r0
    746c:	030f      	lsls	r7, r1, #12
    746e:	0048      	lsls	r0, r1, #1
    7470:	b087      	sub	sp, #28
    7472:	4692      	mov	sl, r2
    7474:	001d      	movs	r5, r3
    7476:	0b3f      	lsrs	r7, r7, #12
    7478:	0d40      	lsrs	r0, r0, #21
    747a:	0fcc      	lsrs	r4, r1, #31
    747c:	2800      	cmp	r0, #0
    747e:	d100      	bne.n	7482 <__aeabi_dmul+0x26>
    7480:	e06f      	b.n	7562 <__aeabi_dmul+0x106>
    7482:	4bde      	ldr	r3, [pc, #888]	; (77fc <__aeabi_dmul+0x3a0>)
    7484:	4298      	cmp	r0, r3
    7486:	d038      	beq.n	74fa <__aeabi_dmul+0x9e>
    7488:	2380      	movs	r3, #128	; 0x80
    748a:	00ff      	lsls	r7, r7, #3
    748c:	041b      	lsls	r3, r3, #16
    748e:	431f      	orrs	r7, r3
    7490:	0f73      	lsrs	r3, r6, #29
    7492:	433b      	orrs	r3, r7
    7494:	9301      	str	r3, [sp, #4]
    7496:	4bda      	ldr	r3, [pc, #872]	; (7800 <__aeabi_dmul+0x3a4>)
    7498:	2700      	movs	r7, #0
    749a:	4699      	mov	r9, r3
    749c:	2300      	movs	r3, #0
    749e:	469b      	mov	fp, r3
    74a0:	00f6      	lsls	r6, r6, #3
    74a2:	4481      	add	r9, r0
    74a4:	032b      	lsls	r3, r5, #12
    74a6:	0069      	lsls	r1, r5, #1
    74a8:	0b1b      	lsrs	r3, r3, #12
    74aa:	4652      	mov	r2, sl
    74ac:	4698      	mov	r8, r3
    74ae:	0d49      	lsrs	r1, r1, #21
    74b0:	0fed      	lsrs	r5, r5, #31
    74b2:	2900      	cmp	r1, #0
    74b4:	d100      	bne.n	74b8 <__aeabi_dmul+0x5c>
    74b6:	e085      	b.n	75c4 <__aeabi_dmul+0x168>
    74b8:	4bd0      	ldr	r3, [pc, #832]	; (77fc <__aeabi_dmul+0x3a0>)
    74ba:	4299      	cmp	r1, r3
    74bc:	d100      	bne.n	74c0 <__aeabi_dmul+0x64>
    74be:	e073      	b.n	75a8 <__aeabi_dmul+0x14c>
    74c0:	4643      	mov	r3, r8
    74c2:	00da      	lsls	r2, r3, #3
    74c4:	2380      	movs	r3, #128	; 0x80
    74c6:	041b      	lsls	r3, r3, #16
    74c8:	4313      	orrs	r3, r2
    74ca:	4652      	mov	r2, sl
    74cc:	48cc      	ldr	r0, [pc, #816]	; (7800 <__aeabi_dmul+0x3a4>)
    74ce:	0f52      	lsrs	r2, r2, #29
    74d0:	4684      	mov	ip, r0
    74d2:	4313      	orrs	r3, r2
    74d4:	4652      	mov	r2, sl
    74d6:	2000      	movs	r0, #0
    74d8:	4461      	add	r1, ip
    74da:	00d2      	lsls	r2, r2, #3
    74dc:	4489      	add	r9, r1
    74de:	0021      	movs	r1, r4
    74e0:	4069      	eors	r1, r5
    74e2:	9100      	str	r1, [sp, #0]
    74e4:	468c      	mov	ip, r1
    74e6:	2101      	movs	r1, #1
    74e8:	4449      	add	r1, r9
    74ea:	468a      	mov	sl, r1
    74ec:	2f0f      	cmp	r7, #15
    74ee:	d900      	bls.n	74f2 <__aeabi_dmul+0x96>
    74f0:	e090      	b.n	7614 <__aeabi_dmul+0x1b8>
    74f2:	49c4      	ldr	r1, [pc, #784]	; (7804 <__aeabi_dmul+0x3a8>)
    74f4:	00bf      	lsls	r7, r7, #2
    74f6:	59cf      	ldr	r7, [r1, r7]
    74f8:	46bf      	mov	pc, r7
    74fa:	465b      	mov	r3, fp
    74fc:	433b      	orrs	r3, r7
    74fe:	9301      	str	r3, [sp, #4]
    7500:	d000      	beq.n	7504 <__aeabi_dmul+0xa8>
    7502:	e16a      	b.n	77da <__aeabi_dmul+0x37e>
    7504:	2302      	movs	r3, #2
    7506:	2708      	movs	r7, #8
    7508:	2600      	movs	r6, #0
    750a:	4681      	mov	r9, r0
    750c:	469b      	mov	fp, r3
    750e:	e7c9      	b.n	74a4 <__aeabi_dmul+0x48>
    7510:	0032      	movs	r2, r6
    7512:	4658      	mov	r0, fp
    7514:	9b01      	ldr	r3, [sp, #4]
    7516:	4661      	mov	r1, ip
    7518:	9100      	str	r1, [sp, #0]
    751a:	2802      	cmp	r0, #2
    751c:	d100      	bne.n	7520 <__aeabi_dmul+0xc4>
    751e:	e075      	b.n	760c <__aeabi_dmul+0x1b0>
    7520:	2803      	cmp	r0, #3
    7522:	d100      	bne.n	7526 <__aeabi_dmul+0xca>
    7524:	e1fe      	b.n	7924 <__aeabi_dmul+0x4c8>
    7526:	2801      	cmp	r0, #1
    7528:	d000      	beq.n	752c <__aeabi_dmul+0xd0>
    752a:	e12c      	b.n	7786 <__aeabi_dmul+0x32a>
    752c:	2300      	movs	r3, #0
    752e:	2700      	movs	r7, #0
    7530:	2600      	movs	r6, #0
    7532:	2500      	movs	r5, #0
    7534:	033f      	lsls	r7, r7, #12
    7536:	0d2a      	lsrs	r2, r5, #20
    7538:	0b3f      	lsrs	r7, r7, #12
    753a:	48b3      	ldr	r0, [pc, #716]	; (7808 <__aeabi_dmul+0x3ac>)
    753c:	0512      	lsls	r2, r2, #20
    753e:	433a      	orrs	r2, r7
    7540:	4002      	ands	r2, r0
    7542:	051b      	lsls	r3, r3, #20
    7544:	4313      	orrs	r3, r2
    7546:	9a00      	ldr	r2, [sp, #0]
    7548:	005b      	lsls	r3, r3, #1
    754a:	07d1      	lsls	r1, r2, #31
    754c:	085b      	lsrs	r3, r3, #1
    754e:	430b      	orrs	r3, r1
    7550:	0030      	movs	r0, r6
    7552:	0019      	movs	r1, r3
    7554:	b007      	add	sp, #28
    7556:	bc3c      	pop	{r2, r3, r4, r5}
    7558:	4690      	mov	r8, r2
    755a:	4699      	mov	r9, r3
    755c:	46a2      	mov	sl, r4
    755e:	46ab      	mov	fp, r5
    7560:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7562:	465b      	mov	r3, fp
    7564:	433b      	orrs	r3, r7
    7566:	9301      	str	r3, [sp, #4]
    7568:	d100      	bne.n	756c <__aeabi_dmul+0x110>
    756a:	e12f      	b.n	77cc <__aeabi_dmul+0x370>
    756c:	2f00      	cmp	r7, #0
    756e:	d100      	bne.n	7572 <__aeabi_dmul+0x116>
    7570:	e1a5      	b.n	78be <__aeabi_dmul+0x462>
    7572:	0038      	movs	r0, r7
    7574:	f000 fd94 	bl	80a0 <__clzsi2>
    7578:	0003      	movs	r3, r0
    757a:	3b0b      	subs	r3, #11
    757c:	2b1c      	cmp	r3, #28
    757e:	dd00      	ble.n	7582 <__aeabi_dmul+0x126>
    7580:	e196      	b.n	78b0 <__aeabi_dmul+0x454>
    7582:	221d      	movs	r2, #29
    7584:	1ad3      	subs	r3, r2, r3
    7586:	465a      	mov	r2, fp
    7588:	0001      	movs	r1, r0
    758a:	40da      	lsrs	r2, r3
    758c:	465e      	mov	r6, fp
    758e:	3908      	subs	r1, #8
    7590:	408f      	lsls	r7, r1
    7592:	0013      	movs	r3, r2
    7594:	408e      	lsls	r6, r1
    7596:	433b      	orrs	r3, r7
    7598:	9301      	str	r3, [sp, #4]
    759a:	4b9c      	ldr	r3, [pc, #624]	; (780c <__aeabi_dmul+0x3b0>)
    759c:	2700      	movs	r7, #0
    759e:	1a1b      	subs	r3, r3, r0
    75a0:	4699      	mov	r9, r3
    75a2:	2300      	movs	r3, #0
    75a4:	469b      	mov	fp, r3
    75a6:	e77d      	b.n	74a4 <__aeabi_dmul+0x48>
    75a8:	4641      	mov	r1, r8
    75aa:	4653      	mov	r3, sl
    75ac:	430b      	orrs	r3, r1
    75ae:	4993      	ldr	r1, [pc, #588]	; (77fc <__aeabi_dmul+0x3a0>)
    75b0:	468c      	mov	ip, r1
    75b2:	44e1      	add	r9, ip
    75b4:	2b00      	cmp	r3, #0
    75b6:	d000      	beq.n	75ba <__aeabi_dmul+0x15e>
    75b8:	e11a      	b.n	77f0 <__aeabi_dmul+0x394>
    75ba:	2202      	movs	r2, #2
    75bc:	2002      	movs	r0, #2
    75be:	4317      	orrs	r7, r2
    75c0:	2200      	movs	r2, #0
    75c2:	e78c      	b.n	74de <__aeabi_dmul+0x82>
    75c4:	4313      	orrs	r3, r2
    75c6:	d100      	bne.n	75ca <__aeabi_dmul+0x16e>
    75c8:	e10d      	b.n	77e6 <__aeabi_dmul+0x38a>
    75ca:	4643      	mov	r3, r8
    75cc:	2b00      	cmp	r3, #0
    75ce:	d100      	bne.n	75d2 <__aeabi_dmul+0x176>
    75d0:	e181      	b.n	78d6 <__aeabi_dmul+0x47a>
    75d2:	4640      	mov	r0, r8
    75d4:	f000 fd64 	bl	80a0 <__clzsi2>
    75d8:	0002      	movs	r2, r0
    75da:	3a0b      	subs	r2, #11
    75dc:	2a1c      	cmp	r2, #28
    75de:	dd00      	ble.n	75e2 <__aeabi_dmul+0x186>
    75e0:	e172      	b.n	78c8 <__aeabi_dmul+0x46c>
    75e2:	0001      	movs	r1, r0
    75e4:	4643      	mov	r3, r8
    75e6:	3908      	subs	r1, #8
    75e8:	408b      	lsls	r3, r1
    75ea:	4698      	mov	r8, r3
    75ec:	231d      	movs	r3, #29
    75ee:	1a9a      	subs	r2, r3, r2
    75f0:	4653      	mov	r3, sl
    75f2:	40d3      	lsrs	r3, r2
    75f4:	001a      	movs	r2, r3
    75f6:	4643      	mov	r3, r8
    75f8:	4313      	orrs	r3, r2
    75fa:	4652      	mov	r2, sl
    75fc:	408a      	lsls	r2, r1
    75fe:	4649      	mov	r1, r9
    7600:	1a08      	subs	r0, r1, r0
    7602:	4982      	ldr	r1, [pc, #520]	; (780c <__aeabi_dmul+0x3b0>)
    7604:	4689      	mov	r9, r1
    7606:	4481      	add	r9, r0
    7608:	2000      	movs	r0, #0
    760a:	e768      	b.n	74de <__aeabi_dmul+0x82>
    760c:	4b7b      	ldr	r3, [pc, #492]	; (77fc <__aeabi_dmul+0x3a0>)
    760e:	2700      	movs	r7, #0
    7610:	2600      	movs	r6, #0
    7612:	e78e      	b.n	7532 <__aeabi_dmul+0xd6>
    7614:	0c14      	lsrs	r4, r2, #16
    7616:	0412      	lsls	r2, r2, #16
    7618:	0c12      	lsrs	r2, r2, #16
    761a:	0011      	movs	r1, r2
    761c:	0c37      	lsrs	r7, r6, #16
    761e:	0436      	lsls	r6, r6, #16
    7620:	0c35      	lsrs	r5, r6, #16
    7622:	4379      	muls	r1, r7
    7624:	0028      	movs	r0, r5
    7626:	468c      	mov	ip, r1
    7628:	002e      	movs	r6, r5
    762a:	4360      	muls	r0, r4
    762c:	4460      	add	r0, ip
    762e:	4683      	mov	fp, r0
    7630:	4356      	muls	r6, r2
    7632:	0021      	movs	r1, r4
    7634:	0c30      	lsrs	r0, r6, #16
    7636:	4680      	mov	r8, r0
    7638:	4658      	mov	r0, fp
    763a:	4379      	muls	r1, r7
    763c:	4440      	add	r0, r8
    763e:	9102      	str	r1, [sp, #8]
    7640:	4584      	cmp	ip, r0
    7642:	d906      	bls.n	7652 <__aeabi_dmul+0x1f6>
    7644:	4688      	mov	r8, r1
    7646:	2180      	movs	r1, #128	; 0x80
    7648:	0249      	lsls	r1, r1, #9
    764a:	468c      	mov	ip, r1
    764c:	44e0      	add	r8, ip
    764e:	4641      	mov	r1, r8
    7650:	9102      	str	r1, [sp, #8]
    7652:	0436      	lsls	r6, r6, #16
    7654:	0c01      	lsrs	r1, r0, #16
    7656:	0c36      	lsrs	r6, r6, #16
    7658:	0400      	lsls	r0, r0, #16
    765a:	468b      	mov	fp, r1
    765c:	1981      	adds	r1, r0, r6
    765e:	0c1e      	lsrs	r6, r3, #16
    7660:	041b      	lsls	r3, r3, #16
    7662:	0c1b      	lsrs	r3, r3, #16
    7664:	9103      	str	r1, [sp, #12]
    7666:	0019      	movs	r1, r3
    7668:	4379      	muls	r1, r7
    766a:	468c      	mov	ip, r1
    766c:	0028      	movs	r0, r5
    766e:	4375      	muls	r5, r6
    7670:	4465      	add	r5, ip
    7672:	46a8      	mov	r8, r5
    7674:	4358      	muls	r0, r3
    7676:	0c05      	lsrs	r5, r0, #16
    7678:	4445      	add	r5, r8
    767a:	4377      	muls	r7, r6
    767c:	42a9      	cmp	r1, r5
    767e:	d903      	bls.n	7688 <__aeabi_dmul+0x22c>
    7680:	2180      	movs	r1, #128	; 0x80
    7682:	0249      	lsls	r1, r1, #9
    7684:	468c      	mov	ip, r1
    7686:	4467      	add	r7, ip
    7688:	0c29      	lsrs	r1, r5, #16
    768a:	468c      	mov	ip, r1
    768c:	0039      	movs	r1, r7
    768e:	0400      	lsls	r0, r0, #16
    7690:	0c00      	lsrs	r0, r0, #16
    7692:	042d      	lsls	r5, r5, #16
    7694:	182d      	adds	r5, r5, r0
    7696:	4461      	add	r1, ip
    7698:	44ab      	add	fp, r5
    769a:	9105      	str	r1, [sp, #20]
    769c:	4659      	mov	r1, fp
    769e:	9104      	str	r1, [sp, #16]
    76a0:	9901      	ldr	r1, [sp, #4]
    76a2:	040f      	lsls	r7, r1, #16
    76a4:	0c3f      	lsrs	r7, r7, #16
    76a6:	0c08      	lsrs	r0, r1, #16
    76a8:	0039      	movs	r1, r7
    76aa:	4351      	muls	r1, r2
    76ac:	4342      	muls	r2, r0
    76ae:	4690      	mov	r8, r2
    76b0:	0002      	movs	r2, r0
    76b2:	468c      	mov	ip, r1
    76b4:	0c09      	lsrs	r1, r1, #16
    76b6:	468b      	mov	fp, r1
    76b8:	4362      	muls	r2, r4
    76ba:	437c      	muls	r4, r7
    76bc:	4444      	add	r4, r8
    76be:	445c      	add	r4, fp
    76c0:	45a0      	cmp	r8, r4
    76c2:	d903      	bls.n	76cc <__aeabi_dmul+0x270>
    76c4:	2180      	movs	r1, #128	; 0x80
    76c6:	0249      	lsls	r1, r1, #9
    76c8:	4688      	mov	r8, r1
    76ca:	4442      	add	r2, r8
    76cc:	0c21      	lsrs	r1, r4, #16
    76ce:	4688      	mov	r8, r1
    76d0:	4661      	mov	r1, ip
    76d2:	0409      	lsls	r1, r1, #16
    76d4:	0c09      	lsrs	r1, r1, #16
    76d6:	468c      	mov	ip, r1
    76d8:	0039      	movs	r1, r7
    76da:	4359      	muls	r1, r3
    76dc:	4343      	muls	r3, r0
    76de:	4370      	muls	r0, r6
    76e0:	437e      	muls	r6, r7
    76e2:	0c0f      	lsrs	r7, r1, #16
    76e4:	18f6      	adds	r6, r6, r3
    76e6:	0424      	lsls	r4, r4, #16
    76e8:	19be      	adds	r6, r7, r6
    76ea:	4464      	add	r4, ip
    76ec:	4442      	add	r2, r8
    76ee:	468c      	mov	ip, r1
    76f0:	42b3      	cmp	r3, r6
    76f2:	d903      	bls.n	76fc <__aeabi_dmul+0x2a0>
    76f4:	2380      	movs	r3, #128	; 0x80
    76f6:	025b      	lsls	r3, r3, #9
    76f8:	4698      	mov	r8, r3
    76fa:	4440      	add	r0, r8
    76fc:	9b02      	ldr	r3, [sp, #8]
    76fe:	4661      	mov	r1, ip
    7700:	4698      	mov	r8, r3
    7702:	9b04      	ldr	r3, [sp, #16]
    7704:	0437      	lsls	r7, r6, #16
    7706:	4443      	add	r3, r8
    7708:	469b      	mov	fp, r3
    770a:	45ab      	cmp	fp, r5
    770c:	41ad      	sbcs	r5, r5
    770e:	426b      	negs	r3, r5
    7710:	040d      	lsls	r5, r1, #16
    7712:	9905      	ldr	r1, [sp, #20]
    7714:	0c2d      	lsrs	r5, r5, #16
    7716:	468c      	mov	ip, r1
    7718:	197f      	adds	r7, r7, r5
    771a:	4467      	add	r7, ip
    771c:	18fd      	adds	r5, r7, r3
    771e:	46a8      	mov	r8, r5
    7720:	465d      	mov	r5, fp
    7722:	192d      	adds	r5, r5, r4
    7724:	42a5      	cmp	r5, r4
    7726:	41a4      	sbcs	r4, r4
    7728:	4693      	mov	fp, r2
    772a:	4264      	negs	r4, r4
    772c:	46a4      	mov	ip, r4
    772e:	44c3      	add	fp, r8
    7730:	44dc      	add	ip, fp
    7732:	428f      	cmp	r7, r1
    7734:	41bf      	sbcs	r7, r7
    7736:	4598      	cmp	r8, r3
    7738:	419b      	sbcs	r3, r3
    773a:	4593      	cmp	fp, r2
    773c:	4192      	sbcs	r2, r2
    773e:	45a4      	cmp	ip, r4
    7740:	41a4      	sbcs	r4, r4
    7742:	425b      	negs	r3, r3
    7744:	427f      	negs	r7, r7
    7746:	431f      	orrs	r7, r3
    7748:	0c36      	lsrs	r6, r6, #16
    774a:	4252      	negs	r2, r2
    774c:	4264      	negs	r4, r4
    774e:	19bf      	adds	r7, r7, r6
    7750:	4322      	orrs	r2, r4
    7752:	18bf      	adds	r7, r7, r2
    7754:	4662      	mov	r2, ip
    7756:	1838      	adds	r0, r7, r0
    7758:	0243      	lsls	r3, r0, #9
    775a:	0dd2      	lsrs	r2, r2, #23
    775c:	9903      	ldr	r1, [sp, #12]
    775e:	4313      	orrs	r3, r2
    7760:	026a      	lsls	r2, r5, #9
    7762:	430a      	orrs	r2, r1
    7764:	1e50      	subs	r0, r2, #1
    7766:	4182      	sbcs	r2, r0
    7768:	4661      	mov	r1, ip
    776a:	0ded      	lsrs	r5, r5, #23
    776c:	432a      	orrs	r2, r5
    776e:	024e      	lsls	r6, r1, #9
    7770:	4332      	orrs	r2, r6
    7772:	01d9      	lsls	r1, r3, #7
    7774:	d400      	bmi.n	7778 <__aeabi_dmul+0x31c>
    7776:	e0b3      	b.n	78e0 <__aeabi_dmul+0x484>
    7778:	2601      	movs	r6, #1
    777a:	0850      	lsrs	r0, r2, #1
    777c:	4032      	ands	r2, r6
    777e:	4302      	orrs	r2, r0
    7780:	07de      	lsls	r6, r3, #31
    7782:	4332      	orrs	r2, r6
    7784:	085b      	lsrs	r3, r3, #1
    7786:	4c22      	ldr	r4, [pc, #136]	; (7810 <__aeabi_dmul+0x3b4>)
    7788:	4454      	add	r4, sl
    778a:	2c00      	cmp	r4, #0
    778c:	dd62      	ble.n	7854 <__aeabi_dmul+0x3f8>
    778e:	0751      	lsls	r1, r2, #29
    7790:	d009      	beq.n	77a6 <__aeabi_dmul+0x34a>
    7792:	200f      	movs	r0, #15
    7794:	4010      	ands	r0, r2
    7796:	2804      	cmp	r0, #4
    7798:	d005      	beq.n	77a6 <__aeabi_dmul+0x34a>
    779a:	1d10      	adds	r0, r2, #4
    779c:	4290      	cmp	r0, r2
    779e:	4192      	sbcs	r2, r2
    77a0:	4252      	negs	r2, r2
    77a2:	189b      	adds	r3, r3, r2
    77a4:	0002      	movs	r2, r0
    77a6:	01d9      	lsls	r1, r3, #7
    77a8:	d504      	bpl.n	77b4 <__aeabi_dmul+0x358>
    77aa:	2480      	movs	r4, #128	; 0x80
    77ac:	4819      	ldr	r0, [pc, #100]	; (7814 <__aeabi_dmul+0x3b8>)
    77ae:	00e4      	lsls	r4, r4, #3
    77b0:	4003      	ands	r3, r0
    77b2:	4454      	add	r4, sl
    77b4:	4818      	ldr	r0, [pc, #96]	; (7818 <__aeabi_dmul+0x3bc>)
    77b6:	4284      	cmp	r4, r0
    77b8:	dd00      	ble.n	77bc <__aeabi_dmul+0x360>
    77ba:	e727      	b.n	760c <__aeabi_dmul+0x1b0>
    77bc:	075e      	lsls	r6, r3, #29
    77be:	025b      	lsls	r3, r3, #9
    77c0:	08d2      	lsrs	r2, r2, #3
    77c2:	0b1f      	lsrs	r7, r3, #12
    77c4:	0563      	lsls	r3, r4, #21
    77c6:	4316      	orrs	r6, r2
    77c8:	0d5b      	lsrs	r3, r3, #21
    77ca:	e6b2      	b.n	7532 <__aeabi_dmul+0xd6>
    77cc:	2300      	movs	r3, #0
    77ce:	4699      	mov	r9, r3
    77d0:	3301      	adds	r3, #1
    77d2:	2704      	movs	r7, #4
    77d4:	2600      	movs	r6, #0
    77d6:	469b      	mov	fp, r3
    77d8:	e664      	b.n	74a4 <__aeabi_dmul+0x48>
    77da:	2303      	movs	r3, #3
    77dc:	9701      	str	r7, [sp, #4]
    77de:	4681      	mov	r9, r0
    77e0:	270c      	movs	r7, #12
    77e2:	469b      	mov	fp, r3
    77e4:	e65e      	b.n	74a4 <__aeabi_dmul+0x48>
    77e6:	2201      	movs	r2, #1
    77e8:	2001      	movs	r0, #1
    77ea:	4317      	orrs	r7, r2
    77ec:	2200      	movs	r2, #0
    77ee:	e676      	b.n	74de <__aeabi_dmul+0x82>
    77f0:	2303      	movs	r3, #3
    77f2:	2003      	movs	r0, #3
    77f4:	431f      	orrs	r7, r3
    77f6:	4643      	mov	r3, r8
    77f8:	e671      	b.n	74de <__aeabi_dmul+0x82>
    77fa:	46c0      	nop			; (mov r8, r8)
    77fc:	000007ff 	.word	0x000007ff
    7800:	fffffc01 	.word	0xfffffc01
    7804:	0000904c 	.word	0x0000904c
    7808:	800fffff 	.word	0x800fffff
    780c:	fffffc0d 	.word	0xfffffc0d
    7810:	000003ff 	.word	0x000003ff
    7814:	feffffff 	.word	0xfeffffff
    7818:	000007fe 	.word	0x000007fe
    781c:	2300      	movs	r3, #0
    781e:	2780      	movs	r7, #128	; 0x80
    7820:	9300      	str	r3, [sp, #0]
    7822:	033f      	lsls	r7, r7, #12
    7824:	2600      	movs	r6, #0
    7826:	4b43      	ldr	r3, [pc, #268]	; (7934 <__aeabi_dmul+0x4d8>)
    7828:	e683      	b.n	7532 <__aeabi_dmul+0xd6>
    782a:	9b01      	ldr	r3, [sp, #4]
    782c:	0032      	movs	r2, r6
    782e:	46a4      	mov	ip, r4
    7830:	4658      	mov	r0, fp
    7832:	e670      	b.n	7516 <__aeabi_dmul+0xba>
    7834:	46ac      	mov	ip, r5
    7836:	e66e      	b.n	7516 <__aeabi_dmul+0xba>
    7838:	2780      	movs	r7, #128	; 0x80
    783a:	9901      	ldr	r1, [sp, #4]
    783c:	033f      	lsls	r7, r7, #12
    783e:	4239      	tst	r1, r7
    7840:	d02d      	beq.n	789e <__aeabi_dmul+0x442>
    7842:	423b      	tst	r3, r7
    7844:	d12b      	bne.n	789e <__aeabi_dmul+0x442>
    7846:	431f      	orrs	r7, r3
    7848:	033f      	lsls	r7, r7, #12
    784a:	0b3f      	lsrs	r7, r7, #12
    784c:	9500      	str	r5, [sp, #0]
    784e:	0016      	movs	r6, r2
    7850:	4b38      	ldr	r3, [pc, #224]	; (7934 <__aeabi_dmul+0x4d8>)
    7852:	e66e      	b.n	7532 <__aeabi_dmul+0xd6>
    7854:	2501      	movs	r5, #1
    7856:	1b2d      	subs	r5, r5, r4
    7858:	2d38      	cmp	r5, #56	; 0x38
    785a:	dd00      	ble.n	785e <__aeabi_dmul+0x402>
    785c:	e666      	b.n	752c <__aeabi_dmul+0xd0>
    785e:	2d1f      	cmp	r5, #31
    7860:	dc40      	bgt.n	78e4 <__aeabi_dmul+0x488>
    7862:	4835      	ldr	r0, [pc, #212]	; (7938 <__aeabi_dmul+0x4dc>)
    7864:	001c      	movs	r4, r3
    7866:	4450      	add	r0, sl
    7868:	0016      	movs	r6, r2
    786a:	4082      	lsls	r2, r0
    786c:	4084      	lsls	r4, r0
    786e:	40ee      	lsrs	r6, r5
    7870:	1e50      	subs	r0, r2, #1
    7872:	4182      	sbcs	r2, r0
    7874:	4334      	orrs	r4, r6
    7876:	4314      	orrs	r4, r2
    7878:	40eb      	lsrs	r3, r5
    787a:	0762      	lsls	r2, r4, #29
    787c:	d009      	beq.n	7892 <__aeabi_dmul+0x436>
    787e:	220f      	movs	r2, #15
    7880:	4022      	ands	r2, r4
    7882:	2a04      	cmp	r2, #4
    7884:	d005      	beq.n	7892 <__aeabi_dmul+0x436>
    7886:	0022      	movs	r2, r4
    7888:	1d14      	adds	r4, r2, #4
    788a:	4294      	cmp	r4, r2
    788c:	4180      	sbcs	r0, r0
    788e:	4240      	negs	r0, r0
    7890:	181b      	adds	r3, r3, r0
    7892:	021a      	lsls	r2, r3, #8
    7894:	d53e      	bpl.n	7914 <__aeabi_dmul+0x4b8>
    7896:	2301      	movs	r3, #1
    7898:	2700      	movs	r7, #0
    789a:	2600      	movs	r6, #0
    789c:	e649      	b.n	7532 <__aeabi_dmul+0xd6>
    789e:	2780      	movs	r7, #128	; 0x80
    78a0:	9b01      	ldr	r3, [sp, #4]
    78a2:	033f      	lsls	r7, r7, #12
    78a4:	431f      	orrs	r7, r3
    78a6:	033f      	lsls	r7, r7, #12
    78a8:	0b3f      	lsrs	r7, r7, #12
    78aa:	9400      	str	r4, [sp, #0]
    78ac:	4b21      	ldr	r3, [pc, #132]	; (7934 <__aeabi_dmul+0x4d8>)
    78ae:	e640      	b.n	7532 <__aeabi_dmul+0xd6>
    78b0:	0003      	movs	r3, r0
    78b2:	465a      	mov	r2, fp
    78b4:	3b28      	subs	r3, #40	; 0x28
    78b6:	409a      	lsls	r2, r3
    78b8:	2600      	movs	r6, #0
    78ba:	9201      	str	r2, [sp, #4]
    78bc:	e66d      	b.n	759a <__aeabi_dmul+0x13e>
    78be:	4658      	mov	r0, fp
    78c0:	f000 fbee 	bl	80a0 <__clzsi2>
    78c4:	3020      	adds	r0, #32
    78c6:	e657      	b.n	7578 <__aeabi_dmul+0x11c>
    78c8:	0003      	movs	r3, r0
    78ca:	4652      	mov	r2, sl
    78cc:	3b28      	subs	r3, #40	; 0x28
    78ce:	409a      	lsls	r2, r3
    78d0:	0013      	movs	r3, r2
    78d2:	2200      	movs	r2, #0
    78d4:	e693      	b.n	75fe <__aeabi_dmul+0x1a2>
    78d6:	4650      	mov	r0, sl
    78d8:	f000 fbe2 	bl	80a0 <__clzsi2>
    78dc:	3020      	adds	r0, #32
    78de:	e67b      	b.n	75d8 <__aeabi_dmul+0x17c>
    78e0:	46ca      	mov	sl, r9
    78e2:	e750      	b.n	7786 <__aeabi_dmul+0x32a>
    78e4:	201f      	movs	r0, #31
    78e6:	001e      	movs	r6, r3
    78e8:	4240      	negs	r0, r0
    78ea:	1b04      	subs	r4, r0, r4
    78ec:	40e6      	lsrs	r6, r4
    78ee:	2d20      	cmp	r5, #32
    78f0:	d003      	beq.n	78fa <__aeabi_dmul+0x49e>
    78f2:	4c12      	ldr	r4, [pc, #72]	; (793c <__aeabi_dmul+0x4e0>)
    78f4:	4454      	add	r4, sl
    78f6:	40a3      	lsls	r3, r4
    78f8:	431a      	orrs	r2, r3
    78fa:	1e50      	subs	r0, r2, #1
    78fc:	4182      	sbcs	r2, r0
    78fe:	4332      	orrs	r2, r6
    7900:	2607      	movs	r6, #7
    7902:	2700      	movs	r7, #0
    7904:	4016      	ands	r6, r2
    7906:	d009      	beq.n	791c <__aeabi_dmul+0x4c0>
    7908:	200f      	movs	r0, #15
    790a:	2300      	movs	r3, #0
    790c:	4010      	ands	r0, r2
    790e:	0014      	movs	r4, r2
    7910:	2804      	cmp	r0, #4
    7912:	d1b9      	bne.n	7888 <__aeabi_dmul+0x42c>
    7914:	0022      	movs	r2, r4
    7916:	075e      	lsls	r6, r3, #29
    7918:	025b      	lsls	r3, r3, #9
    791a:	0b1f      	lsrs	r7, r3, #12
    791c:	08d2      	lsrs	r2, r2, #3
    791e:	4316      	orrs	r6, r2
    7920:	2300      	movs	r3, #0
    7922:	e606      	b.n	7532 <__aeabi_dmul+0xd6>
    7924:	2780      	movs	r7, #128	; 0x80
    7926:	033f      	lsls	r7, r7, #12
    7928:	431f      	orrs	r7, r3
    792a:	033f      	lsls	r7, r7, #12
    792c:	0b3f      	lsrs	r7, r7, #12
    792e:	0016      	movs	r6, r2
    7930:	4b00      	ldr	r3, [pc, #0]	; (7934 <__aeabi_dmul+0x4d8>)
    7932:	e5fe      	b.n	7532 <__aeabi_dmul+0xd6>
    7934:	000007ff 	.word	0x000007ff
    7938:	0000041e 	.word	0x0000041e
    793c:	0000043e 	.word	0x0000043e

00007940 <__aeabi_dsub>:
__aeabi_dsub():
    7940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7942:	4657      	mov	r7, sl
    7944:	464e      	mov	r6, r9
    7946:	4645      	mov	r5, r8
    7948:	46de      	mov	lr, fp
    794a:	000c      	movs	r4, r1
    794c:	0309      	lsls	r1, r1, #12
    794e:	b5e0      	push	{r5, r6, r7, lr}
    7950:	0a49      	lsrs	r1, r1, #9
    7952:	0f46      	lsrs	r6, r0, #29
    7954:	005f      	lsls	r7, r3, #1
    7956:	4331      	orrs	r1, r6
    7958:	031e      	lsls	r6, r3, #12
    795a:	0fdb      	lsrs	r3, r3, #31
    795c:	0a76      	lsrs	r6, r6, #9
    795e:	469b      	mov	fp, r3
    7960:	0f53      	lsrs	r3, r2, #29
    7962:	4333      	orrs	r3, r6
    7964:	4ec8      	ldr	r6, [pc, #800]	; (7c88 <__aeabi_dsub+0x348>)
    7966:	0065      	lsls	r5, r4, #1
    7968:	00c0      	lsls	r0, r0, #3
    796a:	0fe4      	lsrs	r4, r4, #31
    796c:	00d2      	lsls	r2, r2, #3
    796e:	0d6d      	lsrs	r5, r5, #21
    7970:	46a2      	mov	sl, r4
    7972:	4681      	mov	r9, r0
    7974:	0d7f      	lsrs	r7, r7, #21
    7976:	469c      	mov	ip, r3
    7978:	4690      	mov	r8, r2
    797a:	42b7      	cmp	r7, r6
    797c:	d100      	bne.n	7980 <__aeabi_dsub+0x40>
    797e:	e0b9      	b.n	7af4 <__aeabi_dsub+0x1b4>
    7980:	465b      	mov	r3, fp
    7982:	2601      	movs	r6, #1
    7984:	4073      	eors	r3, r6
    7986:	469b      	mov	fp, r3
    7988:	1bee      	subs	r6, r5, r7
    798a:	45a3      	cmp	fp, r4
    798c:	d100      	bne.n	7990 <__aeabi_dsub+0x50>
    798e:	e083      	b.n	7a98 <__aeabi_dsub+0x158>
    7990:	2e00      	cmp	r6, #0
    7992:	dd63      	ble.n	7a5c <__aeabi_dsub+0x11c>
    7994:	2f00      	cmp	r7, #0
    7996:	d000      	beq.n	799a <__aeabi_dsub+0x5a>
    7998:	e0b1      	b.n	7afe <__aeabi_dsub+0x1be>
    799a:	4663      	mov	r3, ip
    799c:	4313      	orrs	r3, r2
    799e:	d100      	bne.n	79a2 <__aeabi_dsub+0x62>
    79a0:	e123      	b.n	7bea <__aeabi_dsub+0x2aa>
    79a2:	1e73      	subs	r3, r6, #1
    79a4:	2b00      	cmp	r3, #0
    79a6:	d000      	beq.n	79aa <__aeabi_dsub+0x6a>
    79a8:	e1ba      	b.n	7d20 <__aeabi_dsub+0x3e0>
    79aa:	1a86      	subs	r6, r0, r2
    79ac:	4663      	mov	r3, ip
    79ae:	42b0      	cmp	r0, r6
    79b0:	4180      	sbcs	r0, r0
    79b2:	2501      	movs	r5, #1
    79b4:	1ac9      	subs	r1, r1, r3
    79b6:	4240      	negs	r0, r0
    79b8:	1a09      	subs	r1, r1, r0
    79ba:	020b      	lsls	r3, r1, #8
    79bc:	d400      	bmi.n	79c0 <__aeabi_dsub+0x80>
    79be:	e147      	b.n	7c50 <__aeabi_dsub+0x310>
    79c0:	0249      	lsls	r1, r1, #9
    79c2:	0a4b      	lsrs	r3, r1, #9
    79c4:	4698      	mov	r8, r3
    79c6:	4643      	mov	r3, r8
    79c8:	2b00      	cmp	r3, #0
    79ca:	d100      	bne.n	79ce <__aeabi_dsub+0x8e>
    79cc:	e189      	b.n	7ce2 <__aeabi_dsub+0x3a2>
    79ce:	4640      	mov	r0, r8
    79d0:	f000 fb66 	bl	80a0 <__clzsi2>
    79d4:	0003      	movs	r3, r0
    79d6:	3b08      	subs	r3, #8
    79d8:	2b1f      	cmp	r3, #31
    79da:	dd00      	ble.n	79de <__aeabi_dsub+0x9e>
    79dc:	e17c      	b.n	7cd8 <__aeabi_dsub+0x398>
    79de:	2220      	movs	r2, #32
    79e0:	0030      	movs	r0, r6
    79e2:	1ad2      	subs	r2, r2, r3
    79e4:	4641      	mov	r1, r8
    79e6:	40d0      	lsrs	r0, r2
    79e8:	4099      	lsls	r1, r3
    79ea:	0002      	movs	r2, r0
    79ec:	409e      	lsls	r6, r3
    79ee:	430a      	orrs	r2, r1
    79f0:	429d      	cmp	r5, r3
    79f2:	dd00      	ble.n	79f6 <__aeabi_dsub+0xb6>
    79f4:	e16a      	b.n	7ccc <__aeabi_dsub+0x38c>
    79f6:	1b5d      	subs	r5, r3, r5
    79f8:	1c6b      	adds	r3, r5, #1
    79fa:	2b1f      	cmp	r3, #31
    79fc:	dd00      	ble.n	7a00 <__aeabi_dsub+0xc0>
    79fe:	e194      	b.n	7d2a <__aeabi_dsub+0x3ea>
    7a00:	2120      	movs	r1, #32
    7a02:	0010      	movs	r0, r2
    7a04:	0035      	movs	r5, r6
    7a06:	1ac9      	subs	r1, r1, r3
    7a08:	408e      	lsls	r6, r1
    7a0a:	40da      	lsrs	r2, r3
    7a0c:	4088      	lsls	r0, r1
    7a0e:	40dd      	lsrs	r5, r3
    7a10:	1e71      	subs	r1, r6, #1
    7a12:	418e      	sbcs	r6, r1
    7a14:	0011      	movs	r1, r2
    7a16:	2207      	movs	r2, #7
    7a18:	4328      	orrs	r0, r5
    7a1a:	2500      	movs	r5, #0
    7a1c:	4306      	orrs	r6, r0
    7a1e:	4032      	ands	r2, r6
    7a20:	2a00      	cmp	r2, #0
    7a22:	d009      	beq.n	7a38 <__aeabi_dsub+0xf8>
    7a24:	230f      	movs	r3, #15
    7a26:	4033      	ands	r3, r6
    7a28:	2b04      	cmp	r3, #4
    7a2a:	d005      	beq.n	7a38 <__aeabi_dsub+0xf8>
    7a2c:	1d33      	adds	r3, r6, #4
    7a2e:	42b3      	cmp	r3, r6
    7a30:	41b6      	sbcs	r6, r6
    7a32:	4276      	negs	r6, r6
    7a34:	1989      	adds	r1, r1, r6
    7a36:	001e      	movs	r6, r3
    7a38:	020b      	lsls	r3, r1, #8
    7a3a:	d400      	bmi.n	7a3e <__aeabi_dsub+0xfe>
    7a3c:	e23d      	b.n	7eba <__aeabi_dsub+0x57a>
    7a3e:	1c6a      	adds	r2, r5, #1
    7a40:	4b91      	ldr	r3, [pc, #580]	; (7c88 <__aeabi_dsub+0x348>)
    7a42:	0555      	lsls	r5, r2, #21
    7a44:	0d6d      	lsrs	r5, r5, #21
    7a46:	429a      	cmp	r2, r3
    7a48:	d100      	bne.n	7a4c <__aeabi_dsub+0x10c>
    7a4a:	e119      	b.n	7c80 <__aeabi_dsub+0x340>
    7a4c:	4a8f      	ldr	r2, [pc, #572]	; (7c8c <__aeabi_dsub+0x34c>)
    7a4e:	08f6      	lsrs	r6, r6, #3
    7a50:	400a      	ands	r2, r1
    7a52:	0757      	lsls	r7, r2, #29
    7a54:	0252      	lsls	r2, r2, #9
    7a56:	4337      	orrs	r7, r6
    7a58:	0b12      	lsrs	r2, r2, #12
    7a5a:	e09b      	b.n	7b94 <__aeabi_dsub+0x254>
    7a5c:	2e00      	cmp	r6, #0
    7a5e:	d000      	beq.n	7a62 <__aeabi_dsub+0x122>
    7a60:	e0c5      	b.n	7bee <__aeabi_dsub+0x2ae>
    7a62:	1c6e      	adds	r6, r5, #1
    7a64:	0576      	lsls	r6, r6, #21
    7a66:	0d76      	lsrs	r6, r6, #21
    7a68:	2e01      	cmp	r6, #1
    7a6a:	dc00      	bgt.n	7a6e <__aeabi_dsub+0x12e>
    7a6c:	e148      	b.n	7d00 <__aeabi_dsub+0x3c0>
    7a6e:	4667      	mov	r7, ip
    7a70:	1a86      	subs	r6, r0, r2
    7a72:	1bcb      	subs	r3, r1, r7
    7a74:	42b0      	cmp	r0, r6
    7a76:	41bf      	sbcs	r7, r7
    7a78:	427f      	negs	r7, r7
    7a7a:	46b8      	mov	r8, r7
    7a7c:	001f      	movs	r7, r3
    7a7e:	4643      	mov	r3, r8
    7a80:	1aff      	subs	r7, r7, r3
    7a82:	003b      	movs	r3, r7
    7a84:	46b8      	mov	r8, r7
    7a86:	021b      	lsls	r3, r3, #8
    7a88:	d500      	bpl.n	7a8c <__aeabi_dsub+0x14c>
    7a8a:	e15f      	b.n	7d4c <__aeabi_dsub+0x40c>
    7a8c:	4337      	orrs	r7, r6
    7a8e:	d19a      	bne.n	79c6 <__aeabi_dsub+0x86>
    7a90:	2200      	movs	r2, #0
    7a92:	2400      	movs	r4, #0
    7a94:	2500      	movs	r5, #0
    7a96:	e079      	b.n	7b8c <__aeabi_dsub+0x24c>
    7a98:	2e00      	cmp	r6, #0
    7a9a:	dc00      	bgt.n	7a9e <__aeabi_dsub+0x15e>
    7a9c:	e0fa      	b.n	7c94 <__aeabi_dsub+0x354>
    7a9e:	2f00      	cmp	r7, #0
    7aa0:	d100      	bne.n	7aa4 <__aeabi_dsub+0x164>
    7aa2:	e08d      	b.n	7bc0 <__aeabi_dsub+0x280>
    7aa4:	4b78      	ldr	r3, [pc, #480]	; (7c88 <__aeabi_dsub+0x348>)
    7aa6:	429d      	cmp	r5, r3
    7aa8:	d067      	beq.n	7b7a <__aeabi_dsub+0x23a>
    7aaa:	2380      	movs	r3, #128	; 0x80
    7aac:	4667      	mov	r7, ip
    7aae:	041b      	lsls	r3, r3, #16
    7ab0:	431f      	orrs	r7, r3
    7ab2:	46bc      	mov	ip, r7
    7ab4:	2e38      	cmp	r6, #56	; 0x38
    7ab6:	dc00      	bgt.n	7aba <__aeabi_dsub+0x17a>
    7ab8:	e152      	b.n	7d60 <__aeabi_dsub+0x420>
    7aba:	4663      	mov	r3, ip
    7abc:	4313      	orrs	r3, r2
    7abe:	1e5a      	subs	r2, r3, #1
    7ac0:	4193      	sbcs	r3, r2
    7ac2:	181e      	adds	r6, r3, r0
    7ac4:	4286      	cmp	r6, r0
    7ac6:	4180      	sbcs	r0, r0
    7ac8:	4240      	negs	r0, r0
    7aca:	1809      	adds	r1, r1, r0
    7acc:	020b      	lsls	r3, r1, #8
    7ace:	d400      	bmi.n	7ad2 <__aeabi_dsub+0x192>
    7ad0:	e0be      	b.n	7c50 <__aeabi_dsub+0x310>
    7ad2:	4b6d      	ldr	r3, [pc, #436]	; (7c88 <__aeabi_dsub+0x348>)
    7ad4:	3501      	adds	r5, #1
    7ad6:	429d      	cmp	r5, r3
    7ad8:	d100      	bne.n	7adc <__aeabi_dsub+0x19c>
    7ada:	e0d2      	b.n	7c82 <__aeabi_dsub+0x342>
    7adc:	4a6b      	ldr	r2, [pc, #428]	; (7c8c <__aeabi_dsub+0x34c>)
    7ade:	0873      	lsrs	r3, r6, #1
    7ae0:	400a      	ands	r2, r1
    7ae2:	2101      	movs	r1, #1
    7ae4:	400e      	ands	r6, r1
    7ae6:	431e      	orrs	r6, r3
    7ae8:	0851      	lsrs	r1, r2, #1
    7aea:	07d3      	lsls	r3, r2, #31
    7aec:	2207      	movs	r2, #7
    7aee:	431e      	orrs	r6, r3
    7af0:	4032      	ands	r2, r6
    7af2:	e795      	b.n	7a20 <__aeabi_dsub+0xe0>
    7af4:	001e      	movs	r6, r3
    7af6:	4316      	orrs	r6, r2
    7af8:	d000      	beq.n	7afc <__aeabi_dsub+0x1bc>
    7afa:	e745      	b.n	7988 <__aeabi_dsub+0x48>
    7afc:	e740      	b.n	7980 <__aeabi_dsub+0x40>
    7afe:	4b62      	ldr	r3, [pc, #392]	; (7c88 <__aeabi_dsub+0x348>)
    7b00:	429d      	cmp	r5, r3
    7b02:	d03a      	beq.n	7b7a <__aeabi_dsub+0x23a>
    7b04:	2380      	movs	r3, #128	; 0x80
    7b06:	4667      	mov	r7, ip
    7b08:	041b      	lsls	r3, r3, #16
    7b0a:	431f      	orrs	r7, r3
    7b0c:	46bc      	mov	ip, r7
    7b0e:	2e38      	cmp	r6, #56	; 0x38
    7b10:	dd00      	ble.n	7b14 <__aeabi_dsub+0x1d4>
    7b12:	e0eb      	b.n	7cec <__aeabi_dsub+0x3ac>
    7b14:	2e1f      	cmp	r6, #31
    7b16:	dc00      	bgt.n	7b1a <__aeabi_dsub+0x1da>
    7b18:	e13a      	b.n	7d90 <__aeabi_dsub+0x450>
    7b1a:	0033      	movs	r3, r6
    7b1c:	4667      	mov	r7, ip
    7b1e:	3b20      	subs	r3, #32
    7b20:	40df      	lsrs	r7, r3
    7b22:	003b      	movs	r3, r7
    7b24:	2e20      	cmp	r6, #32
    7b26:	d005      	beq.n	7b34 <__aeabi_dsub+0x1f4>
    7b28:	2740      	movs	r7, #64	; 0x40
    7b2a:	1bbf      	subs	r7, r7, r6
    7b2c:	4666      	mov	r6, ip
    7b2e:	40be      	lsls	r6, r7
    7b30:	4332      	orrs	r2, r6
    7b32:	4690      	mov	r8, r2
    7b34:	4646      	mov	r6, r8
    7b36:	1e72      	subs	r2, r6, #1
    7b38:	4196      	sbcs	r6, r2
    7b3a:	4333      	orrs	r3, r6
    7b3c:	e0da      	b.n	7cf4 <__aeabi_dsub+0x3b4>
    7b3e:	2b00      	cmp	r3, #0
    7b40:	d100      	bne.n	7b44 <__aeabi_dsub+0x204>
    7b42:	e214      	b.n	7f6e <__aeabi_dsub+0x62e>
    7b44:	4663      	mov	r3, ip
    7b46:	4313      	orrs	r3, r2
    7b48:	d100      	bne.n	7b4c <__aeabi_dsub+0x20c>
    7b4a:	e168      	b.n	7e1e <__aeabi_dsub+0x4de>
    7b4c:	2380      	movs	r3, #128	; 0x80
    7b4e:	074e      	lsls	r6, r1, #29
    7b50:	08c0      	lsrs	r0, r0, #3
    7b52:	08c9      	lsrs	r1, r1, #3
    7b54:	031b      	lsls	r3, r3, #12
    7b56:	4306      	orrs	r6, r0
    7b58:	4219      	tst	r1, r3
    7b5a:	d008      	beq.n	7b6e <__aeabi_dsub+0x22e>
    7b5c:	4660      	mov	r0, ip
    7b5e:	08c0      	lsrs	r0, r0, #3
    7b60:	4218      	tst	r0, r3
    7b62:	d104      	bne.n	7b6e <__aeabi_dsub+0x22e>
    7b64:	4663      	mov	r3, ip
    7b66:	0001      	movs	r1, r0
    7b68:	08d2      	lsrs	r2, r2, #3
    7b6a:	075e      	lsls	r6, r3, #29
    7b6c:	4316      	orrs	r6, r2
    7b6e:	00f3      	lsls	r3, r6, #3
    7b70:	4699      	mov	r9, r3
    7b72:	00c9      	lsls	r1, r1, #3
    7b74:	0f72      	lsrs	r2, r6, #29
    7b76:	4d44      	ldr	r5, [pc, #272]	; (7c88 <__aeabi_dsub+0x348>)
    7b78:	4311      	orrs	r1, r2
    7b7a:	464b      	mov	r3, r9
    7b7c:	08de      	lsrs	r6, r3, #3
    7b7e:	4b42      	ldr	r3, [pc, #264]	; (7c88 <__aeabi_dsub+0x348>)
    7b80:	074f      	lsls	r7, r1, #29
    7b82:	4337      	orrs	r7, r6
    7b84:	08ca      	lsrs	r2, r1, #3
    7b86:	429d      	cmp	r5, r3
    7b88:	d100      	bne.n	7b8c <__aeabi_dsub+0x24c>
    7b8a:	e06e      	b.n	7c6a <__aeabi_dsub+0x32a>
    7b8c:	0312      	lsls	r2, r2, #12
    7b8e:	056d      	lsls	r5, r5, #21
    7b90:	0b12      	lsrs	r2, r2, #12
    7b92:	0d6d      	lsrs	r5, r5, #21
    7b94:	2100      	movs	r1, #0
    7b96:	0312      	lsls	r2, r2, #12
    7b98:	0b13      	lsrs	r3, r2, #12
    7b9a:	0d0a      	lsrs	r2, r1, #20
    7b9c:	0512      	lsls	r2, r2, #20
    7b9e:	431a      	orrs	r2, r3
    7ba0:	4b3b      	ldr	r3, [pc, #236]	; (7c90 <__aeabi_dsub+0x350>)
    7ba2:	052d      	lsls	r5, r5, #20
    7ba4:	4013      	ands	r3, r2
    7ba6:	432b      	orrs	r3, r5
    7ba8:	005b      	lsls	r3, r3, #1
    7baa:	07e4      	lsls	r4, r4, #31
    7bac:	085b      	lsrs	r3, r3, #1
    7bae:	4323      	orrs	r3, r4
    7bb0:	0038      	movs	r0, r7
    7bb2:	0019      	movs	r1, r3
    7bb4:	bc3c      	pop	{r2, r3, r4, r5}
    7bb6:	4690      	mov	r8, r2
    7bb8:	4699      	mov	r9, r3
    7bba:	46a2      	mov	sl, r4
    7bbc:	46ab      	mov	fp, r5
    7bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7bc0:	4663      	mov	r3, ip
    7bc2:	4313      	orrs	r3, r2
    7bc4:	d011      	beq.n	7bea <__aeabi_dsub+0x2aa>
    7bc6:	1e73      	subs	r3, r6, #1
    7bc8:	2b00      	cmp	r3, #0
    7bca:	d000      	beq.n	7bce <__aeabi_dsub+0x28e>
    7bcc:	e107      	b.n	7dde <__aeabi_dsub+0x49e>
    7bce:	1886      	adds	r6, r0, r2
    7bd0:	4286      	cmp	r6, r0
    7bd2:	4180      	sbcs	r0, r0
    7bd4:	4461      	add	r1, ip
    7bd6:	4240      	negs	r0, r0
    7bd8:	1809      	adds	r1, r1, r0
    7bda:	2501      	movs	r5, #1
    7bdc:	020b      	lsls	r3, r1, #8
    7bde:	d537      	bpl.n	7c50 <__aeabi_dsub+0x310>
    7be0:	2502      	movs	r5, #2
    7be2:	e77b      	b.n	7adc <__aeabi_dsub+0x19c>
    7be4:	003e      	movs	r6, r7
    7be6:	4661      	mov	r1, ip
    7be8:	4691      	mov	r9, r2
    7bea:	0035      	movs	r5, r6
    7bec:	e7c5      	b.n	7b7a <__aeabi_dsub+0x23a>
    7bee:	465c      	mov	r4, fp
    7bf0:	2d00      	cmp	r5, #0
    7bf2:	d000      	beq.n	7bf6 <__aeabi_dsub+0x2b6>
    7bf4:	e0e1      	b.n	7dba <__aeabi_dsub+0x47a>
    7bf6:	000b      	movs	r3, r1
    7bf8:	4303      	orrs	r3, r0
    7bfa:	d0f3      	beq.n	7be4 <__aeabi_dsub+0x2a4>
    7bfc:	1c73      	adds	r3, r6, #1
    7bfe:	d100      	bne.n	7c02 <__aeabi_dsub+0x2c2>
    7c00:	e1ac      	b.n	7f5c <__aeabi_dsub+0x61c>
    7c02:	4b21      	ldr	r3, [pc, #132]	; (7c88 <__aeabi_dsub+0x348>)
    7c04:	429f      	cmp	r7, r3
    7c06:	d100      	bne.n	7c0a <__aeabi_dsub+0x2ca>
    7c08:	e13a      	b.n	7e80 <__aeabi_dsub+0x540>
    7c0a:	43f3      	mvns	r3, r6
    7c0c:	2b38      	cmp	r3, #56	; 0x38
    7c0e:	dd00      	ble.n	7c12 <__aeabi_dsub+0x2d2>
    7c10:	e16f      	b.n	7ef2 <__aeabi_dsub+0x5b2>
    7c12:	2b1f      	cmp	r3, #31
    7c14:	dd00      	ble.n	7c18 <__aeabi_dsub+0x2d8>
    7c16:	e18c      	b.n	7f32 <__aeabi_dsub+0x5f2>
    7c18:	2520      	movs	r5, #32
    7c1a:	000e      	movs	r6, r1
    7c1c:	1aed      	subs	r5, r5, r3
    7c1e:	40ae      	lsls	r6, r5
    7c20:	46b0      	mov	r8, r6
    7c22:	0006      	movs	r6, r0
    7c24:	46aa      	mov	sl, r5
    7c26:	40de      	lsrs	r6, r3
    7c28:	4645      	mov	r5, r8
    7c2a:	4335      	orrs	r5, r6
    7c2c:	002e      	movs	r6, r5
    7c2e:	4655      	mov	r5, sl
    7c30:	40d9      	lsrs	r1, r3
    7c32:	40a8      	lsls	r0, r5
    7c34:	4663      	mov	r3, ip
    7c36:	1e45      	subs	r5, r0, #1
    7c38:	41a8      	sbcs	r0, r5
    7c3a:	1a5b      	subs	r3, r3, r1
    7c3c:	469c      	mov	ip, r3
    7c3e:	4330      	orrs	r0, r6
    7c40:	1a16      	subs	r6, r2, r0
    7c42:	42b2      	cmp	r2, r6
    7c44:	4192      	sbcs	r2, r2
    7c46:	4663      	mov	r3, ip
    7c48:	4252      	negs	r2, r2
    7c4a:	1a99      	subs	r1, r3, r2
    7c4c:	003d      	movs	r5, r7
    7c4e:	e6b4      	b.n	79ba <__aeabi_dsub+0x7a>
    7c50:	2207      	movs	r2, #7
    7c52:	4032      	ands	r2, r6
    7c54:	2a00      	cmp	r2, #0
    7c56:	d000      	beq.n	7c5a <__aeabi_dsub+0x31a>
    7c58:	e6e4      	b.n	7a24 <__aeabi_dsub+0xe4>
    7c5a:	4b0b      	ldr	r3, [pc, #44]	; (7c88 <__aeabi_dsub+0x348>)
    7c5c:	08f6      	lsrs	r6, r6, #3
    7c5e:	074f      	lsls	r7, r1, #29
    7c60:	4337      	orrs	r7, r6
    7c62:	08ca      	lsrs	r2, r1, #3
    7c64:	429d      	cmp	r5, r3
    7c66:	d000      	beq.n	7c6a <__aeabi_dsub+0x32a>
    7c68:	e790      	b.n	7b8c <__aeabi_dsub+0x24c>
    7c6a:	003b      	movs	r3, r7
    7c6c:	4313      	orrs	r3, r2
    7c6e:	d100      	bne.n	7c72 <__aeabi_dsub+0x332>
    7c70:	e1a6      	b.n	7fc0 <__aeabi_dsub+0x680>
    7c72:	2380      	movs	r3, #128	; 0x80
    7c74:	031b      	lsls	r3, r3, #12
    7c76:	431a      	orrs	r2, r3
    7c78:	0312      	lsls	r2, r2, #12
    7c7a:	0b12      	lsrs	r2, r2, #12
    7c7c:	4d02      	ldr	r5, [pc, #8]	; (7c88 <__aeabi_dsub+0x348>)
    7c7e:	e789      	b.n	7b94 <__aeabi_dsub+0x254>
    7c80:	0015      	movs	r5, r2
    7c82:	2200      	movs	r2, #0
    7c84:	2700      	movs	r7, #0
    7c86:	e785      	b.n	7b94 <__aeabi_dsub+0x254>
    7c88:	000007ff 	.word	0x000007ff
    7c8c:	ff7fffff 	.word	0xff7fffff
    7c90:	800fffff 	.word	0x800fffff
    7c94:	2e00      	cmp	r6, #0
    7c96:	d000      	beq.n	7c9a <__aeabi_dsub+0x35a>
    7c98:	e0c7      	b.n	7e2a <__aeabi_dsub+0x4ea>
    7c9a:	1c6b      	adds	r3, r5, #1
    7c9c:	055e      	lsls	r6, r3, #21
    7c9e:	0d76      	lsrs	r6, r6, #21
    7ca0:	2e01      	cmp	r6, #1
    7ca2:	dc00      	bgt.n	7ca6 <__aeabi_dsub+0x366>
    7ca4:	e0f0      	b.n	7e88 <__aeabi_dsub+0x548>
    7ca6:	4dc8      	ldr	r5, [pc, #800]	; (7fc8 <__aeabi_dsub+0x688>)
    7ca8:	42ab      	cmp	r3, r5
    7caa:	d100      	bne.n	7cae <__aeabi_dsub+0x36e>
    7cac:	e0b9      	b.n	7e22 <__aeabi_dsub+0x4e2>
    7cae:	1885      	adds	r5, r0, r2
    7cb0:	000a      	movs	r2, r1
    7cb2:	4285      	cmp	r5, r0
    7cb4:	4189      	sbcs	r1, r1
    7cb6:	4462      	add	r2, ip
    7cb8:	4249      	negs	r1, r1
    7cba:	1851      	adds	r1, r2, r1
    7cbc:	2207      	movs	r2, #7
    7cbe:	07ce      	lsls	r6, r1, #31
    7cc0:	086d      	lsrs	r5, r5, #1
    7cc2:	432e      	orrs	r6, r5
    7cc4:	0849      	lsrs	r1, r1, #1
    7cc6:	4032      	ands	r2, r6
    7cc8:	001d      	movs	r5, r3
    7cca:	e6a9      	b.n	7a20 <__aeabi_dsub+0xe0>
    7ccc:	49bf      	ldr	r1, [pc, #764]	; (7fcc <__aeabi_dsub+0x68c>)
    7cce:	1aed      	subs	r5, r5, r3
    7cd0:	4011      	ands	r1, r2
    7cd2:	2207      	movs	r2, #7
    7cd4:	4032      	ands	r2, r6
    7cd6:	e6a3      	b.n	7a20 <__aeabi_dsub+0xe0>
    7cd8:	0032      	movs	r2, r6
    7cda:	3828      	subs	r0, #40	; 0x28
    7cdc:	4082      	lsls	r2, r0
    7cde:	2600      	movs	r6, #0
    7ce0:	e686      	b.n	79f0 <__aeabi_dsub+0xb0>
    7ce2:	0030      	movs	r0, r6
    7ce4:	f000 f9dc 	bl	80a0 <__clzsi2>
    7ce8:	3020      	adds	r0, #32
    7cea:	e673      	b.n	79d4 <__aeabi_dsub+0x94>
    7cec:	4663      	mov	r3, ip
    7cee:	4313      	orrs	r3, r2
    7cf0:	1e5a      	subs	r2, r3, #1
    7cf2:	4193      	sbcs	r3, r2
    7cf4:	1ac6      	subs	r6, r0, r3
    7cf6:	42b0      	cmp	r0, r6
    7cf8:	4180      	sbcs	r0, r0
    7cfa:	4240      	negs	r0, r0
    7cfc:	1a09      	subs	r1, r1, r0
    7cfe:	e65c      	b.n	79ba <__aeabi_dsub+0x7a>
    7d00:	000e      	movs	r6, r1
    7d02:	4667      	mov	r7, ip
    7d04:	4306      	orrs	r6, r0
    7d06:	4317      	orrs	r7, r2
    7d08:	2d00      	cmp	r5, #0
    7d0a:	d15e      	bne.n	7dca <__aeabi_dsub+0x48a>
    7d0c:	2e00      	cmp	r6, #0
    7d0e:	d000      	beq.n	7d12 <__aeabi_dsub+0x3d2>
    7d10:	e0f3      	b.n	7efa <__aeabi_dsub+0x5ba>
    7d12:	2f00      	cmp	r7, #0
    7d14:	d100      	bne.n	7d18 <__aeabi_dsub+0x3d8>
    7d16:	e11e      	b.n	7f56 <__aeabi_dsub+0x616>
    7d18:	465c      	mov	r4, fp
    7d1a:	4661      	mov	r1, ip
    7d1c:	4691      	mov	r9, r2
    7d1e:	e72c      	b.n	7b7a <__aeabi_dsub+0x23a>
    7d20:	4fa9      	ldr	r7, [pc, #676]	; (7fc8 <__aeabi_dsub+0x688>)
    7d22:	42be      	cmp	r6, r7
    7d24:	d07b      	beq.n	7e1e <__aeabi_dsub+0x4de>
    7d26:	001e      	movs	r6, r3
    7d28:	e6f1      	b.n	7b0e <__aeabi_dsub+0x1ce>
    7d2a:	0010      	movs	r0, r2
    7d2c:	3d1f      	subs	r5, #31
    7d2e:	40e8      	lsrs	r0, r5
    7d30:	2b20      	cmp	r3, #32
    7d32:	d003      	beq.n	7d3c <__aeabi_dsub+0x3fc>
    7d34:	2140      	movs	r1, #64	; 0x40
    7d36:	1acb      	subs	r3, r1, r3
    7d38:	409a      	lsls	r2, r3
    7d3a:	4316      	orrs	r6, r2
    7d3c:	1e73      	subs	r3, r6, #1
    7d3e:	419e      	sbcs	r6, r3
    7d40:	2207      	movs	r2, #7
    7d42:	4306      	orrs	r6, r0
    7d44:	4032      	ands	r2, r6
    7d46:	2100      	movs	r1, #0
    7d48:	2500      	movs	r5, #0
    7d4a:	e783      	b.n	7c54 <__aeabi_dsub+0x314>
    7d4c:	1a16      	subs	r6, r2, r0
    7d4e:	4663      	mov	r3, ip
    7d50:	42b2      	cmp	r2, r6
    7d52:	4180      	sbcs	r0, r0
    7d54:	1a59      	subs	r1, r3, r1
    7d56:	4240      	negs	r0, r0
    7d58:	1a0b      	subs	r3, r1, r0
    7d5a:	4698      	mov	r8, r3
    7d5c:	465c      	mov	r4, fp
    7d5e:	e632      	b.n	79c6 <__aeabi_dsub+0x86>
    7d60:	2e1f      	cmp	r6, #31
    7d62:	dd00      	ble.n	7d66 <__aeabi_dsub+0x426>
    7d64:	e0ab      	b.n	7ebe <__aeabi_dsub+0x57e>
    7d66:	2720      	movs	r7, #32
    7d68:	1bbb      	subs	r3, r7, r6
    7d6a:	469a      	mov	sl, r3
    7d6c:	4663      	mov	r3, ip
    7d6e:	4657      	mov	r7, sl
    7d70:	40bb      	lsls	r3, r7
    7d72:	4699      	mov	r9, r3
    7d74:	0013      	movs	r3, r2
    7d76:	464f      	mov	r7, r9
    7d78:	40f3      	lsrs	r3, r6
    7d7a:	431f      	orrs	r7, r3
    7d7c:	003b      	movs	r3, r7
    7d7e:	4657      	mov	r7, sl
    7d80:	40ba      	lsls	r2, r7
    7d82:	1e57      	subs	r7, r2, #1
    7d84:	41ba      	sbcs	r2, r7
    7d86:	4313      	orrs	r3, r2
    7d88:	4662      	mov	r2, ip
    7d8a:	40f2      	lsrs	r2, r6
    7d8c:	1889      	adds	r1, r1, r2
    7d8e:	e698      	b.n	7ac2 <__aeabi_dsub+0x182>
    7d90:	2720      	movs	r7, #32
    7d92:	1bbb      	subs	r3, r7, r6
    7d94:	469a      	mov	sl, r3
    7d96:	4663      	mov	r3, ip
    7d98:	4657      	mov	r7, sl
    7d9a:	40bb      	lsls	r3, r7
    7d9c:	4699      	mov	r9, r3
    7d9e:	0013      	movs	r3, r2
    7da0:	464f      	mov	r7, r9
    7da2:	40f3      	lsrs	r3, r6
    7da4:	431f      	orrs	r7, r3
    7da6:	003b      	movs	r3, r7
    7da8:	4657      	mov	r7, sl
    7daa:	40ba      	lsls	r2, r7
    7dac:	1e57      	subs	r7, r2, #1
    7dae:	41ba      	sbcs	r2, r7
    7db0:	4313      	orrs	r3, r2
    7db2:	4662      	mov	r2, ip
    7db4:	40f2      	lsrs	r2, r6
    7db6:	1a89      	subs	r1, r1, r2
    7db8:	e79c      	b.n	7cf4 <__aeabi_dsub+0x3b4>
    7dba:	4b83      	ldr	r3, [pc, #524]	; (7fc8 <__aeabi_dsub+0x688>)
    7dbc:	429f      	cmp	r7, r3
    7dbe:	d05f      	beq.n	7e80 <__aeabi_dsub+0x540>
    7dc0:	2580      	movs	r5, #128	; 0x80
    7dc2:	042d      	lsls	r5, r5, #16
    7dc4:	4273      	negs	r3, r6
    7dc6:	4329      	orrs	r1, r5
    7dc8:	e720      	b.n	7c0c <__aeabi_dsub+0x2cc>
    7dca:	2e00      	cmp	r6, #0
    7dcc:	d10c      	bne.n	7de8 <__aeabi_dsub+0x4a8>
    7dce:	2f00      	cmp	r7, #0
    7dd0:	d100      	bne.n	7dd4 <__aeabi_dsub+0x494>
    7dd2:	e0d0      	b.n	7f76 <__aeabi_dsub+0x636>
    7dd4:	465c      	mov	r4, fp
    7dd6:	4661      	mov	r1, ip
    7dd8:	4691      	mov	r9, r2
    7dda:	4d7b      	ldr	r5, [pc, #492]	; (7fc8 <__aeabi_dsub+0x688>)
    7ddc:	e6cd      	b.n	7b7a <__aeabi_dsub+0x23a>
    7dde:	4f7a      	ldr	r7, [pc, #488]	; (7fc8 <__aeabi_dsub+0x688>)
    7de0:	42be      	cmp	r6, r7
    7de2:	d01c      	beq.n	7e1e <__aeabi_dsub+0x4de>
    7de4:	001e      	movs	r6, r3
    7de6:	e665      	b.n	7ab4 <__aeabi_dsub+0x174>
    7de8:	2f00      	cmp	r7, #0
    7dea:	d018      	beq.n	7e1e <__aeabi_dsub+0x4de>
    7dec:	08c0      	lsrs	r0, r0, #3
    7dee:	074e      	lsls	r6, r1, #29
    7df0:	4306      	orrs	r6, r0
    7df2:	2080      	movs	r0, #128	; 0x80
    7df4:	08c9      	lsrs	r1, r1, #3
    7df6:	0300      	lsls	r0, r0, #12
    7df8:	4201      	tst	r1, r0
    7dfa:	d008      	beq.n	7e0e <__aeabi_dsub+0x4ce>
    7dfc:	4663      	mov	r3, ip
    7dfe:	08dc      	lsrs	r4, r3, #3
    7e00:	4204      	tst	r4, r0
    7e02:	d104      	bne.n	7e0e <__aeabi_dsub+0x4ce>
    7e04:	0021      	movs	r1, r4
    7e06:	46da      	mov	sl, fp
    7e08:	08d2      	lsrs	r2, r2, #3
    7e0a:	075e      	lsls	r6, r3, #29
    7e0c:	4316      	orrs	r6, r2
    7e0e:	00f3      	lsls	r3, r6, #3
    7e10:	4699      	mov	r9, r3
    7e12:	2401      	movs	r4, #1
    7e14:	4653      	mov	r3, sl
    7e16:	00c9      	lsls	r1, r1, #3
    7e18:	0f72      	lsrs	r2, r6, #29
    7e1a:	4311      	orrs	r1, r2
    7e1c:	401c      	ands	r4, r3
    7e1e:	4d6a      	ldr	r5, [pc, #424]	; (7fc8 <__aeabi_dsub+0x688>)
    7e20:	e6ab      	b.n	7b7a <__aeabi_dsub+0x23a>
    7e22:	001d      	movs	r5, r3
    7e24:	2200      	movs	r2, #0
    7e26:	2700      	movs	r7, #0
    7e28:	e6b4      	b.n	7b94 <__aeabi_dsub+0x254>
    7e2a:	2d00      	cmp	r5, #0
    7e2c:	d159      	bne.n	7ee2 <__aeabi_dsub+0x5a2>
    7e2e:	000b      	movs	r3, r1
    7e30:	4303      	orrs	r3, r0
    7e32:	d100      	bne.n	7e36 <__aeabi_dsub+0x4f6>
    7e34:	e6d6      	b.n	7be4 <__aeabi_dsub+0x2a4>
    7e36:	1c73      	adds	r3, r6, #1
    7e38:	d100      	bne.n	7e3c <__aeabi_dsub+0x4fc>
    7e3a:	e0b2      	b.n	7fa2 <__aeabi_dsub+0x662>
    7e3c:	4b62      	ldr	r3, [pc, #392]	; (7fc8 <__aeabi_dsub+0x688>)
    7e3e:	429f      	cmp	r7, r3
    7e40:	d01e      	beq.n	7e80 <__aeabi_dsub+0x540>
    7e42:	43f3      	mvns	r3, r6
    7e44:	2b38      	cmp	r3, #56	; 0x38
    7e46:	dc6f      	bgt.n	7f28 <__aeabi_dsub+0x5e8>
    7e48:	2b1f      	cmp	r3, #31
    7e4a:	dd00      	ble.n	7e4e <__aeabi_dsub+0x50e>
    7e4c:	e097      	b.n	7f7e <__aeabi_dsub+0x63e>
    7e4e:	2520      	movs	r5, #32
    7e50:	000e      	movs	r6, r1
    7e52:	1aed      	subs	r5, r5, r3
    7e54:	40ae      	lsls	r6, r5
    7e56:	46b0      	mov	r8, r6
    7e58:	0006      	movs	r6, r0
    7e5a:	46aa      	mov	sl, r5
    7e5c:	40de      	lsrs	r6, r3
    7e5e:	4645      	mov	r5, r8
    7e60:	4335      	orrs	r5, r6
    7e62:	002e      	movs	r6, r5
    7e64:	4655      	mov	r5, sl
    7e66:	40a8      	lsls	r0, r5
    7e68:	40d9      	lsrs	r1, r3
    7e6a:	1e45      	subs	r5, r0, #1
    7e6c:	41a8      	sbcs	r0, r5
    7e6e:	448c      	add	ip, r1
    7e70:	4306      	orrs	r6, r0
    7e72:	18b6      	adds	r6, r6, r2
    7e74:	4296      	cmp	r6, r2
    7e76:	4192      	sbcs	r2, r2
    7e78:	4251      	negs	r1, r2
    7e7a:	4461      	add	r1, ip
    7e7c:	003d      	movs	r5, r7
    7e7e:	e625      	b.n	7acc <__aeabi_dsub+0x18c>
    7e80:	003d      	movs	r5, r7
    7e82:	4661      	mov	r1, ip
    7e84:	4691      	mov	r9, r2
    7e86:	e678      	b.n	7b7a <__aeabi_dsub+0x23a>
    7e88:	000b      	movs	r3, r1
    7e8a:	4303      	orrs	r3, r0
    7e8c:	2d00      	cmp	r5, #0
    7e8e:	d000      	beq.n	7e92 <__aeabi_dsub+0x552>
    7e90:	e655      	b.n	7b3e <__aeabi_dsub+0x1fe>
    7e92:	2b00      	cmp	r3, #0
    7e94:	d0f5      	beq.n	7e82 <__aeabi_dsub+0x542>
    7e96:	4663      	mov	r3, ip
    7e98:	4313      	orrs	r3, r2
    7e9a:	d100      	bne.n	7e9e <__aeabi_dsub+0x55e>
    7e9c:	e66d      	b.n	7b7a <__aeabi_dsub+0x23a>
    7e9e:	1886      	adds	r6, r0, r2
    7ea0:	4286      	cmp	r6, r0
    7ea2:	4180      	sbcs	r0, r0
    7ea4:	4461      	add	r1, ip
    7ea6:	4240      	negs	r0, r0
    7ea8:	1809      	adds	r1, r1, r0
    7eaa:	2200      	movs	r2, #0
    7eac:	020b      	lsls	r3, r1, #8
    7eae:	d400      	bmi.n	7eb2 <__aeabi_dsub+0x572>
    7eb0:	e6d0      	b.n	7c54 <__aeabi_dsub+0x314>
    7eb2:	4b46      	ldr	r3, [pc, #280]	; (7fcc <__aeabi_dsub+0x68c>)
    7eb4:	3501      	adds	r5, #1
    7eb6:	4019      	ands	r1, r3
    7eb8:	e5b2      	b.n	7a20 <__aeabi_dsub+0xe0>
    7eba:	46b1      	mov	r9, r6
    7ebc:	e65d      	b.n	7b7a <__aeabi_dsub+0x23a>
    7ebe:	0033      	movs	r3, r6
    7ec0:	4667      	mov	r7, ip
    7ec2:	3b20      	subs	r3, #32
    7ec4:	40df      	lsrs	r7, r3
    7ec6:	003b      	movs	r3, r7
    7ec8:	2e20      	cmp	r6, #32
    7eca:	d005      	beq.n	7ed8 <__aeabi_dsub+0x598>
    7ecc:	2740      	movs	r7, #64	; 0x40
    7ece:	1bbf      	subs	r7, r7, r6
    7ed0:	4666      	mov	r6, ip
    7ed2:	40be      	lsls	r6, r7
    7ed4:	4332      	orrs	r2, r6
    7ed6:	4690      	mov	r8, r2
    7ed8:	4646      	mov	r6, r8
    7eda:	1e72      	subs	r2, r6, #1
    7edc:	4196      	sbcs	r6, r2
    7ede:	4333      	orrs	r3, r6
    7ee0:	e5ef      	b.n	7ac2 <__aeabi_dsub+0x182>
    7ee2:	4b39      	ldr	r3, [pc, #228]	; (7fc8 <__aeabi_dsub+0x688>)
    7ee4:	429f      	cmp	r7, r3
    7ee6:	d0cb      	beq.n	7e80 <__aeabi_dsub+0x540>
    7ee8:	2580      	movs	r5, #128	; 0x80
    7eea:	042d      	lsls	r5, r5, #16
    7eec:	4273      	negs	r3, r6
    7eee:	4329      	orrs	r1, r5
    7ef0:	e7a8      	b.n	7e44 <__aeabi_dsub+0x504>
    7ef2:	4308      	orrs	r0, r1
    7ef4:	1e41      	subs	r1, r0, #1
    7ef6:	4188      	sbcs	r0, r1
    7ef8:	e6a2      	b.n	7c40 <__aeabi_dsub+0x300>
    7efa:	2f00      	cmp	r7, #0
    7efc:	d100      	bne.n	7f00 <__aeabi_dsub+0x5c0>
    7efe:	e63c      	b.n	7b7a <__aeabi_dsub+0x23a>
    7f00:	4663      	mov	r3, ip
    7f02:	1a86      	subs	r6, r0, r2
    7f04:	1acf      	subs	r7, r1, r3
    7f06:	42b0      	cmp	r0, r6
    7f08:	419b      	sbcs	r3, r3
    7f0a:	425b      	negs	r3, r3
    7f0c:	1afb      	subs	r3, r7, r3
    7f0e:	4698      	mov	r8, r3
    7f10:	021b      	lsls	r3, r3, #8
    7f12:	d54e      	bpl.n	7fb2 <__aeabi_dsub+0x672>
    7f14:	1a16      	subs	r6, r2, r0
    7f16:	4663      	mov	r3, ip
    7f18:	42b2      	cmp	r2, r6
    7f1a:	4192      	sbcs	r2, r2
    7f1c:	1a59      	subs	r1, r3, r1
    7f1e:	4252      	negs	r2, r2
    7f20:	1a89      	subs	r1, r1, r2
    7f22:	465c      	mov	r4, fp
    7f24:	2200      	movs	r2, #0
    7f26:	e57b      	b.n	7a20 <__aeabi_dsub+0xe0>
    7f28:	4301      	orrs	r1, r0
    7f2a:	000e      	movs	r6, r1
    7f2c:	1e71      	subs	r1, r6, #1
    7f2e:	418e      	sbcs	r6, r1
    7f30:	e79f      	b.n	7e72 <__aeabi_dsub+0x532>
    7f32:	001d      	movs	r5, r3
    7f34:	000e      	movs	r6, r1
    7f36:	3d20      	subs	r5, #32
    7f38:	40ee      	lsrs	r6, r5
    7f3a:	46b0      	mov	r8, r6
    7f3c:	2b20      	cmp	r3, #32
    7f3e:	d004      	beq.n	7f4a <__aeabi_dsub+0x60a>
    7f40:	2540      	movs	r5, #64	; 0x40
    7f42:	1aeb      	subs	r3, r5, r3
    7f44:	4099      	lsls	r1, r3
    7f46:	4308      	orrs	r0, r1
    7f48:	4681      	mov	r9, r0
    7f4a:	4648      	mov	r0, r9
    7f4c:	4643      	mov	r3, r8
    7f4e:	1e41      	subs	r1, r0, #1
    7f50:	4188      	sbcs	r0, r1
    7f52:	4318      	orrs	r0, r3
    7f54:	e674      	b.n	7c40 <__aeabi_dsub+0x300>
    7f56:	2200      	movs	r2, #0
    7f58:	2400      	movs	r4, #0
    7f5a:	e617      	b.n	7b8c <__aeabi_dsub+0x24c>
    7f5c:	1a16      	subs	r6, r2, r0
    7f5e:	4663      	mov	r3, ip
    7f60:	42b2      	cmp	r2, r6
    7f62:	4192      	sbcs	r2, r2
    7f64:	1a59      	subs	r1, r3, r1
    7f66:	4252      	negs	r2, r2
    7f68:	1a89      	subs	r1, r1, r2
    7f6a:	003d      	movs	r5, r7
    7f6c:	e525      	b.n	79ba <__aeabi_dsub+0x7a>
    7f6e:	4661      	mov	r1, ip
    7f70:	4691      	mov	r9, r2
    7f72:	4d15      	ldr	r5, [pc, #84]	; (7fc8 <__aeabi_dsub+0x688>)
    7f74:	e601      	b.n	7b7a <__aeabi_dsub+0x23a>
    7f76:	2280      	movs	r2, #128	; 0x80
    7f78:	2400      	movs	r4, #0
    7f7a:	0312      	lsls	r2, r2, #12
    7f7c:	e679      	b.n	7c72 <__aeabi_dsub+0x332>
    7f7e:	001d      	movs	r5, r3
    7f80:	000e      	movs	r6, r1
    7f82:	3d20      	subs	r5, #32
    7f84:	40ee      	lsrs	r6, r5
    7f86:	46b0      	mov	r8, r6
    7f88:	2b20      	cmp	r3, #32
    7f8a:	d004      	beq.n	7f96 <__aeabi_dsub+0x656>
    7f8c:	2540      	movs	r5, #64	; 0x40
    7f8e:	1aeb      	subs	r3, r5, r3
    7f90:	4099      	lsls	r1, r3
    7f92:	4308      	orrs	r0, r1
    7f94:	4681      	mov	r9, r0
    7f96:	464e      	mov	r6, r9
    7f98:	4643      	mov	r3, r8
    7f9a:	1e71      	subs	r1, r6, #1
    7f9c:	418e      	sbcs	r6, r1
    7f9e:	431e      	orrs	r6, r3
    7fa0:	e767      	b.n	7e72 <__aeabi_dsub+0x532>
    7fa2:	1886      	adds	r6, r0, r2
    7fa4:	4296      	cmp	r6, r2
    7fa6:	419b      	sbcs	r3, r3
    7fa8:	4461      	add	r1, ip
    7faa:	425b      	negs	r3, r3
    7fac:	18c9      	adds	r1, r1, r3
    7fae:	003d      	movs	r5, r7
    7fb0:	e58c      	b.n	7acc <__aeabi_dsub+0x18c>
    7fb2:	4647      	mov	r7, r8
    7fb4:	4337      	orrs	r7, r6
    7fb6:	d0ce      	beq.n	7f56 <__aeabi_dsub+0x616>
    7fb8:	2207      	movs	r2, #7
    7fba:	4641      	mov	r1, r8
    7fbc:	4032      	ands	r2, r6
    7fbe:	e649      	b.n	7c54 <__aeabi_dsub+0x314>
    7fc0:	2700      	movs	r7, #0
    7fc2:	003a      	movs	r2, r7
    7fc4:	e5e6      	b.n	7b94 <__aeabi_dsub+0x254>
    7fc6:	46c0      	nop			; (mov r8, r8)
    7fc8:	000007ff 	.word	0x000007ff
    7fcc:	ff7fffff 	.word	0xff7fffff

00007fd0 <__aeabi_d2iz>:
__aeabi_d2iz():
    7fd0:	b530      	push	{r4, r5, lr}
    7fd2:	4d14      	ldr	r5, [pc, #80]	; (8024 <__aeabi_d2iz+0x54>)
    7fd4:	030a      	lsls	r2, r1, #12
    7fd6:	004b      	lsls	r3, r1, #1
    7fd8:	0b12      	lsrs	r2, r2, #12
    7fda:	0d5b      	lsrs	r3, r3, #21
    7fdc:	0fc9      	lsrs	r1, r1, #31
    7fde:	2400      	movs	r4, #0
    7fe0:	42ab      	cmp	r3, r5
    7fe2:	dd11      	ble.n	8008 <__aeabi_d2iz+0x38>
    7fe4:	4c10      	ldr	r4, [pc, #64]	; (8028 <__aeabi_d2iz+0x58>)
    7fe6:	42a3      	cmp	r3, r4
    7fe8:	dc10      	bgt.n	800c <__aeabi_d2iz+0x3c>
    7fea:	2480      	movs	r4, #128	; 0x80
    7fec:	0364      	lsls	r4, r4, #13
    7fee:	4322      	orrs	r2, r4
    7ff0:	4c0e      	ldr	r4, [pc, #56]	; (802c <__aeabi_d2iz+0x5c>)
    7ff2:	1ae4      	subs	r4, r4, r3
    7ff4:	2c1f      	cmp	r4, #31
    7ff6:	dd0c      	ble.n	8012 <__aeabi_d2iz+0x42>
    7ff8:	480d      	ldr	r0, [pc, #52]	; (8030 <__aeabi_d2iz+0x60>)
    7ffa:	1ac3      	subs	r3, r0, r3
    7ffc:	40da      	lsrs	r2, r3
    7ffe:	0013      	movs	r3, r2
    8000:	425c      	negs	r4, r3
    8002:	2900      	cmp	r1, #0
    8004:	d100      	bne.n	8008 <__aeabi_d2iz+0x38>
    8006:	001c      	movs	r4, r3
    8008:	0020      	movs	r0, r4
    800a:	bd30      	pop	{r4, r5, pc}
    800c:	4b09      	ldr	r3, [pc, #36]	; (8034 <__aeabi_d2iz+0x64>)
    800e:	18cc      	adds	r4, r1, r3
    8010:	e7fa      	b.n	8008 <__aeabi_d2iz+0x38>
    8012:	4d09      	ldr	r5, [pc, #36]	; (8038 <__aeabi_d2iz+0x68>)
    8014:	40e0      	lsrs	r0, r4
    8016:	46ac      	mov	ip, r5
    8018:	4463      	add	r3, ip
    801a:	409a      	lsls	r2, r3
    801c:	0013      	movs	r3, r2
    801e:	4303      	orrs	r3, r0
    8020:	e7ee      	b.n	8000 <__aeabi_d2iz+0x30>
    8022:	46c0      	nop			; (mov r8, r8)
    8024:	000003fe 	.word	0x000003fe
    8028:	0000041d 	.word	0x0000041d
    802c:	00000433 	.word	0x00000433
    8030:	00000413 	.word	0x00000413
    8034:	7fffffff 	.word	0x7fffffff
    8038:	fffffbed 	.word	0xfffffbed

0000803c <__aeabi_ui2d>:
__aeabi_ui2d():
    803c:	b510      	push	{r4, lr}
    803e:	1e04      	subs	r4, r0, #0
    8040:	d025      	beq.n	808e <__aeabi_ui2d+0x52>
    8042:	f000 f82d 	bl	80a0 <__clzsi2>
    8046:	4b14      	ldr	r3, [pc, #80]	; (8098 <__aeabi_ui2d+0x5c>)
    8048:	1a1b      	subs	r3, r3, r0
    804a:	055b      	lsls	r3, r3, #21
    804c:	0d5b      	lsrs	r3, r3, #21
    804e:	280a      	cmp	r0, #10
    8050:	dd12      	ble.n	8078 <__aeabi_ui2d+0x3c>
    8052:	380b      	subs	r0, #11
    8054:	4084      	lsls	r4, r0
    8056:	2200      	movs	r2, #0
    8058:	0324      	lsls	r4, r4, #12
    805a:	0b24      	lsrs	r4, r4, #12
    805c:	2100      	movs	r1, #0
    805e:	0010      	movs	r0, r2
    8060:	0324      	lsls	r4, r4, #12
    8062:	0d0a      	lsrs	r2, r1, #20
    8064:	0b24      	lsrs	r4, r4, #12
    8066:	0512      	lsls	r2, r2, #20
    8068:	4322      	orrs	r2, r4
    806a:	4c0c      	ldr	r4, [pc, #48]	; (809c <__aeabi_ui2d+0x60>)
    806c:	051b      	lsls	r3, r3, #20
    806e:	4022      	ands	r2, r4
    8070:	4313      	orrs	r3, r2
    8072:	005b      	lsls	r3, r3, #1
    8074:	0859      	lsrs	r1, r3, #1
    8076:	bd10      	pop	{r4, pc}
    8078:	0002      	movs	r2, r0
    807a:	0021      	movs	r1, r4
    807c:	3215      	adds	r2, #21
    807e:	4091      	lsls	r1, r2
    8080:	000a      	movs	r2, r1
    8082:	210b      	movs	r1, #11
    8084:	1a08      	subs	r0, r1, r0
    8086:	40c4      	lsrs	r4, r0
    8088:	0324      	lsls	r4, r4, #12
    808a:	0b24      	lsrs	r4, r4, #12
    808c:	e7e6      	b.n	805c <__aeabi_ui2d+0x20>
    808e:	2300      	movs	r3, #0
    8090:	2400      	movs	r4, #0
    8092:	2200      	movs	r2, #0
    8094:	e7e2      	b.n	805c <__aeabi_ui2d+0x20>
    8096:	46c0      	nop			; (mov r8, r8)
    8098:	0000041e 	.word	0x0000041e
    809c:	800fffff 	.word	0x800fffff

000080a0 <__clzsi2>:
__clzsi2():
    80a0:	211c      	movs	r1, #28
    80a2:	2301      	movs	r3, #1
    80a4:	041b      	lsls	r3, r3, #16
    80a6:	4298      	cmp	r0, r3
    80a8:	d301      	bcc.n	80ae <__clzsi2+0xe>
    80aa:	0c00      	lsrs	r0, r0, #16
    80ac:	3910      	subs	r1, #16
    80ae:	0a1b      	lsrs	r3, r3, #8
    80b0:	4298      	cmp	r0, r3
    80b2:	d301      	bcc.n	80b8 <__clzsi2+0x18>
    80b4:	0a00      	lsrs	r0, r0, #8
    80b6:	3908      	subs	r1, #8
    80b8:	091b      	lsrs	r3, r3, #4
    80ba:	4298      	cmp	r0, r3
    80bc:	d301      	bcc.n	80c2 <__clzsi2+0x22>
    80be:	0900      	lsrs	r0, r0, #4
    80c0:	3904      	subs	r1, #4
    80c2:	a202      	add	r2, pc, #8	; (adr r2, 80cc <__clzsi2+0x2c>)
    80c4:	5c10      	ldrb	r0, [r2, r0]
    80c6:	1840      	adds	r0, r0, r1
    80c8:	4770      	bx	lr
    80ca:	46c0      	nop			; (mov r8, r8)
    80cc:	02020304 	.word	0x02020304
    80d0:	01010101 	.word	0x01010101
	...

000080dc <__clzdi2>:
__clzdi2():
    80dc:	b510      	push	{r4, lr}
    80de:	2900      	cmp	r1, #0
    80e0:	d103      	bne.n	80ea <__clzdi2+0xe>
    80e2:	f7ff ffdd 	bl	80a0 <__clzsi2>
    80e6:	3020      	adds	r0, #32
    80e8:	e002      	b.n	80f0 <__clzdi2+0x14>
    80ea:	1c08      	adds	r0, r1, #0
    80ec:	f7ff ffd8 	bl	80a0 <__clzsi2>
    80f0:	bd10      	pop	{r4, pc}
    80f2:	46c0      	nop			; (mov r8, r8)

000080f4 <strlen>:
strlen():
    80f4:	2300      	movs	r3, #0
    80f6:	5cc2      	ldrb	r2, [r0, r3]
    80f8:	3301      	adds	r3, #1
    80fa:	2a00      	cmp	r2, #0
    80fc:	d1fb      	bne.n	80f6 <strlen+0x2>
    80fe:	1e58      	subs	r0, r3, #1
    8100:	4770      	bx	lr
	...

00008104 <SystemInit>:
SystemInit():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:112
    //看门狗默认为开启，而且复位之后只能开启或关闭看门狗一次
    //SIM_COPC &= ~SIM_COPC_COPT_MASK;    //DISABLE_WDOG 

    /* System clock initialization */
    /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=3,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
    SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x03)); /* Set the system prescalers to safe value */
    8104:	4b26      	ldr	r3, [pc, #152]	; (81a0 <SystemInit+0x9c>)
    8106:	4a27      	ldr	r2, [pc, #156]	; (81a4 <SystemInit+0xa0>)
    8108:	21c0      	movs	r1, #192	; 0xc0
    810a:	0289      	lsls	r1, r1, #10
    810c:	5099      	str	r1, [r3, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:114
    /* SIM_SCGC5: PORTA=1 */
    SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;   /* Enable clock gate for ports to enable pin routing */
    810e:	4926      	ldr	r1, [pc, #152]	; (81a8 <SystemInit+0xa4>)
    8110:	5858      	ldr	r0, [r3, r1]
    8112:	2280      	movs	r2, #128	; 0x80
    8114:	0092      	lsls	r2, r2, #2
    8116:	4302      	orrs	r2, r0
    8118:	505a      	str	r2, [r3, r1]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:115
    if ((PMC_REGSC & PMC_REGSC_ACKISO_MASK) != 0x0U) {
    811a:	4b24      	ldr	r3, [pc, #144]	; (81ac <SystemInit+0xa8>)
    811c:	789b      	ldrb	r3, [r3, #2]
    811e:	071b      	lsls	r3, r3, #28
    8120:	d504      	bpl.n	812c <SystemInit+0x28>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:117
        /* PMC_REGSC: ACKISO=1 */
        PMC_REGSC |= PMC_REGSC_ACKISO_MASK; /* Release IO pads after wakeup from VLLS mode. */
    8122:	4a22      	ldr	r2, [pc, #136]	; (81ac <SystemInit+0xa8>)
    8124:	7893      	ldrb	r3, [r2, #2]
    8126:	2108      	movs	r1, #8
    8128:	430b      	orrs	r3, r1
    812a:	7093      	strb	r3, [r2, #2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:120
    }
    /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=1,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
    SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x01)); /* Update system prescalers */
    812c:	4b1c      	ldr	r3, [pc, #112]	; (81a0 <SystemInit+0x9c>)
    812e:	4a1d      	ldr	r2, [pc, #116]	; (81a4 <SystemInit+0xa0>)
    8130:	2180      	movs	r1, #128	; 0x80
    8132:	0249      	lsls	r1, r1, #9
    8134:	5099      	str	r1, [r3, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:122
    /* SIM_SOPT2: ??=0,PLLFLLSEL=0 */
    SIM_SOPT2 &= (uint32_t)~(uint32_t)((SIM_SOPT2_PLLFLLSEL_MASK | 0x00020000U)); /* Select FLL as a clock source for various peripherals */
    8136:	4a1e      	ldr	r2, [pc, #120]	; (81b0 <SystemInit+0xac>)
    8138:	5899      	ldr	r1, [r3, r2]
    813a:	481e      	ldr	r0, [pc, #120]	; (81b4 <SystemInit+0xb0>)
    813c:	4001      	ands	r1, r0
    813e:	5099      	str	r1, [r3, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:124
    /* SIM_SOPT1: OSC32KSEL=0 */
    SIM_SOPT1 &= (uint32_t)~(uint32_t)(SIM_SOPT1_OSC32KSEL(0x03)); /* System oscillator drives 32 kHz clock for various peripherals */
    8140:	6819      	ldr	r1, [r3, #0]
    8142:	481d      	ldr	r0, [pc, #116]	; (81b8 <SystemInit+0xb4>)
    8144:	4001      	ands	r1, r0
    8146:	6019      	str	r1, [r3, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:126
    /* SIM_SOPT2: TPMSRC=1 */
    SIM_SOPT2 = (uint32_t)((SIM_SOPT2 & (uint32_t)~(uint32_t)(
    8148:	5899      	ldr	r1, [r3, r2]
    814a:	481c      	ldr	r0, [pc, #112]	; (81bc <SystemInit+0xb8>)
    814c:	4008      	ands	r0, r1
    814e:	2180      	movs	r1, #128	; 0x80
    8150:	0449      	lsls	r1, r1, #17
    8152:	4301      	orrs	r1, r0
    8154:	5099      	str	r1, [r3, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:133
    )) | (uint32_t)(
            SIM_SOPT2_TPMSRC(0x01)
    ));                      /* Set the TPM clock */
    /* Switch to FEI Mode */
    /* MCG_C1: CLKS=0,FRDIV=0,IREFS=1,IRCLKEN=1,IREFSTEN=0 */
    MCG_C1 = MCG_C1_CLKS(0x00) |
    8156:	4b1a      	ldr	r3, [pc, #104]	; (81c0 <SystemInit+0xbc>)
    8158:	2206      	movs	r2, #6
    815a:	701a      	strb	r2, [r3, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:138
            MCG_C1_FRDIV(0x00) |
            MCG_C1_IREFS_MASK |
            MCG_C1_IRCLKEN_MASK;
    /* MCG_C2: LOCRE0=0,RANGE0=0,HGO0=0,EREFS0=0,LP=0,IRCS=0 */
    MCG_C2 &= (uint8_t)~(uint8_t)(
    815c:	785a      	ldrb	r2, [r3, #1]
    815e:	2140      	movs	r1, #64	; 0x40
    8160:	400a      	ands	r2, r1
    8162:	705a      	strb	r2, [r3, #1]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:147
            MCG_C2_EREFS0_MASK |
            MCG_C2_LP_MASK |
            MCG_C2_IRCS_MASK
    );
    /* MCG_C4: DMX32=1,DRST_DRS=1 */
    MCG_C4 = (uint8_t)((MCG_C4 & (uint8_t)~(uint8_t)(
    8164:	78d9      	ldrb	r1, [r3, #3]
    8166:	b249      	sxtb	r1, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:149
            MCG_C4_DRST_DRS(0x02)
    )) | (uint8_t)(
    8168:	221f      	movs	r2, #31
    816a:	4011      	ands	r1, r2
    816c:	3a7f      	subs	r2, #127	; 0x7f
    816e:	430a      	orrs	r2, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:147
    MCG_C4 = (uint8_t)((MCG_C4 & (uint8_t)~(uint8_t)(
    8170:	b2d2      	uxtb	r2, r2
    8172:	70da      	strb	r2, [r3, #3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:154
            MCG_C4_DMX32_MASK |
            MCG_C4_DRST_DRS(0x01)
    ));
    /* OSC0_CR: ERCLKEN=0,??=0,EREFSTEN=0,??=0,SC2P=0,SC4P=0,SC8P=0,SC16P=0 */
    OSC0_CR = 0x00U;
    8174:	2200      	movs	r2, #0
    8176:	4913      	ldr	r1, [pc, #76]	; (81c4 <SystemInit+0xc0>)
    8178:	700a      	strb	r2, [r1, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:156
    /* MCG_C5: ??=0,PLLCLKEN0=0,PLLSTEN0=0,PRDIV0=0 */
    MCG_C5 = MCG_C5_PRDIV0(0x00);
    817a:	711a      	strb	r2, [r3, #4]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:158
    /* MCG_C6: LOLIE0=0,PLLS=0,CME0=0,VDIV0=0 */
    MCG_C6 = MCG_C6_VDIV0(0x00);
    817c:	715a      	strb	r2, [r3, #5]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:159 (discriminator 1)
    while((MCG_S & MCG_S_IREFST_MASK) == 0x00U) { /* Check that the source of the FLL reference clock is the internal reference clock. */
    817e:	4b10      	ldr	r3, [pc, #64]	; (81c0 <SystemInit+0xbc>)
    8180:	799b      	ldrb	r3, [r3, #6]
    8182:	06db      	lsls	r3, r3, #27
    8184:	d5fb      	bpl.n	817e <SystemInit+0x7a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:161 (discriminator 1)
    }
    while((MCG_S & 0x0CU) != 0x00U) {    /* Wait until output of the FLL is selected */
    8186:	4b0e      	ldr	r3, [pc, #56]	; (81c0 <SystemInit+0xbc>)
    8188:	799a      	ldrb	r2, [r3, #6]
    818a:	230c      	movs	r3, #12
    818c:	421a      	tst	r2, r3
    818e:	d1fa      	bne.n	8186 <SystemInit+0x82>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:234
    //        if (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) == 0x3) break;
    //    }
    //    //4.现在处于PEE模式

    //开启PORT模块时钟
    SIM->SCGC5 |= SIM_SCGC5_PORTA_MASK
    8190:	4903      	ldr	r1, [pc, #12]	; (81a0 <SystemInit+0x9c>)
    8192:	4a05      	ldr	r2, [pc, #20]	; (81a8 <SystemInit+0xa4>)
    8194:	5888      	ldr	r0, [r1, r2]
    8196:	23f8      	movs	r3, #248	; 0xf8
    8198:	019b      	lsls	r3, r3, #6
    819a:	4303      	orrs	r3, r0
    819c:	508b      	str	r3, [r1, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/system_MKL36Z4.c:239
            | SIM_SCGC5_PORTB_MASK
            | SIM_SCGC5_PORTC_MASK
            | SIM_SCGC5_PORTD_MASK
            | SIM_SCGC5_PORTE_MASK;
}
    819e:	4770      	bx	lr
    81a0:	40047000 	.word	0x40047000
    81a4:	00001044 	.word	0x00001044
    81a8:	00001038 	.word	0x00001038
    81ac:	4007d000 	.word	0x4007d000
    81b0:	00001004 	.word	0x00001004
    81b4:	fffcffff 	.word	0xfffcffff
    81b8:	fff3ffff 	.word	0xfff3ffff
    81bc:	fcffffff 	.word	0xfcffffff
    81c0:	40064000 	.word	0x40064000
    81c4:	40065000 	.word	0x40065000

000081c8 <main>:
main():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/main.c:18
//main.c使用的内部函数声明处

//----------------------------------------------------------------------
//主函数，一般情况下可以认为程序从此开始运行（实际上有启动过程见书稿）
int main(void)
{
    81c8:	b510      	push	{r4, lr}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/main.c:22
    //（1）======启动部分（开头）==========================================

    //（1.2）【不变】关总中断
    DISABLE_INTERRUPTS;
    81ca:	b672      	cpsid	i
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/main.c:27

    //（1.4）给全局变量赋初值

    //（1.5）用户外设模块初始化
    gpio_init(LIGHT_RED, GPIO_OUTPUT, LIGHT_OFF); //初始化蓝灯
    81cc:	2201      	movs	r2, #1
    81ce:	2101      	movs	r1, #1
    81d0:	2005      	movs	r0, #5
    81d2:	f000 f8cf 	bl	8374 <gpio_init>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/main.c:28
    gpio_init(LIGHT_GREEN, GPIO_OUTPUT, LIGHT_OFF); //初始化蓝灯
    81d6:	2201      	movs	r2, #1
    81d8:	2101      	movs	r1, #1
    81da:	200c      	movs	r0, #12
    81dc:	f000 f8ca 	bl	8374 <gpio_init>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/main.c:29
    gpio_init(LIGHT_BLUE, GPIO_OUTPUT, LIGHT_OFF); //初始化蓝灯
    81e0:	2201      	movs	r2, #1
    81e2:	2101      	movs	r1, #1
    81e4:	200d      	movs	r0, #13
    81e6:	f000 f8c5 	bl	8374 <gpio_init>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/main.c:30
    uart_init(UART_User, 115200);
    81ea:	21e1      	movs	r1, #225	; 0xe1
    81ec:	0249      	lsls	r1, r1, #9
    81ee:	2000      	movs	r0, #0
    81f0:	f000 f948 	bl	8484 <uart_init>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/main.c:33

    //（1.6）使能模块中断
    uart_enable_re_int(UART_User);
    81f4:	2000      	movs	r0, #0
    81f6:	f000 fa4b 	bl	8690 <uart_enable_re_int>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/main.c:35
    //（1.7）【不变】开总中断
    ENABLE_INTERRUPTS;
    81fa:	b662      	cpsie	i
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/main.c:36
}
    81fc:	2000      	movs	r0, #0
    81fe:	bd10      	pop	{r4, pc}

00008200 <flash_read_physical>:
flash_read_physical():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:203
//       addr：目标地址，要求为4的倍数（例如：0x00000004）
//       N：读字节数目（0~1020,要求为4，8,12,......）
//功能概要：读取flash指定地址的内容
//======================================================================
void flash_read_physical(uint8_t *dest,uint32_t addr,uint16_t N)
{
    8200:	b510      	push	{r4, lr}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:206
	uint8_t *src;
	src=(uint8_t *)addr;
	memcpy(dest,src,N);
    8202:	f000 ff11 	bl	9028 <memcpy>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:207
}
    8206:	bd10      	pop	{r4, pc}

00008208 <flash_isempty>:
flash_isempty():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:254
{
   uint16_t i,flag;
   uint8_t* buff;
   i = 0;
   flag = 1;
   for(i = 0; i<N; i++)   //遍历区域内字节
    8208:	2300      	movs	r3, #0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:254 (discriminator 1)
    820a:	428b      	cmp	r3, r1
    820c:	d206      	bcs.n	821c <flash_isempty+0x14>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:256
   {
	  buff=(uint8_t*)(sect*0x400);
    820e:	0282      	lsls	r2, r0, #10
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:257
      if(buff[i]!=0xff)   //非空
    8210:	5cd2      	ldrb	r2, [r2, r3]
    8212:	2aff      	cmp	r2, #255	; 0xff
    8214:	d105      	bne.n	8222 <flash_isempty+0x1a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:254 (discriminator 2)
   for(i = 0; i<N; i++)   //遍历区域内字节
    8216:	3301      	adds	r3, #1
    8218:	b29b      	uxth	r3, r3
    821a:	e7f6      	b.n	820a <flash_isempty+0x2>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:253
   flag = 1;
    821c:	2001      	movs	r0, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:263
      {
      	  flag=0;
          break;
       }
   }
   return flag;
    821e:	b2c0      	uxtb	r0, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:264
}
    8220:	4770      	bx	lr
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:259
      	  flag=0;
    8222:	2000      	movs	r0, #0
    8224:	e7fb      	b.n	821e <flash_isempty+0x16>
	...

00008228 <flash_cmd_launch>:
flash_cmd_launch():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:342
//======================================================================
uint32_t flash_cmd_launch(void)
{
	uint8_t irq_flag=0;
    // 清除访问错误标志位和非法访问标志位
    FTFA_FSTAT = ACCERR | FPVIOL;
    8228:	4b0f      	ldr	r3, [pc, #60]	; (8268 <flash_cmd_launch+0x40>)
    822a:	2230      	movs	r2, #48	; 0x30
    822c:	701a      	strb	r2, [r3, #0]
__get_PRIMASK():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\02_CPU/core_cmFunc.h:484
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    822e:	f3ef 8310 	mrs	r3, PRIMASK
flash_cmd_launch():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:343
    if(__get_PRIMASK() == 0U)
    8232:	2b00      	cmp	r3, #0
    8234:	d112      	bne.n	825c <flash_cmd_launch+0x34>
__disable_irq():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\02_CPU/core_cmFunc.h:344
  __ASM volatile ("cpsid i" : : : "memory");
    8236:	b672      	cpsid	i
flash_cmd_launch():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:346
    {
    	__disable_irq();  //关总中断
    	irq_flag = 1;
    8238:	3a2f      	subs	r2, #47	; 0x2f
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:349
    }
    // 启动命令
    FTFA_FSTAT = CCIF;
    823a:	4b0b      	ldr	r3, [pc, #44]	; (8268 <flash_cmd_launch+0x40>)
    823c:	2180      	movs	r1, #128	; 0x80
    823e:	7019      	strb	r1, [r3, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:351 (discriminator 1)
    // 等待命令结束
    while(!(FTFA_FSTAT & CCIF));
    8240:	4b09      	ldr	r3, [pc, #36]	; (8268 <flash_cmd_launch+0x40>)
    8242:	781b      	ldrb	r3, [r3, #0]
    8244:	b25b      	sxtb	r3, r3
    8246:	2b00      	cmp	r3, #0
    8248:	dafa      	bge.n	8240 <flash_cmd_launch+0x18>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:352
    if(irq_flag == 1)
    824a:	2a01      	cmp	r2, #1
    824c:	d008      	beq.n	8260 <flash_cmd_launch+0x38>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:357
    {
    	__enable_irq();  //开总中断
    }
    // 检查错误标志
    if(FTFA_FSTAT & (ACCERR | FPVIOL | MGSTAT0))
    824e:	4b06      	ldr	r3, [pc, #24]	; (8268 <flash_cmd_launch+0x40>)
    8250:	781a      	ldrb	r2, [r3, #0]
    8252:	2331      	movs	r3, #49	; 0x31
    8254:	421a      	tst	r2, r3
    8256:	d105      	bne.n	8264 <flash_cmd_launch+0x3c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:359
        return 1 ; //执行命令出错
    return 0; //执行命令成功
    8258:	2000      	movs	r0, #0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:360
}
    825a:	4770      	bx	lr
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:340
	uint8_t irq_flag=0;
    825c:	2200      	movs	r2, #0
    825e:	e7ec      	b.n	823a <flash_cmd_launch+0x12>
__enable_irq():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\02_CPU/core_cmFunc.h:333
  __ASM volatile ("cpsie i" : : : "memory");
    8260:	b662      	cpsie	i
    8262:	e7f4      	b.n	824e <flash_cmd_launch+0x26>
flash_cmd_launch():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:358
        return 1 ; //执行命令出错
    8264:	2001      	movs	r0, #1
    8266:	e7f8      	b.n	825a <flash_cmd_launch+0x32>
    8268:	40020000 	.word	0x40020000

0000826c <flash_erase>:
flash_erase():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:50
{
    826c:	b510      	push	{r4, lr}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:57
    dest.word    = (uint32_t)(sect*(1<<10));
    826e:	0284      	lsls	r4, r0, #10
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:60
    FTFA_FCCOB0 = ERSSCR; // 擦除扇区命令
    8270:	4b16      	ldr	r3, [pc, #88]	; (82cc <flash_erase+0x60>)
    8272:	2209      	movs	r2, #9
    8274:	71da      	strb	r2, [r3, #7]
    8276:	0482      	lsls	r2, r0, #18
    8278:	0e12      	lsrs	r2, r2, #24
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:63
    FTFA_FCCOB1 = dest.byte[2];
    827a:	719a      	strb	r2, [r3, #6]
    827c:	0680      	lsls	r0, r0, #26
    827e:	0e00      	lsrs	r0, r0, #24
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:64
    FTFA_FCCOB2 = dest.byte[1];
    8280:	7158      	strb	r0, [r3, #5]
    8282:	b2e2      	uxtb	r2, r4
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:65
    FTFA_FCCOB3 = dest.byte[0];
    8284:	711a      	strb	r2, [r3, #4]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:68
    if(1 == flash_cmd_launch())    //若执行命令出现错误
    8286:	f7ff ffcf 	bl	8228 <flash_cmd_launch>
    828a:	2801      	cmp	r0, #1
    828c:	d01b      	beq.n	82c6 <flash_erase+0x5a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:73
    if(dest.word < 0x400)
    828e:	4b10      	ldr	r3, [pc, #64]	; (82d0 <flash_erase+0x64>)
    8290:	429c      	cmp	r4, r3
    8292:	d901      	bls.n	8298 <flash_erase+0x2c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:91
    return 0;  //成功返回
    8294:	2000      	movs	r0, #0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:92
}
    8296:	bd10      	pop	{r4, pc}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:76
        FTFA_FCCOB0 = PGM4; 
    8298:	4b0c      	ldr	r3, [pc, #48]	; (82cc <flash_erase+0x60>)
    829a:	2206      	movs	r2, #6
    829c:	71da      	strb	r2, [r3, #7]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:78
        FTFA_FCCOB1 = 0x00;
    829e:	2200      	movs	r2, #0
    82a0:	719a      	strb	r2, [r3, #6]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:79
        FTFA_FCCOB2 = 0x04;
    82a2:	3204      	adds	r2, #4
    82a4:	715a      	strb	r2, [r3, #5]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:80
        FTFA_FCCOB3 = 0x0C;
    82a6:	3208      	adds	r2, #8
    82a8:	711a      	strb	r2, [r3, #4]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:82
        FTFA_FCCOB4 = 0xFF;
    82aa:	32f3      	adds	r2, #243	; 0xf3
    82ac:	72da      	strb	r2, [r3, #11]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:83
        FTFA_FCCOB5 = 0xFF;
    82ae:	729a      	strb	r2, [r3, #10]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:84
        FTFA_FCCOB6 = 0xFF;
    82b0:	725a      	strb	r2, [r3, #9]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:85
        FTFA_FCCOB7 = 0xFE;
    82b2:	3a01      	subs	r2, #1
    82b4:	721a      	strb	r2, [r3, #8]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:87
        if(1 == flash_cmd_launch())  //若执行命令出现错误
    82b6:	f7ff ffb7 	bl	8228 <flash_cmd_launch>
    82ba:	2801      	cmp	r0, #1
    82bc:	d001      	beq.n	82c2 <flash_erase+0x56>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:91
    return 0;  //成功返回
    82be:	2000      	movs	r0, #0
    82c0:	e7e9      	b.n	8296 <flash_erase+0x2a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:88
            return 2;   //解锁命令错误
    82c2:	3001      	adds	r0, #1
    82c4:	e7e7      	b.n	8296 <flash_erase+0x2a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:69
        return 1;     //擦除命令错误
    82c6:	2001      	movs	r0, #1
    82c8:	e7e5      	b.n	8296 <flash_erase+0x2a>
    82ca:	46c0      	nop			; (mov r8, r8)
    82cc:	40020000 	.word	0x40020000
    82d0:	000003ff 	.word	0x000003ff

000082d4 <flash_write_physical>:
flash_write_physical():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:147
{
    82d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    82d6:	000f      	movs	r7, r1
    82d8:	0014      	movs	r4, r2
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:156
    FTFA_FCCOB0 = PGM4;
    82da:	4b12      	ldr	r3, [pc, #72]	; (8324 <flash_write_physical+0x50>)
    82dc:	2206      	movs	r2, #6
    82de:	71da      	strb	r2, [r3, #7]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:157
    dest.word = destaddr;
    82e0:	0005      	movs	r5, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:158
    for(size=0; size<N; size+=4, dest.word+=4, buf+=4)
    82e2:	2600      	movs	r6, #0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:158 (discriminator 1)
    82e4:	42b7      	cmp	r7, r6
    82e6:	d918      	bls.n	831a <flash_write_physical+0x46>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:161
        FTFA_FCCOB1 = dest.byte[2];
    82e8:	022a      	lsls	r2, r5, #8
    82ea:	0e12      	lsrs	r2, r2, #24
    82ec:	4b0d      	ldr	r3, [pc, #52]	; (8324 <flash_write_physical+0x50>)
    82ee:	719a      	strb	r2, [r3, #6]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:162
        FTFA_FCCOB2 = dest.byte[1];
    82f0:	042a      	lsls	r2, r5, #16
    82f2:	0e12      	lsrs	r2, r2, #24
    82f4:	715a      	strb	r2, [r3, #5]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:163
        FTFA_FCCOB3 = dest.byte[0];
    82f6:	b2ea      	uxtb	r2, r5
    82f8:	711a      	strb	r2, [r3, #4]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:166
        FTFA_FCCOB4 = buf[3];//大端寻址
    82fa:	78e2      	ldrb	r2, [r4, #3]
    82fc:	72da      	strb	r2, [r3, #11]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:167
        FTFA_FCCOB5 = buf[2];
    82fe:	78a2      	ldrb	r2, [r4, #2]
    8300:	729a      	strb	r2, [r3, #10]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:168
        FTFA_FCCOB6 = buf[1];
    8302:	7862      	ldrb	r2, [r4, #1]
    8304:	725a      	strb	r2, [r3, #9]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:169
        FTFA_FCCOB7 = buf[0];
    8306:	7822      	ldrb	r2, [r4, #0]
    8308:	721a      	strb	r2, [r3, #8]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:171
        if(1 == flash_cmd_launch())
    830a:	f7ff ff8d 	bl	8228 <flash_cmd_launch>
    830e:	2801      	cmp	r0, #1
    8310:	d005      	beq.n	831e <flash_write_physical+0x4a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:158 (discriminator 2)
    for(size=0; size<N; size+=4, dest.word+=4, buf+=4)
    8312:	3604      	adds	r6, #4
    8314:	3504      	adds	r5, #4
    8316:	3404      	adds	r4, #4
    8318:	e7e4      	b.n	82e4 <flash_write_physical+0x10>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:175
    return 0;  //成功执行
    831a:	2000      	movs	r0, #0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:176
}
    831c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/flash.c:172
            return 2;  //写入命令错误
    831e:	2002      	movs	r0, #2
    8320:	e7fc      	b.n	831c <flash_write_physical+0x48>
    8322:	46c0      	nop			; (mov r8, r8)
    8324:	40020000 	.word	0x40020000

00008328 <gpio_get_port_pin>:
gpio_get_port_pin():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:348
//功能概要：将传进参数port_pin进行解析，得出具体端口号与引脚号，分别赋值给port与pin,返回。
//       （例：(PTB_NUM)|(9)解析为PORTB与9，并将其分别赋值给port与pin）。
//=====================================================================
void gpio_get_port_pin(uint16_t port_pin,uint8_t* port,uint8_t* pin)
{
	*port = (port_pin>>8);
    8328:	0a03      	lsrs	r3, r0, #8
    832a:	700b      	strb	r3, [r1, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:349
	*pin = port_pin;
    832c:	7010      	strb	r0, [r2, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:350
}
    832e:	4770      	bx	lr

00008330 <gpio_set>:
gpio_set():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:67
{
    8330:	b530      	push	{r4, r5, lr}
    8332:	b083      	sub	sp, #12
    8334:	000d      	movs	r5, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:72
	gpio_get_port_pin(port_pin,&port,&pin);
    8336:	466b      	mov	r3, sp
    8338:	1ddc      	adds	r4, r3, #7
    833a:	1d9a      	adds	r2, r3, #6
    833c:	0021      	movs	r1, r4
    833e:	f7ff fff3 	bl	8328 <gpio_get_port_pin>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:75
	gpio_ptr = GPIO_ARR[port];
    8342:	7823      	ldrb	r3, [r4, #0]
    8344:	009b      	lsls	r3, r3, #2
    8346:	4a0a      	ldr	r2, [pc, #40]	; (8370 <gpio_set+0x40>)
    8348:	589b      	ldr	r3, [r3, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:78
	if(state == 1)
    834a:	2d01      	cmp	r5, #1
    834c:	d008      	beq.n	8360 <gpio_set+0x30>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:84
		BCLR(pin,GPIO_PDOR_REG(gpio_ptr));
    834e:	681a      	ldr	r2, [r3, #0]
    8350:	4669      	mov	r1, sp
    8352:	7988      	ldrb	r0, [r1, #6]
    8354:	2101      	movs	r1, #1
    8356:	4081      	lsls	r1, r0
    8358:	438a      	bics	r2, r1
    835a:	601a      	str	r2, [r3, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:86
}
    835c:	b003      	add	sp, #12
    835e:	bd30      	pop	{r4, r5, pc}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:80
		BSET(pin,GPIO_PDOR_REG(gpio_ptr));
    8360:	681a      	ldr	r2, [r3, #0]
    8362:	4669      	mov	r1, sp
    8364:	7988      	ldrb	r0, [r1, #6]
    8366:	2101      	movs	r1, #1
    8368:	4081      	lsls	r1, r0
    836a:	430a      	orrs	r2, r1
    836c:	601a      	str	r2, [r3, #0]
    836e:	e7f5      	b.n	835c <gpio_set+0x2c>
    8370:	0000908c 	.word	0x0000908c

00008374 <gpio_init>:
gpio_init():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:31
{
    8374:	b5f0      	push	{r4, r5, r6, r7, lr}
    8376:	b085      	sub	sp, #20
    8378:	0004      	movs	r4, r0
    837a:	000f      	movs	r7, r1
    837c:	9201      	str	r2, [sp, #4]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:37
	gpio_get_port_pin(port_pin,&port,&pin);
    837e:	ab02      	add	r3, sp, #8
    8380:	1d9e      	adds	r6, r3, #6
    8382:	1ddd      	adds	r5, r3, #7
    8384:	0032      	movs	r2, r6
    8386:	0029      	movs	r1, r5
    8388:	f7ff ffce 	bl	8328 <gpio_get_port_pin>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:39
	port_ptr = PORT_ARR[port];        //获得PORT模块相应口基地址
    838c:	782a      	ldrb	r2, [r5, #0]
    838e:	0092      	lsls	r2, r2, #2
    8390:	4b13      	ldr	r3, [pc, #76]	; (83e0 <gpio_init+0x6c>)
    8392:	58d3      	ldr	r3, [r2, r3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:40
	gpio_ptr = GPIO_ARR[port];        //获得GPIO模块相应口基地址
    8394:	4913      	ldr	r1, [pc, #76]	; (83e4 <gpio_init+0x70>)
    8396:	5850      	ldr	r0, [r2, r1]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:43
	PORT_PCR_REG(port_ptr,pin) &= ~PORT_PCR_MUX_MASK;//置D10-D8=000
    8398:	7832      	ldrb	r2, [r6, #0]
    839a:	0092      	lsls	r2, r2, #2
    839c:	58d1      	ldr	r1, [r2, r3]
    839e:	4d12      	ldr	r5, [pc, #72]	; (83e8 <gpio_init+0x74>)
    83a0:	4029      	ands	r1, r5
    83a2:	50d1      	str	r1, [r2, r3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:44
	PORT_PCR_REG(port_ptr,pin) |= PORT_PCR_MUX(1);//置D10-D8=001
    83a4:	7832      	ldrb	r2, [r6, #0]
    83a6:	0092      	lsls	r2, r2, #2
    83a8:	58d6      	ldr	r6, [r2, r3]
    83aa:	2180      	movs	r1, #128	; 0x80
    83ac:	0049      	lsls	r1, r1, #1
    83ae:	4331      	orrs	r1, r6
    83b0:	50d1      	str	r1, [r2, r3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:47
	if(dir == 1)  //输出引脚
    83b2:	2f01      	cmp	r7, #1
    83b4:	d008      	beq.n	83c8 <gpio_init+0x54>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:56
		BCLR(pin,GPIO_PDDR_REG(gpio_ptr));//数据方向寄存器的pin位=0，定义为输入
    83b6:	6943      	ldr	r3, [r0, #20]
    83b8:	aa02      	add	r2, sp, #8
    83ba:	7991      	ldrb	r1, [r2, #6]
    83bc:	2201      	movs	r2, #1
    83be:	408a      	lsls	r2, r1
    83c0:	4393      	bics	r3, r2
    83c2:	6143      	str	r3, [r0, #20]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:58
}
    83c4:	b005      	add	sp, #20
    83c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:50
		BSET(pin,GPIO_PDDR_REG(gpio_ptr));
    83c8:	6943      	ldr	r3, [r0, #20]
    83ca:	aa02      	add	r2, sp, #8
    83cc:	7991      	ldrb	r1, [r2, #6]
    83ce:	2201      	movs	r2, #1
    83d0:	408a      	lsls	r2, r1
    83d2:	4313      	orrs	r3, r2
    83d4:	6143      	str	r3, [r0, #20]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gpio.c:52
		gpio_set(port_pin,state);   
    83d6:	9901      	ldr	r1, [sp, #4]
    83d8:	0020      	movs	r0, r4
    83da:	f7ff ffa9 	bl	8330 <gpio_set>
    83de:	e7f1      	b.n	83c4 <gpio_init+0x50>
    83e0:	000090a0 	.word	0x000090a0
    83e4:	0000908c 	.word	0x0000908c
    83e8:	fffff8ff 	.word	0xfffff8ff

000083ec <Vectors_Init>:
Vectors_Init():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gec.c:15
//参数说明：无
//功能概要：User对BIOS中断向量表的部分继承,构件库函数指针初始化
//修改信息：WYH，20200805，规范
//======================================================================
void  Vectors_Init()
{
    83ec:	b580      	push	{r7, lr}
    83ee:	4f1d      	ldr	r7, [pc, #116]	; (8464 <Vectors_Init+0x78>)
    83f0:	44bd      	add	sp, r7
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gec.c:19
    //有用户程序，编译本段代码
    #if (GEC_USER_SECTOR_START!=0)   
    //（1）若Flash倒数2扇区的前24字节为空，则写入设备序列号及软件版本号初值
    if(flash_isempty(MCU_SECTOR_NUM-1,24))
    83f2:	2118      	movs	r1, #24
    83f4:	203f      	movs	r0, #63	; 0x3f
    83f6:	f7ff ff07 	bl	8208 <flash_isempty>
    83fa:	2800      	cmp	r0, #0
    83fc:	d12b      	bne.n	8456 <Vectors_Init+0x6a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gec.c:28
    }
    //（2）继承BIOS的串口中断              
    void ** bios=MCU_FLASH_ADDR_START;   //向量表起始地址  
    uint32_t user[MCU_SECTORSIZE/4];     //向量表变量数组
    //读取USER中断向量表各中断处理程序地址赋给user数组
    flash_read_physical((uint8_t *)user,GEC_USER_SECTOR_START*
    83fe:	2280      	movs	r2, #128	; 0x80
    8400:	21d0      	movs	r1, #208	; 0xd0
    8402:	00d2      	lsls	r2, r2, #3
    8404:	01c9      	lsls	r1, r1, #7
    8406:	a802      	add	r0, sp, #8
    8408:	f7ff fefa 	bl	8200 <flash_read_physical>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gec.c:32
    MCU_SECTORSIZE+MCU_FLASH_ADDR_START,MCU_SECTORSIZE);
    //判断USER中串口更新中断是否为BIOS对应中断地址。若是，则不作操作；否则修改
    //为BIOS对应中断地址
    if(user[BIOS_UART_UPDATE_IRQn] != (uint32_t)bios[BIOS_UART_UPDATE_IRQn])
    840c:	2378      	movs	r3, #120	; 0x78
    840e:	681b      	ldr	r3, [r3, #0]
    8410:	9a20      	ldr	r2, [sp, #128]	; 0x80
    8412:	429a      	cmp	r2, r3
    8414:	d010      	beq.n	8438 <Vectors_Init+0x4c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gec.c:35
    {
        //改变User中断向量表中BIOS_UART中断向量
        flash_erase(GEC_USER_SECTOR_START);
    8416:	201a      	movs	r0, #26
    8418:	f7ff ff28 	bl	826c <flash_erase>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gec.c:37
        //改USER中断向量表的BIOS程序写入串口的中断处理程序地址
        user[2]=(uint32_t)bios[2];     //【20200903】
    841c:	2308      	movs	r3, #8
    841e:	681b      	ldr	r3, [r3, #0]
    8420:	9304      	str	r3, [sp, #16]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gec.c:38
        user[BIOS_UART_UPDATE_IRQn]=(uint32_t)bios[BIOS_UART_UPDATE_IRQn];
    8422:	2378      	movs	r3, #120	; 0x78
    8424:	681b      	ldr	r3, [r3, #0]
    8426:	9301      	str	r3, [sp, #4]
    8428:	9320      	str	r3, [sp, #128]	; 0x80
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gec.c:39
        flash_write_physical(GEC_USER_SECTOR_START*MCU_SECTORSIZE+
    842a:	2180      	movs	r1, #128	; 0x80
    842c:	20d0      	movs	r0, #208	; 0xd0
    842e:	aa02      	add	r2, sp, #8
    8430:	00c9      	lsls	r1, r1, #3
    8432:	01c0      	lsls	r0, r0, #7
    8434:	f7ff ff4e 	bl	82d4 <flash_write_physical>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gec.c:44
        MCU_FLASH_ADDR_START,MCU_SECTORSIZE,(uint8_t *)user);
    }
    
    //（3）中断向量表指针重定向到USER程序的中断向量表
    SCB->VTOR = (uint32_t)(GEC_USER_SECTOR_START*MCU_SECTORSIZE+
    8438:	4b0b      	ldr	r3, [pc, #44]	; (8468 <Vectors_Init+0x7c>)
    843a:	22d0      	movs	r2, #208	; 0xd0
    843c:	01d2      	lsls	r2, r2, #7
    843e:	609a      	str	r2, [r3, #8]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gec.c:47
    MCU_FLASH_ADDR_START);  
    //（4）给component_fun赋值，SYSTEM_FUNCTION函数用
    component_fun=(void **)(MCU_FLASH_ADDR_START+
    8440:	4b0a      	ldr	r3, [pc, #40]	; (846c <Vectors_Init+0x80>)
    8442:	22e0      	movs	r2, #224	; 0xe0
    8444:	0192      	lsls	r2, r2, #6
    8446:	601a      	str	r2, [r3, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gec.c:50
    GEC_COMPONENT_LST_START*MCU_SECTORSIZE); 
    //（5）printf提示             
    printf("  【User提示】：将进入User的main()执行...\r\n");
    8448:	4809      	ldr	r0, [pc, #36]	; (8470 <Vectors_Init+0x84>)
    844a:	f000 fddb 	bl	9004 <myprintf>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gec.c:53
    
    #endif
}
    844e:	2381      	movs	r3, #129	; 0x81
    8450:	00db      	lsls	r3, r3, #3
    8452:	449d      	add	sp, r3
    8454:	bd80      	pop	{r7, pc}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/gec.c:21
        flash_write_physical((MCU_SECTOR_NUM-1)*MCU_SECTORSIZE+
    8456:	20fc      	movs	r0, #252	; 0xfc
    8458:	4a06      	ldr	r2, [pc, #24]	; (8474 <Vectors_Init+0x88>)
    845a:	2118      	movs	r1, #24
    845c:	0200      	lsls	r0, r0, #8
    845e:	f7ff ff39 	bl	82d4 <flash_write_physical>
    8462:	e7cc      	b.n	83fe <Vectors_Init+0x12>
    8464:	fffffbf8 	.word	0xfffffbf8
    8468:	e000ed00 	.word	0xe000ed00
    846c:	20000424 	.word	0x20000424
    8470:	000090d0 	.word	0x000090d0
    8474:	000090b4 	.word	0x000090b4

00008478 <uart_is_uartNo>:
uart_is_uartNo():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:539
//参数说明：串口号uartNo  :UART_0、UART_1、UART_2
//功能概要：为程序健壮性而判断uartNo是否在串口数字范围内
//=====================================================================
uint8_t uart_is_uartNo(uint8_t uartNo)
{
    if(uartNo < UART_0 || uartNo > UART_2)
    8478:	2802      	cmp	r0, #2
    847a:	d801      	bhi.n	8480 <uart_is_uartNo+0x8>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:542
        return 0;
    else
        return 1;
    847c:	2001      	movs	r0, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:543
}
    847e:	4770      	bx	lr
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:540
        return 0;
    8480:	2000      	movs	r0, #0
    8482:	e7fc      	b.n	847e <uart_is_uartNo+0x6>

00008484 <uart_init>:
uart_init():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:24
{
    8484:	b570      	push	{r4, r5, r6, lr}
    8486:	0004      	movs	r4, r0
    8488:	000d      	movs	r5, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:32
    if(!uart_is_uartNo(uartNo))
    848a:	f7ff fff5 	bl	8478 <uart_is_uartNo>
    848e:	2800      	cmp	r0, #0
    8490:	d02b      	beq.n	84ea <uart_init+0x66>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:38
    if(uartNo==0)
    8492:	2c00      	cmp	r4, #0
    8494:	d02a      	beq.n	84ec <uart_init+0x68>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:92
    	switch (uartNo)
    8496:	2c01      	cmp	r4, #1
    8498:	d100      	bne.n	849c <uart_init+0x18>
    849a:	e06d      	b.n	8578 <uart_init+0xf4>
    849c:	2c02      	cmp	r4, #2
    849e:	d100      	bne.n	84a2 <uart_init+0x1e>
    84a0:	e077      	b.n	8592 <uart_init+0x10e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:142
        UART_2h_1_2 = UART_ARR[uartNo-1]; //获得UART1、2模块相应口基地址
    84a2:	3c01      	subs	r4, #1
    84a4:	00a4      	lsls	r4, r4, #2
    84a6:	4b41      	ldr	r3, [pc, #260]	; (85ac <uart_init+0x128>)
    84a8:	58e4      	ldr	r4, [r4, r3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:145
        UART_C2_REG(UART_2h_1_2) &= ~(UART_C2_TE_MASK | UART_C2_RE_MASK);
    84aa:	78e3      	ldrb	r3, [r4, #3]
    84ac:	220c      	movs	r2, #12
    84ae:	4393      	bics	r3, r2
    84b0:	70e3      	strb	r3, [r4, #3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:150
        sbr = (uint16_t)((SystemCoreClock/2)/(baud_rate * 16));
    84b2:	4b3f      	ldr	r3, [pc, #252]	; (85b0 <uart_init+0x12c>)
    84b4:	6818      	ldr	r0, [r3, #0]
    84b6:	0840      	lsrs	r0, r0, #1
    84b8:	0129      	lsls	r1, r5, #4
    84ba:	f7fe fbf5 	bl	6ca8 <__udivsi3>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:151
        temp = UART_BDH_REG(UART_2h_1_2) & ~(UART_BDH_SBR(0x1F));
    84be:	7823      	ldrb	r3, [r4, #0]
    84c0:	221f      	movs	r2, #31
    84c2:	4393      	bics	r3, r2
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:152
        UART_BDH_REG(UART_2h_1_2) = temp |  UART_BDH_SBR(((sbr & 0x1F00) >> 8));
    84c4:	1202      	asrs	r2, r0, #8
    84c6:	211f      	movs	r1, #31
    84c8:	400a      	ands	r2, r1
    84ca:	4313      	orrs	r3, r2
    84cc:	7023      	strb	r3, [r4, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:153
        UART_BDL_REG(UART_2h_1_2) = (uint8_t)(sbr & UART_BDL_SBR_MASK);
    84ce:	b2c0      	uxtb	r0, r0
    84d0:	7060      	strb	r0, [r4, #1]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:156
        UART_C1_REG(UART_2h_1_2)=0x00;
    84d2:	2300      	movs	r3, #0
    84d4:	70a3      	strb	r3, [r4, #2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:157
        UART_C3_REG(UART_2h_1_2)=0x00;
    84d6:	71a3      	strb	r3, [r4, #6]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:158
        UART_S2_REG(UART_2h_1_2)=0x00;
    84d8:	7163      	strb	r3, [r4, #5]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:160
        UART_C2_REG(UART_2h_1_2) &= ~UART_C2_TIE_MASK;
    84da:	78e3      	ldrb	r3, [r4, #3]
    84dc:	227f      	movs	r2, #127	; 0x7f
    84de:	4013      	ands	r3, r2
    84e0:	70e3      	strb	r3, [r4, #3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:162
        UART_C2_REG(UART_2h_1_2)|= (UART_C2_TE_MASK | UART_C2_RE_MASK);
    84e2:	78e3      	ldrb	r3, [r4, #3]
    84e4:	220c      	movs	r2, #12
    84e6:	4313      	orrs	r3, r2
    84e8:	70e3      	strb	r3, [r4, #3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:164
}
    84ea:	bd70      	pop	{r4, r5, r6, pc}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:41
        SIM_SOPT2 |= SIM_SOPT2_UART0SRC(0x1);
    84ec:	4b31      	ldr	r3, [pc, #196]	; (85b4 <uart_init+0x130>)
    84ee:	4a32      	ldr	r2, [pc, #200]	; (85b8 <uart_init+0x134>)
    84f0:	5898      	ldr	r0, [r3, r2]
    84f2:	2180      	movs	r1, #128	; 0x80
    84f4:	04c9      	lsls	r1, r1, #19
    84f6:	4301      	orrs	r1, r0
    84f8:	5099      	str	r1, [r3, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:42
        SIM_SOPT2 &= ~SIM_SOPT2_PLLFLLSEL_MASK;
    84fa:	5899      	ldr	r1, [r3, r2]
    84fc:	482f      	ldr	r0, [pc, #188]	; (85bc <uart_init+0x138>)
    84fe:	4001      	ands	r1, r0
    8500:	5099      	str	r1, [r3, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:48
            PORTE_PCR20 |= PORT_PCR_MUX(0x4);    //使能UART0_TXD
    8502:	492f      	ldr	r1, [pc, #188]	; (85c0 <uart_init+0x13c>)
    8504:	6d08      	ldr	r0, [r1, #80]	; 0x50
    8506:	2280      	movs	r2, #128	; 0x80
    8508:	00d2      	lsls	r2, r2, #3
    850a:	4310      	orrs	r0, r2
    850c:	6508      	str	r0, [r1, #80]	; 0x50
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:49
            PORTE_PCR21 |= PORT_PCR_MUX(0x4);    //使能UART0_RXD
    850e:	6d48      	ldr	r0, [r1, #84]	; 0x54
    8510:	4310      	orrs	r0, r2
    8512:	6548      	str	r0, [r1, #84]	; 0x54
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:66
        SIM_SCGC4 |= SIM_SCGC4_UART0_MASK;    //启动串口0时钟
    8514:	492b      	ldr	r1, [pc, #172]	; (85c4 <uart_init+0x140>)
    8516:	5858      	ldr	r0, [r3, r1]
    8518:	4302      	orrs	r2, r0
    851a:	505a      	str	r2, [r3, r1]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:69
        UART0_C2_REG(UART_2h_0) &= ~(UART0_C2_TE_MASK | UART0_C2_RE_MASK);
    851c:	4c2a      	ldr	r4, [pc, #168]	; (85c8 <uart_init+0x144>)
    851e:	78e3      	ldrb	r3, [r4, #3]
    8520:	220c      	movs	r2, #12
    8522:	4393      	bics	r3, r2
    8524:	70e3      	strb	r3, [r4, #3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:72
        sbr = (uint16_t)((SystemCoreClock)/(baud_rate * 16));
    8526:	0129      	lsls	r1, r5, #4
    8528:	4b21      	ldr	r3, [pc, #132]	; (85b0 <uart_init+0x12c>)
    852a:	6818      	ldr	r0, [r3, #0]
    852c:	f7fe fbbc 	bl	6ca8 <__udivsi3>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:73
        temp = UART0_BDH_REG(UART_2h_0) & ~(UART0_BDH_SBR(0x1F));
    8530:	7823      	ldrb	r3, [r4, #0]
    8532:	221f      	movs	r2, #31
    8534:	4393      	bics	r3, r2
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:74
        UART0_BDH_REG(UART_2h_0) = temp | UART0_BDH_SBR(((sbr & 0x1F00) >> 8));
    8536:	1202      	asrs	r2, r0, #8
    8538:	211f      	movs	r1, #31
    853a:	400a      	ands	r2, r1
    853c:	4313      	orrs	r3, r2
    853e:	7023      	strb	r3, [r4, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:75
        UART0_BDL_REG(UART_2h_0) = (uint8_t)(sbr & UART0_BDL_SBR_MASK);
    8540:	b2c0      	uxtb	r0, r0
    8542:	7060      	strb	r0, [r4, #1]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:78
        UART0_C4_REG(UART_2h_0) = 0x0F;
    8544:	230f      	movs	r3, #15
    8546:	72a3      	strb	r3, [r4, #10]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:79
        UART0_C1_REG(UART_2h_0) = 0x00;
    8548:	2300      	movs	r3, #0
    854a:	70a3      	strb	r3, [r4, #2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:80
        UART0_C3_REG(UART_2h_0) = 0x00;
    854c:	71a3      	strb	r3, [r4, #6]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:81
        UART0_MA1_REG(UART_2h_0) = 0x00;
    854e:	7223      	strb	r3, [r4, #8]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:82
        UART0_MA2_REG(UART_2h_0) = 0x00;
    8550:	7263      	strb	r3, [r4, #9]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:83
        UART0_S1_REG(UART_2h_0) |= 0x1F;
    8552:	7923      	ldrb	r3, [r4, #4]
    8554:	221f      	movs	r2, #31
    8556:	4313      	orrs	r3, r2
    8558:	7123      	strb	r3, [r4, #4]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:84
        UART0_S2_REG(UART_2h_0) |= 0xC0;
    855a:	7963      	ldrb	r3, [r4, #5]
    855c:	2240      	movs	r2, #64	; 0x40
    855e:	4252      	negs	r2, r2
    8560:	4313      	orrs	r3, r2
    8562:	b2db      	uxtb	r3, r3
    8564:	7163      	strb	r3, [r4, #5]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:86
        UART0_C2_REG(UART_2h_0) &= ~UART0_C2_TIE_MASK;
    8566:	78e3      	ldrb	r3, [r4, #3]
    8568:	32bf      	adds	r2, #191	; 0xbf
    856a:	4013      	ands	r3, r2
    856c:	70e3      	strb	r3, [r4, #3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:88
        UART0_C2_REG(UART_2h_0) |= (UART0_C2_TE_MASK | UART0_C2_RE_MASK);
    856e:	78e3      	ldrb	r3, [r4, #3]
    8570:	220c      	movs	r2, #12
    8572:	4313      	orrs	r3, r2
    8574:	70e3      	strb	r3, [r4, #3]
    8576:	e7b8      	b.n	84ea <uart_init+0x66>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:99
    			PORTE_PCR0 = PORT_PCR_MUX(0x3);    //使能UART1_TXD
    8578:	4b11      	ldr	r3, [pc, #68]	; (85c0 <uart_init+0x13c>)
    857a:	22c0      	movs	r2, #192	; 0xc0
    857c:	0092      	lsls	r2, r2, #2
    857e:	601a      	str	r2, [r3, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:100
    			PORTE_PCR1 = PORT_PCR_MUX(0x3);    //使能UART1_RXD
    8580:	605a      	str	r2, [r3, #4]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:113
    		SIM_SCGC4 |= SIM_SCGC4_UART1_MASK; //启动串口1时钟
    8582:	490c      	ldr	r1, [pc, #48]	; (85b4 <uart_init+0x130>)
    8584:	4a0f      	ldr	r2, [pc, #60]	; (85c4 <uart_init+0x140>)
    8586:	5888      	ldr	r0, [r1, r2]
    8588:	2380      	movs	r3, #128	; 0x80
    858a:	011b      	lsls	r3, r3, #4
    858c:	4303      	orrs	r3, r0
    858e:	508b      	str	r3, [r1, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:114
    		break;
    8590:	e787      	b.n	84a2 <uart_init+0x1e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:120
    				PORTE_PCR16 = PORT_PCR_MUX(0x3); //使能UART2_TXD
    8592:	4b0b      	ldr	r3, [pc, #44]	; (85c0 <uart_init+0x13c>)
    8594:	22c0      	movs	r2, #192	; 0xc0
    8596:	0092      	lsls	r2, r2, #2
    8598:	641a      	str	r2, [r3, #64]	; 0x40
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:121
    				PORTE_PCR17 = PORT_PCR_MUX(0x3); //使能UART2_RXD
    859a:	645a      	str	r2, [r3, #68]	; 0x44
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:137
    			SIM_SCGC4 |= SIM_SCGC4_UART2_MASK;//启动串口2时钟
    859c:	4905      	ldr	r1, [pc, #20]	; (85b4 <uart_init+0x130>)
    859e:	4a09      	ldr	r2, [pc, #36]	; (85c4 <uart_init+0x140>)
    85a0:	5888      	ldr	r0, [r1, r2]
    85a2:	2380      	movs	r3, #128	; 0x80
    85a4:	015b      	lsls	r3, r3, #5
    85a6:	4303      	orrs	r3, r0
    85a8:	508b      	str	r3, [r1, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:138
    			break;
    85aa:	e77a      	b.n	84a2 <uart_init+0x1e>
    85ac:	000090fc 	.word	0x000090fc
    85b0:	20000400 	.word	0x20000400
    85b4:	40047000 	.word	0x40047000
    85b8:	00001004 	.word	0x00001004
    85bc:	fffeffff 	.word	0xfffeffff
    85c0:	4004d000 	.word	0x4004d000
    85c4:	00001034 	.word	0x00001034
    85c8:	4006a000 	.word	0x4006a000

000085cc <uart_send1>:
uart_send1():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:173
{
    85cc:	b570      	push	{r4, r5, r6, lr}
    85ce:	0005      	movs	r5, r0
    85d0:	000c      	movs	r4, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:177
    UART_MemMapPtr UART_2h_1_2 = UART_ARR[uartNo-1]; //获取UART1或者2基地址
    85d2:	1e43      	subs	r3, r0, #1
    85d4:	009b      	lsls	r3, r3, #2
    85d6:	4a11      	ldr	r2, [pc, #68]	; (861c <uart_send1+0x50>)
    85d8:	589e      	ldr	r6, [r3, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:185
    if(!uart_is_uartNo(uartNo))
    85da:	f7ff ff4d 	bl	8478 <uart_is_uartNo>
    85de:	2800      	cmp	r0, #0
    85e0:	d016      	beq.n	8610 <uart_send1+0x44>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:190
    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    85e2:	2300      	movs	r3, #0
    85e4:	e004      	b.n	85f0 <uart_send1+0x24>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:204
            if (UART_S1_REG(UART_2h_1_2) & UART_S1_TDRE_MASK )
    85e6:	7932      	ldrb	r2, [r6, #4]
    85e8:	b252      	sxtb	r2, r2
    85ea:	2a00      	cmp	r2, #0
    85ec:	db11      	blt.n	8612 <uart_send1+0x46>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:190 (discriminator 2)
    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    85ee:	3301      	adds	r3, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:190 (discriminator 1)
    85f0:	4a0b      	ldr	r2, [pc, #44]	; (8620 <uart_send1+0x54>)
    85f2:	4293      	cmp	r3, r2
    85f4:	d808      	bhi.n	8608 <uart_send1+0x3c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:192
        if(0==uartNo)     //判断使用的哪个串口
    85f6:	2d00      	cmp	r5, #0
    85f8:	d1f5      	bne.n	85e6 <uart_send1+0x1a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:195
            if ( UART0_S1_REG(UART_2h_0) & UART0_S1_TDRE_MASK )
    85fa:	4a0a      	ldr	r2, [pc, #40]	; (8624 <uart_send1+0x58>)
    85fc:	7912      	ldrb	r2, [r2, #4]
    85fe:	b252      	sxtb	r2, r2
    8600:	2a00      	cmp	r2, #0
    8602:	daf4      	bge.n	85ee <uart_send1+0x22>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:197
                UART0_D_REG(UART_2h_0) = ch;
    8604:	4a07      	ldr	r2, [pc, #28]	; (8624 <uart_send1+0x58>)
    8606:	71d4      	strb	r4, [r2, #7]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:217
    if (t >= 0xFBBB)
    8608:	4a05      	ldr	r2, [pc, #20]	; (8620 <uart_send1+0x54>)
    860a:	4293      	cmp	r3, r2
    860c:	d803      	bhi.n	8616 <uart_send1+0x4a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:220
        return 1; //成功发送
    860e:	2001      	movs	r0, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:221
}
    8610:	bd70      	pop	{r4, r5, r6, pc}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:206
                UART_D_REG(UART_2h_1_2) = ch;
    8612:	71f4      	strb	r4, [r6, #7]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:207
                break;
    8614:	e7f8      	b.n	8608 <uart_send1+0x3c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:218
        return 0; //发送超时，发送失败
    8616:	2000      	movs	r0, #0
    8618:	e7fa      	b.n	8610 <uart_send1+0x44>
    861a:	46c0      	nop			; (mov r8, r8)
    861c:	000090fc 	.word	0x000090fc
    8620:	0000fbba 	.word	0x0000fbba
    8624:	4006a000 	.word	0x4006a000

00008628 <uart_re1>:
uart_re1():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:285
{
    8628:	b570      	push	{r4, r5, r6, lr}
    862a:	0004      	movs	r4, r0
    862c:	000e      	movs	r6, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:289
    UART_MemMapPtr UART_2h_1_2 = UART_ARR[uartNo-1]; //获取UART1或者2基地址
    862e:	1e43      	subs	r3, r0, #1
    8630:	009b      	lsls	r3, r3, #2
    8632:	4a14      	ldr	r2, [pc, #80]	; (8684 <uart_re1+0x5c>)
    8634:	589d      	ldr	r5, [r3, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:292
    if(!uart_is_uartNo(uartNo))
    8636:	f7ff ff1f 	bl	8478 <uart_is_uartNo>
    863a:	2800      	cmp	r0, #0
    863c:	d001      	beq.n	8642 <uart_re1+0x1a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:298
    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    863e:	2300      	movs	r3, #0
    8640:	e006      	b.n	8650 <uart_re1+0x28>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:294
        *fp=0;
    8642:	2300      	movs	r3, #0
    8644:	7033      	strb	r3, [r6, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:327
}
    8646:	bd70      	pop	{r4, r5, r6, pc}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:313
            if(UART_S1_REG(UART_2h_1_2) & UART_S1_RDRF_MASK)
    8648:	792a      	ldrb	r2, [r5, #4]
    864a:	0692      	lsls	r2, r2, #26
    864c:	d415      	bmi.n	867a <uart_re1+0x52>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:298 (discriminator 2)
    for (t = 0; t < 0xFBBB; t++)//查询指定次数
    864e:	3301      	adds	r3, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:298 (discriminator 1)
    8650:	4a0d      	ldr	r2, [pc, #52]	; (8688 <uart_re1+0x60>)
    8652:	4293      	cmp	r3, r2
    8654:	d80a      	bhi.n	866c <uart_re1+0x44>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:300
        if(0==uartNo)  //判断使用的哪个串口
    8656:	2c00      	cmp	r4, #0
    8658:	d1f6      	bne.n	8648 <uart_re1+0x20>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:303
        if (UART0_S1_REG(UART_2h_0) & UART0_S1_RDRF_MASK)
    865a:	4a0c      	ldr	r2, [pc, #48]	; (868c <uart_re1+0x64>)
    865c:	7912      	ldrb	r2, [r2, #4]
    865e:	0692      	lsls	r2, r2, #26
    8660:	d5f5      	bpl.n	864e <uart_re1+0x26>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:305
                dat=UART0_D_REG(UART_2h_0);    //获取数据,清接收中断位
    8662:	4a0a      	ldr	r2, [pc, #40]	; (868c <uart_re1+0x64>)
    8664:	79d0      	ldrb	r0, [r2, #7]
    8666:	b2c0      	uxtb	r0, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:306
                *fp = 1;  //接收成功
    8668:	2201      	movs	r2, #1
    866a:	7032      	strb	r2, [r6, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:321
    if(t >= 0xFBBB) 
    866c:	4a06      	ldr	r2, [pc, #24]	; (8688 <uart_re1+0x60>)
    866e:	4293      	cmp	r3, r2
    8670:	d9e9      	bls.n	8646 <uart_re1+0x1e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:324
        *fp = 0;    //未收到数据
    8672:	2300      	movs	r3, #0
    8674:	7033      	strb	r3, [r6, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:323
        dat = 0xFF; 
    8676:	20ff      	movs	r0, #255	; 0xff
    8678:	e7e5      	b.n	8646 <uart_re1+0x1e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:315
                dat=UART_D_REG(UART_2h_1_2);    //获取数据,清接收中断位
    867a:	79e8      	ldrb	r0, [r5, #7]
    867c:	b2c0      	uxtb	r0, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:316
                *fp= 1;  //接收成功
    867e:	2201      	movs	r2, #1
    8680:	7032      	strb	r2, [r6, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:317
                break;
    8682:	e7f3      	b.n	866c <uart_re1+0x44>
    8684:	000090fc 	.word	0x000090fc
    8688:	0000fbba 	.word	0x0000fbba
    868c:	4006a000 	.word	0x4006a000

00008690 <uart_enable_re_int>:
uart_enable_re_int():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:364
{
    8690:	b570      	push	{r4, r5, r6, lr}
    8692:	0004      	movs	r4, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:366
    UART_MemMapPtr UART_2h_1_2 = UART_ARR[uartNo-1]; //获取UART1或者2基地址
    8694:	1e43      	subs	r3, r0, #1
    8696:	009b      	lsls	r3, r3, #2
    8698:	4a0d      	ldr	r2, [pc, #52]	; (86d0 <uart_enable_re_int+0x40>)
    869a:	589d      	ldr	r5, [r3, r2]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:369
    if(!uart_is_uartNo(uartNo))
    869c:	f7ff feec 	bl	8478 <uart_is_uartNo>
    86a0:	2800      	cmp	r0, #0
    86a2:	d00e      	beq.n	86c2 <uart_enable_re_int+0x32>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:374
    if(0 == uartNo)
    86a4:	2c00      	cmp	r4, #0
    86a6:	d10d      	bne.n	86c4 <uart_enable_re_int+0x34>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:375
        UART0_C2_REG(UART_2h_0) |= UART0_C2_RIE_MASK;    //开放UART接收中断
    86a8:	4a0a      	ldr	r2, [pc, #40]	; (86d4 <uart_enable_re_int+0x44>)
    86aa:	78d3      	ldrb	r3, [r2, #3]
    86ac:	2120      	movs	r1, #32
    86ae:	430b      	orrs	r3, r1
    86b0:	70d3      	strb	r3, [r2, #3]
NVIC_EnableIRQ():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\02_CPU/core_cm0plus.h:685

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[0] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
    86b2:	4b09      	ldr	r3, [pc, #36]	; (86d8 <uart_enable_re_int+0x48>)
    86b4:	5d1b      	ldrb	r3, [r3, r4]
    86b6:	221f      	movs	r2, #31
    86b8:	401a      	ands	r2, r3
    86ba:	2301      	movs	r3, #1
    86bc:	4093      	lsls	r3, r2
    86be:	4a07      	ldr	r2, [pc, #28]	; (86dc <uart_enable_re_int+0x4c>)
    86c0:	6013      	str	r3, [r2, #0]
uart_enable_re_int():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:379
}
    86c2:	bd70      	pop	{r4, r5, r6, pc}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/uart.c:377
        UART_C2_REG(UART_2h_1_2) |= UART_C2_RIE_MASK;    //开放UART接收中断
    86c4:	78eb      	ldrb	r3, [r5, #3]
    86c6:	2220      	movs	r2, #32
    86c8:	4313      	orrs	r3, r2
    86ca:	70eb      	strb	r3, [r5, #3]
    86cc:	e7f1      	b.n	86b2 <uart_enable_re_int+0x22>
    86ce:	46c0      	nop			; (mov r8, r8)
    86d0:	000090fc 	.word	0x000090fc
    86d4:	4006a000 	.word	0x4006a000
    86d8:	20000404 	.word	0x20000404
    86dc:	e000e100 	.word	0xe000e100

000086e0 <UART0_IRQHandler>:
UART0_IRQHandler():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:16
//功    能：收到一个字节，直接返回该字节
//备    注：进入本程序后，可使用uart_get_re_int函数可再进行中断标志判断
//          （1-有UART接收中断，0-没有UART接收中断）
//======================================================================
void UART_User_Handler(void)
{
    86e0:	b530      	push	{r4, r5, lr}
    86e2:	b083      	sub	sp, #12
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:19
	uint8_t ch;
	uint8_t flag;
	DISABLE_INTERRUPTS; //关总中断
    86e4:	b672      	cpsid	i
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:22
	//------------------------------------------------------------------
	//接收一个字节
	ch = uart_re1(UART_User, &flag); //调用接收一个字节的函数，清接收中断位
    86e6:	466b      	mov	r3, sp
    86e8:	1ddd      	adds	r5, r3, #7
    86ea:	0029      	movs	r1, r5
    86ec:	2000      	movs	r0, #0
    86ee:	f7ff ff9b 	bl	8628 <uart_re1>
    86f2:	0004      	movs	r4, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:23
	if (flag)						 //有数据
    86f4:	782b      	ldrb	r3, [r5, #0]
    86f6:	2b00      	cmp	r3, #0
    86f8:	d01c      	beq.n	8734 <UART0_IRQHandler+0x54>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:25
	{
		switch (ch)
    86fa:	0003      	movs	r3, r0
    86fc:	3b30      	subs	r3, #48	; 0x30
    86fe:	b2da      	uxtb	r2, r3
    8700:	2a07      	cmp	r2, #7
    8702:	d900      	bls.n	8706 <UART0_IRQHandler+0x26>
    8704:	e07d      	b.n	8802 <UART0_IRQHandler+0x122>
    8706:	0093      	lsls	r3, r2, #2
    8708:	4a40      	ldr	r2, [pc, #256]	; (880c <UART0_IRQHandler+0x12c>)
    870a:	58d3      	ldr	r3, [r2, r3]
    870c:	469f      	mov	pc, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:28
		{
		case '1':	//红灯
			gpio_set(LIGHT_RED, LIGHT_ON);
    870e:	2100      	movs	r1, #0
    8710:	2005      	movs	r0, #5
    8712:	f7ff fe0d 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:29
			gpio_set(LIGHT_GREEN, LIGHT_OFF);
    8716:	2101      	movs	r1, #1
    8718:	200c      	movs	r0, #12
    871a:	f7ff fe09 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:30
			gpio_set(LIGHT_BLUE, LIGHT_OFF);
    871e:	2101      	movs	r1, #1
    8720:	200d      	movs	r0, #13
    8722:	f7ff fe05 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:31
			printf("case 1");
    8726:	483a      	ldr	r0, [pc, #232]	; (8810 <UART0_IRQHandler+0x130>)
    8728:	f000 fc6c 	bl	9004 <myprintf>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:75
			break;
		default:
			printf("default!\n");
			break;
		}
		uart_send1(UART_User, ch); //回发接收到的字节
    872c:	0021      	movs	r1, r4
    872e:	2000      	movs	r0, #0
    8730:	f7ff ff4c 	bl	85cc <uart_send1>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:78
	}
	//------------------------------------------------------------------
	ENABLE_INTERRUPTS; //开总中断
    8734:	b662      	cpsie	i
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:79
}
    8736:	b003      	add	sp, #12
    8738:	bd30      	pop	{r4, r5, pc}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:34
			gpio_set(LIGHT_RED, LIGHT_OFF);
    873a:	2101      	movs	r1, #1
    873c:	2005      	movs	r0, #5
    873e:	f7ff fdf7 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:35
			gpio_set(LIGHT_GREEN, LIGHT_ON);
    8742:	2100      	movs	r1, #0
    8744:	200c      	movs	r0, #12
    8746:	f7ff fdf3 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:36
			gpio_set(LIGHT_BLUE, LIGHT_OFF);
    874a:	2101      	movs	r1, #1
    874c:	200d      	movs	r0, #13
    874e:	f7ff fdef 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:37
			printf("case 2");
    8752:	4830      	ldr	r0, [pc, #192]	; (8814 <UART0_IRQHandler+0x134>)
    8754:	f000 fc56 	bl	9004 <myprintf>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:38
			break;
    8758:	e7e8      	b.n	872c <UART0_IRQHandler+0x4c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:40
			gpio_set(LIGHT_BLUE, LIGHT_ON);
    875a:	2100      	movs	r1, #0
    875c:	200d      	movs	r0, #13
    875e:	f7ff fde7 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:41
			gpio_set(LIGHT_GREEN, LIGHT_OFF);
    8762:	2101      	movs	r1, #1
    8764:	200c      	movs	r0, #12
    8766:	f7ff fde3 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:42
			gpio_set(LIGHT_RED, LIGHT_OFF);
    876a:	2101      	movs	r1, #1
    876c:	2005      	movs	r0, #5
    876e:	f7ff fddf 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:43
			printf("case 3");
    8772:	4829      	ldr	r0, [pc, #164]	; (8818 <UART0_IRQHandler+0x138>)
    8774:	f000 fc46 	bl	9004 <myprintf>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:44
			break;
    8778:	e7d8      	b.n	872c <UART0_IRQHandler+0x4c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:46
			gpio_set(LIGHT_GREEN, LIGHT_ON);
    877a:	2100      	movs	r1, #0
    877c:	200c      	movs	r0, #12
    877e:	f7ff fdd7 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:47
			gpio_set(LIGHT_RED, LIGHT_ON);
    8782:	2100      	movs	r1, #0
    8784:	2005      	movs	r0, #5
    8786:	f7ff fdd3 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:48
			gpio_set(LIGHT_BLUE, LIGHT_OFF);
    878a:	2101      	movs	r1, #1
    878c:	200d      	movs	r0, #13
    878e:	f7ff fdcf 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:49
			break;
    8792:	e7cb      	b.n	872c <UART0_IRQHandler+0x4c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:51
			gpio_set(LIGHT_GREEN, LIGHT_ON);
    8794:	2100      	movs	r1, #0
    8796:	200c      	movs	r0, #12
    8798:	f7ff fdca 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:52
			gpio_set(LIGHT_RED, LIGHT_OFF);
    879c:	2101      	movs	r1, #1
    879e:	2005      	movs	r0, #5
    87a0:	f7ff fdc6 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:53
			gpio_set(LIGHT_BLUE, LIGHT_ON);
    87a4:	2100      	movs	r1, #0
    87a6:	200d      	movs	r0, #13
    87a8:	f7ff fdc2 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:54
			break;
    87ac:	e7be      	b.n	872c <UART0_IRQHandler+0x4c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:56
			gpio_set(LIGHT_GREEN, LIGHT_OFF);
    87ae:	2101      	movs	r1, #1
    87b0:	200c      	movs	r0, #12
    87b2:	f7ff fdbd 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:57
			gpio_set(LIGHT_RED, LIGHT_ON);
    87b6:	2100      	movs	r1, #0
    87b8:	2005      	movs	r0, #5
    87ba:	f7ff fdb9 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:58
			gpio_set(LIGHT_BLUE, LIGHT_ON);
    87be:	2100      	movs	r1, #0
    87c0:	200d      	movs	r0, #13
    87c2:	f7ff fdb5 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:59
			break;
    87c6:	e7b1      	b.n	872c <UART0_IRQHandler+0x4c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:61
			gpio_set(LIGHT_GREEN, LIGHT_ON);
    87c8:	2100      	movs	r1, #0
    87ca:	200c      	movs	r0, #12
    87cc:	f7ff fdb0 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:62
			gpio_set(LIGHT_RED, LIGHT_ON);
    87d0:	2100      	movs	r1, #0
    87d2:	2005      	movs	r0, #5
    87d4:	f7ff fdac 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:63
			gpio_set(LIGHT_BLUE, LIGHT_ON);
    87d8:	2100      	movs	r1, #0
    87da:	200d      	movs	r0, #13
    87dc:	f7ff fda8 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:64
			break;
    87e0:	e7a4      	b.n	872c <UART0_IRQHandler+0x4c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:66
			gpio_set(LIGHT_RED, LIGHT_OFF);
    87e2:	2101      	movs	r1, #1
    87e4:	2005      	movs	r0, #5
    87e6:	f7ff fda3 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:67
			gpio_set(LIGHT_GREEN, LIGHT_OFF);
    87ea:	2101      	movs	r1, #1
    87ec:	200c      	movs	r0, #12
    87ee:	f7ff fd9f 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:68
			gpio_set(LIGHT_BLUE, LIGHT_OFF);
    87f2:	2101      	movs	r1, #1
    87f4:	200d      	movs	r0, #13
    87f6:	f7ff fd9b 	bl	8330 <gpio_set>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:69
			printf("case 0");
    87fa:	4808      	ldr	r0, [pc, #32]	; (881c <UART0_IRQHandler+0x13c>)
    87fc:	f000 fc02 	bl	9004 <myprintf>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:70
			break;
    8800:	e794      	b.n	872c <UART0_IRQHandler+0x4c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:72
			printf("default!\n");
    8802:	4807      	ldr	r0, [pc, #28]	; (8820 <UART0_IRQHandler+0x140>)
    8804:	f000 fbfe 	bl	9004 <myprintf>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/isr.c:73
			break;
    8808:	e790      	b.n	872c <UART0_IRQHandler+0x4c>
    880a:	46c0      	nop			; (mov r8, r8)
    880c:	00009104 	.word	0x00009104
    8810:	00009124 	.word	0x00009124
    8814:	0000912c 	.word	0x0000912c
    8818:	00009134 	.word	0x00009134
    881c:	0000913c 	.word	0x0000913c
    8820:	00009144 	.word	0x00009144

00008824 <printk_putc>:
printk_putc():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:26
//功能概要：通过串口打出一个字符
//参数说明：data:数据：通过串口发送的一字节数据
//函数返回：无
//======================================================================
static void printk_putc(int c, int *count, PRINTK_INFO *info)
{
    8824:	b510      	push	{r4, lr}
    8826:	000c      	movs	r4, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:27
	switch (info->dest) {
    8828:	6813      	ldr	r3, [r2, #0]
    882a:	2b01      	cmp	r3, #1
    882c:	d005      	beq.n	883a <printk_putc+0x16>
    882e:	2b02      	cmp	r3, #2
    8830:	d007      	beq.n	8842 <printk_putc+0x1e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:38
		++(info->loc);
		break;
	default:
		break;
	}
	*count += 1;
    8832:	6823      	ldr	r3, [r4, #0]
    8834:	3301      	adds	r3, #1
    8836:	6023      	str	r3, [r4, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:39
}
    8838:	bd10      	pop	{r4, pc}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:29
		info->func((char) c);
    883a:	6853      	ldr	r3, [r2, #4]
    883c:	b240      	sxtb	r0, r0
    883e:	4798      	blx	r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:30
		break;
    8840:	e7f7      	b.n	8832 <printk_putc+0xe>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:32
		*(info->loc) = (unsigned char) c;
    8842:	6893      	ldr	r3, [r2, #8]
    8844:	7018      	strb	r0, [r3, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:33
		++(info->loc);
    8846:	6893      	ldr	r3, [r2, #8]
    8848:	3301      	adds	r3, #1
    884a:	6093      	str	r3, [r2, #8]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:34
		break;
    884c:	e7f1      	b.n	8832 <printk_putc+0xe>

0000884e <printk_mknumstr>:
printk_mknumstr():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:126
//       neg:有无符号:判断数据时有符号还是无符号整形
//       radix:格式选择:确定输出格式例如：十进制或十六进制...
//函数返回：无
//======================================================================
static int printk_mknumstr(char *numstr, void *nump, int neg, int radix)
{
    884e:	b5f0      	push	{r4, r5, r6, r7, lr}
    8850:	b083      	sub	sp, #12
    8852:	0016      	movs	r6, r2
    8854:	001d      	movs	r5, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:134
	int nlen;
	char *nstrp;

	nlen = 0;
	nstrp = numstr;
	*nstrp++ = '\0';
    8856:	1c47      	adds	r7, r0, #1
    8858:	2300      	movs	r3, #0
    885a:	7003      	strb	r3, [r0, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:136

	if (neg) {
    885c:	2a00      	cmp	r2, #0
    885e:	d01f      	beq.n	88a0 <printk_mknumstr+0x52>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:137
		a = *(int *) nump;
    8860:	680c      	ldr	r4, [r1, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:138
		if (a == 0) {
    8862:	2c00      	cmp	r4, #0
    8864:	d001      	beq.n	886a <printk_mknumstr+0x1c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:132
	nlen = 0;
    8866:	2600      	movs	r6, #0
    8868:	e00b      	b.n	8882 <printk_mknumstr+0x34>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:139
			*nstrp = '0';
    886a:	3330      	adds	r3, #48	; 0x30
    886c:	7043      	strb	r3, [r0, #1]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:140
			++nlen;
    886e:	2601      	movs	r6, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:176
			*nstrp++ = (char) uc;
			++nlen;
		}
	}
	done: return nlen;
}
    8870:	0030      	movs	r0, r6
    8872:	b003      	add	sp, #12
    8874:	bdf0      	pop	{r4, r5, r6, r7, pc}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:147
				c = ~c + 1 + '0';
    8876:	2330      	movs	r3, #48	; 0x30
    8878:	1a59      	subs	r1, r3, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:152
			*nstrp++ = (char) c;
    887a:	7039      	strb	r1, [r7, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:153
			++nlen;
    887c:	3601      	adds	r6, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:152
			*nstrp++ = (char) c;
    887e:	3701      	adds	r7, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:151
			a = b;
    8880:	9c01      	ldr	r4, [sp, #4]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:143
		while (a != 0) {
    8882:	2c00      	cmp	r4, #0
    8884:	d0f4      	beq.n	8870 <printk_mknumstr+0x22>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:144
			b = (int) a / (int) radix;
    8886:	0029      	movs	r1, r5
    8888:	0020      	movs	r0, r4
    888a:	f7fe fa97 	bl	6dbc <__divsi3>
    888e:	9001      	str	r0, [sp, #4]
    8890:	0029      	movs	r1, r5
    8892:	0020      	movs	r0, r4
    8894:	f7fe fb78 	bl	6f88 <__aeabi_idivmod>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:146
			if (c < 0) {
    8898:	2900      	cmp	r1, #0
    889a:	dbec      	blt.n	8876 <printk_mknumstr+0x28>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:149
				c = c + '0';
    889c:	3130      	adds	r1, #48	; 0x30
    889e:	e7ec      	b.n	887a <printk_mknumstr+0x2c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:156
		ua = *(unsigned int *) nump;
    88a0:	680c      	ldr	r4, [r1, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:157
		if (ua == 0) {
    88a2:	2c00      	cmp	r4, #0
    88a4:	d108      	bne.n	88b8 <printk_mknumstr+0x6a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:158
			*nstrp = '0';
    88a6:	2330      	movs	r3, #48	; 0x30
    88a8:	7043      	strb	r3, [r0, #1]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:159
			++nlen;
    88aa:	2601      	movs	r6, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:160
			goto done;
    88ac:	e7e0      	b.n	8870 <printk_mknumstr+0x22>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:168
				uc = uc - 10 + 'A';
    88ae:	3437      	adds	r4, #55	; 0x37
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:171
			*nstrp++ = (char) uc;
    88b0:	703c      	strb	r4, [r7, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:172
			++nlen;
    88b2:	3601      	adds	r6, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:171
			*nstrp++ = (char) uc;
    88b4:	3701      	adds	r7, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:170
			ua = ub;
    88b6:	0004      	movs	r4, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:162
		while (ua != 0) {
    88b8:	2c00      	cmp	r4, #0
    88ba:	d0d9      	beq.n	8870 <printk_mknumstr+0x22>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:163
			ub = (unsigned int) ua / (unsigned int) radix;
    88bc:	0029      	movs	r1, r5
    88be:	0020      	movs	r0, r4
    88c0:	f7fe f9f2 	bl	6ca8 <__udivsi3>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:164
			uc = (unsigned int) ua - ((unsigned int) ub * (unsigned int) radix);
    88c4:	0003      	movs	r3, r0
    88c6:	436b      	muls	r3, r5
    88c8:	1ae4      	subs	r4, r4, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:165
			if (uc < 10) {
    88ca:	2c09      	cmp	r4, #9
    88cc:	d8ef      	bhi.n	88ae <printk_mknumstr+0x60>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:166
				uc = uc + '0';
    88ce:	3430      	adds	r4, #48	; 0x30
    88d0:	e7ee      	b.n	88b0 <printk_mknumstr+0x62>

000088d2 <printk_pad_zero>:
printk_pad_zero():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:179
/********************************************************************/
static void printk_pad_zero(int curlen, int field_width, int *count,
		PRINTK_INFO *info) {
    88d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    88d4:	0004      	movs	r4, r0
    88d6:	000d      	movs	r5, r1
    88d8:	0017      	movs	r7, r2
    88da:	001e      	movs	r6, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:182
	int i;

	for (i = curlen; i < field_width; i++) {
    88dc:	e005      	b.n	88ea <printk_pad_zero+0x18>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:183 (discriminator 3)
		printk_putc('0', count, info);
    88de:	0032      	movs	r2, r6
    88e0:	0039      	movs	r1, r7
    88e2:	2030      	movs	r0, #48	; 0x30
    88e4:	f7ff ff9e 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:182 (discriminator 3)
	for (i = curlen; i < field_width; i++) {
    88e8:	3401      	adds	r4, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:182 (discriminator 1)
    88ea:	42ac      	cmp	r4, r5
    88ec:	dbf7      	blt.n	88de <printk_pad_zero+0xc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:185
	}
}
    88ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000088f0 <printk_pad_space>:
printk_pad_space():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:189

/********************************************************************/
static void printk_pad_space(int curlen, int field_width, int *count,
		PRINTK_INFO *info) {
    88f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    88f2:	0004      	movs	r4, r0
    88f4:	000d      	movs	r5, r1
    88f6:	0017      	movs	r7, r2
    88f8:	001e      	movs	r6, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:192
	int i;

	for (i = curlen; i < field_width; i++) {
    88fa:	e005      	b.n	8908 <printk_pad_space+0x18>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:193 (discriminator 3)
		printk_putc(' ', count, info);
    88fc:	0032      	movs	r2, r6
    88fe:	0039      	movs	r1, r7
    8900:	2020      	movs	r0, #32
    8902:	f7ff ff8f 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:192 (discriminator 3)
	for (i = curlen; i < field_width; i++) {
    8906:	3401      	adds	r4, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:192 (discriminator 1)
    8908:	42ac      	cmp	r4, r5
    890a:	dbf7      	blt.n	88fc <printk_pad_space+0xc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:195
	}
}
    890c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000890e <out_char>:
out_char():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:17
void out_char(char data) {
    890e:	b510      	push	{r4, lr}
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:18
	uart_send1(UART_printf, data);
    8910:	b2c1      	uxtb	r1, r0
    8912:	2002      	movs	r0, #2
    8914:	f7ff fe5a 	bl	85cc <uart_send1>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:19
}
    8918:	bd10      	pop	{r4, pc}
	...

0000891c <printk_mkfloatstr>:
printk_mkfloatstr():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:47
{
    891c:	b5f0      	push	{r4, r5, r6, r7, lr}
    891e:	46d6      	mov	lr, sl
    8920:	464f      	mov	r7, r9
    8922:	b580      	push	{r7, lr}
    8924:	b09b      	sub	sp, #108	; 0x6c
    8926:	0004      	movs	r4, r0
    8928:	4689      	mov	r9, r1
    892a:	0015      	movs	r5, r2
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:48
	uint32_t p,i,j,k,a[5]={0},b[19]={0};
    892c:	2214      	movs	r2, #20
    892e:	2100      	movs	r1, #0
    8930:	a815      	add	r0, sp, #84	; 0x54
    8932:	f000 fb82 	bl	903a <memset>
    8936:	224c      	movs	r2, #76	; 0x4c
    8938:	2100      	movs	r1, #0
    893a:	a802      	add	r0, sp, #8
    893c:	f000 fb7d 	bl	903a <memset>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:55
	p=(uint32_t)*f;//整数部分
    8940:	6826      	ldr	r6, [r4, #0]
    8942:	6867      	ldr	r7, [r4, #4]
    8944:	0030      	movs	r0, r6
    8946:	0039      	movs	r1, r7
    8948:	f7fe fb82 	bl	7050 <__aeabi_d2uiz>
    894c:	4682      	mov	sl, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:56
	tempf=(*f-p);
    894e:	f7ff fb75 	bl	803c <__aeabi_ui2d>
    8952:	0002      	movs	r2, r0
    8954:	000b      	movs	r3, r1
    8956:	0030      	movs	r0, r6
    8958:	0039      	movs	r1, r7
    895a:	f7fe fff1 	bl	7940 <__aeabi_dsub>
    895e:	0006      	movs	r6, r0
    8960:	000f      	movs	r7, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:57
	if(precision_width==0)
    8962:	2d00      	cmp	r5, #0
    8964:	d10e      	bne.n	8984 <printk_mkfloatstr+0x68>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:58
	q=(*f-p)*100000000000000000;//小数部分
    8966:	4a4b      	ldr	r2, [pc, #300]	; (8a94 <printk_mkfloatstr+0x178>)
    8968:	4b4b      	ldr	r3, [pc, #300]	; (8a98 <printk_mkfloatstr+0x17c>)
    896a:	f7fe fd77 	bl	745c <__aeabi_dmul>
    896e:	f7fe fb8d 	bl	708c <__aeabi_d2ulz>
    8972:	0004      	movs	r4, r0
    8974:	9101      	str	r1, [sp, #4]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:66
	k=0;
    8976:	2500      	movs	r5, #0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:67
	while(m<1)
    8978:	e015      	b.n	89a6 <printk_mkfloatstr+0x8a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:62
		tempf*=10;
    897a:	2200      	movs	r2, #0
    897c:	4b47      	ldr	r3, [pc, #284]	; (8a9c <printk_mkfloatstr+0x180>)
    897e:	f7fe fd6d 	bl	745c <__aeabi_dmul>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:61
		while(precision_width--)
    8982:	0025      	movs	r5, r4
    8984:	1e6c      	subs	r4, r5, #1
    8986:	2d00      	cmp	r5, #0
    8988:	d1f7      	bne.n	897a <printk_mkfloatstr+0x5e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:63
		q=tempf;
    898a:	f7fe fb7f 	bl	708c <__aeabi_d2ulz>
    898e:	0004      	movs	r4, r0
    8990:	9101      	str	r1, [sp, #4]
    8992:	e7f0      	b.n	8976 <printk_mkfloatstr+0x5a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:69
		m=m*10;
    8994:	2200      	movs	r2, #0
    8996:	4b41      	ldr	r3, [pc, #260]	; (8a9c <printk_mkfloatstr+0x180>)
    8998:	0030      	movs	r0, r6
    899a:	0039      	movs	r1, r7
    899c:	f7fe fd5e 	bl	745c <__aeabi_dmul>
    89a0:	0006      	movs	r6, r0
    89a2:	000f      	movs	r7, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:70
		k++;
    89a4:	3501      	adds	r5, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:67
	while(m<1)
    89a6:	2200      	movs	r2, #0
    89a8:	4b3d      	ldr	r3, [pc, #244]	; (8aa0 <printk_mkfloatstr+0x184>)
    89aa:	0030      	movs	r0, r6
    89ac:	0039      	movs	r1, r7
    89ae:	f7fe fb07 	bl	6fc0 <__aeabi_dcmplt>
    89b2:	2800      	cmp	r0, #0
    89b4:	d1ee      	bne.n	8994 <printk_mkfloatstr+0x78>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:72
	k--;          //记录小数点后到第一位不为零的小数之前 有多少个0.
    89b6:	1e6f      	subs	r7, r5, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:75
	if(0==p)     //整数部分为0
    89b8:	4653      	mov	r3, sl
    89ba:	2b00      	cmp	r3, #0
    89bc:	d121      	bne.n	8a02 <printk_mkfloatstr+0xe6>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:76
		c[i++]='0';
    89be:	3330      	adds	r3, #48	; 0x30
    89c0:	464a      	mov	r2, r9
    89c2:	7013      	strb	r3, [r2, #0]
    89c4:	3b2f      	subs	r3, #47	; 0x2f
    89c6:	469a      	mov	sl, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:91
	c[i++]='.';     //小数点
    89c8:	4653      	mov	r3, sl
    89ca:	1c5d      	adds	r5, r3, #1
    89cc:	232e      	movs	r3, #46	; 0x2e
    89ce:	464a      	mov	r2, r9
    89d0:	4651      	mov	r1, sl
    89d2:	5453      	strb	r3, [r2, r1]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:92
	if(0==q)        //小数部分为0
    89d4:	9b01      	ldr	r3, [sp, #4]
    89d6:	4323      	orrs	r3, r4
    89d8:	d023      	beq.n	8a22 <printk_mkfloatstr+0x106>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:96
		j=0;
    89da:	2600      	movs	r6, #0
    89dc:	e039      	b.n	8a52 <printk_mkfloatstr+0x136>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:82
			a[j++]=p%10;
    89de:	1c75      	adds	r5, r6, #1
    89e0:	210a      	movs	r1, #10
    89e2:	4650      	mov	r0, sl
    89e4:	f7fe f9e6 	bl	6db4 <__aeabi_uidivmod>
    89e8:	00b6      	lsls	r6, r6, #2
    89ea:	ab15      	add	r3, sp, #84	; 0x54
    89ec:	50f1      	str	r1, [r6, r3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:83
			p/=10;
    89ee:	210a      	movs	r1, #10
    89f0:	4650      	mov	r0, sl
    89f2:	f7fe f959 	bl	6ca8 <__udivsi3>
    89f6:	4682      	mov	sl, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:82
			a[j++]=p%10;
    89f8:	002e      	movs	r6, r5
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:80
		while(p!=0)//倒序的数字
    89fa:	4653      	mov	r3, sl
    89fc:	2b00      	cmp	r3, #0
    89fe:	d1ee      	bne.n	89de <printk_mkfloatstr+0xc2>
    8a00:	e00c      	b.n	8a1c <printk_mkfloatstr+0x100>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:79
		j=0;
    8a02:	2600      	movs	r6, #0
    8a04:	e7f9      	b.n	89fa <printk_mkfloatstr+0xde>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:87
			c[i++]=a[j-1]+'0';
    8a06:	3e01      	subs	r6, #1
    8a08:	00b2      	lsls	r2, r6, #2
    8a0a:	ab15      	add	r3, sp, #84	; 0x54
    8a0c:	58d3      	ldr	r3, [r2, r3]
    8a0e:	3330      	adds	r3, #48	; 0x30
    8a10:	464a      	mov	r2, r9
    8a12:	4651      	mov	r1, sl
    8a14:	5453      	strb	r3, [r2, r1]
    8a16:	2301      	movs	r3, #1
    8a18:	469c      	mov	ip, r3
    8a1a:	44e2      	add	sl, ip
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:85
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
    8a1c:	2e00      	cmp	r6, #0
    8a1e:	d1f2      	bne.n	8a06 <printk_mkfloatstr+0xea>
    8a20:	e7d2      	b.n	89c8 <printk_mkfloatstr+0xac>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:93
		c[i++]='0';
    8a22:	3330      	adds	r3, #48	; 0x30
    8a24:	5553      	strb	r3, [r2, r5]
    8a26:	3501      	adds	r5, #1
    8a28:	e02a      	b.n	8a80 <printk_mkfloatstr+0x164>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:100
			b[j++]=q%10;
    8a2a:	220a      	movs	r2, #10
    8a2c:	2300      	movs	r3, #0
    8a2e:	0020      	movs	r0, r4
    8a30:	9901      	ldr	r1, [sp, #4]
    8a32:	f7fe faed 	bl	7010 <__aeabi_uldivmod>
    8a36:	1c73      	adds	r3, r6, #1
    8a38:	469a      	mov	sl, r3
    8a3a:	00b6      	lsls	r6, r6, #2
    8a3c:	ab02      	add	r3, sp, #8
    8a3e:	50f2      	str	r2, [r6, r3]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:101
			q/=10;
    8a40:	220a      	movs	r2, #10
    8a42:	2300      	movs	r3, #0
    8a44:	0020      	movs	r0, r4
    8a46:	9901      	ldr	r1, [sp, #4]
    8a48:	f7fe fae2 	bl	7010 <__aeabi_uldivmod>
    8a4c:	0004      	movs	r4, r0
    8a4e:	9101      	str	r1, [sp, #4]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:100
			b[j++]=q%10;
    8a50:	4656      	mov	r6, sl
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:98
		while(q!=0)//倒序的数字
    8a52:	9b01      	ldr	r3, [sp, #4]
    8a54:	4323      	orrs	r3, r4
    8a56:	d1e8      	bne.n	8a2a <printk_mkfloatstr+0x10e>
    8a58:	e005      	b.n	8a66 <printk_mkfloatstr+0x14a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:105
			b[j++]=0;
    8a5a:	00b3      	lsls	r3, r6, #2
    8a5c:	2200      	movs	r2, #0
    8a5e:	a902      	add	r1, sp, #8
    8a60:	505a      	str	r2, [r3, r1]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:106
			k--;
    8a62:	3f01      	subs	r7, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:105
			b[j++]=0;
    8a64:	3601      	adds	r6, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:103
		while(k!=0)
    8a66:	2f00      	cmp	r7, #0
    8a68:	d1f7      	bne.n	8a5a <printk_mkfloatstr+0x13e>
    8a6a:	e007      	b.n	8a7c <printk_mkfloatstr+0x160>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:110
			c[i++]=b[j-1]+'0';
    8a6c:	3e01      	subs	r6, #1
    8a6e:	00b3      	lsls	r3, r6, #2
    8a70:	aa02      	add	r2, sp, #8
    8a72:	589b      	ldr	r3, [r3, r2]
    8a74:	3330      	adds	r3, #48	; 0x30
    8a76:	464a      	mov	r2, r9
    8a78:	5553      	strb	r3, [r2, r5]
    8a7a:	3501      	adds	r5, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:108
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
    8a7c:	2e00      	cmp	r6, #0
    8a7e:	d1f5      	bne.n	8a6c <printk_mkfloatstr+0x150>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:114
	c[i]='\0';
    8a80:	464b      	mov	r3, r9
    8a82:	195b      	adds	r3, r3, r5
    8a84:	2200      	movs	r2, #0
    8a86:	701a      	strb	r2, [r3, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:116
}
    8a88:	0028      	movs	r0, r5
    8a8a:	b01b      	add	sp, #108	; 0x6c
    8a8c:	bc0c      	pop	{r2, r3}
    8a8e:	4691      	mov	r9, r2
    8a90:	469a      	mov	sl, r3
    8a92:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8a94:	85d8a000 	.word	0x85d8a000
    8a98:	43763457 	.word	0x43763457
    8a9c:	40240000 	.word	0x40240000
    8aa0:	3ff00000 	.word	0x3ff00000

00008aa4 <printk>:
printk():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:204
//       fmt:输出格式信息
//       ap:va_list指针指向格式信息输出
//函数返回：无
//======================================================================
int printk(PRINTK_INFO *info, const char *fmt, char * ap)
{
    8aa4:	b5f0      	push	{r4, r5, r6, r7, lr}
    8aa6:	46de      	mov	lr, fp
    8aa8:	4657      	mov	r7, sl
    8aaa:	464e      	mov	r6, r9
    8aac:	4645      	mov	r5, r8
    8aae:	b5e0      	push	{r5, r6, r7, lr}
    8ab0:	b095      	sub	sp, #84	; 0x54
    8ab2:	9000      	str	r0, [sp, #0]
    8ab4:	000d      	movs	r5, r1
    8ab6:	4690      	mov	r8, r2
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:228

	}un1;*/
	char *p;
	int c;
	//char temp1;
	char vstr[33]={'0'};
    8ab8:	ac0b      	add	r4, sp, #44	; 0x2c
    8aba:	2221      	movs	r2, #33	; 0x21
    8abc:	2100      	movs	r1, #0
    8abe:	0020      	movs	r0, r4
    8ac0:	f000 fabb 	bl	903a <memset>
    8ac4:	2330      	movs	r3, #48	; 0x30
    8ac6:	7023      	strb	r3, [r4, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:249
	int *ivalp;
	char *sval;
	int cval;
	unsigned int uval;

	count = 0;
    8ac8:	2300      	movs	r3, #0
    8aca:	930a      	str	r3, [sp, #40]	; 0x28
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:251
	length_modifier=0;
	precision_used=TRUE;
    8acc:	3301      	adds	r3, #1
    8ace:	9301      	str	r3, [sp, #4]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:250
	length_modifier=0;
    8ad0:	2300      	movs	r3, #0
    8ad2:	469a      	mov	sl, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:253
	//从格式字符串第一个字符开始格式化输出数据
	for (p = (char *) fmt; (c = *p) != 0; p++)
    8ad4:	e00b      	b.n	8aee <printk+0x4a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:265
			if (c != '\n') {
				printk_putc(c, &count, info);
			}
			//输出换行符
			else {
				printk_putc(0x0D /* CR */, &count, info);
    8ad6:	9c00      	ldr	r4, [sp, #0]
    8ad8:	0022      	movs	r2, r4
    8ada:	a90a      	add	r1, sp, #40	; 0x28
    8adc:	200d      	movs	r0, #13
    8ade:	f7ff fea1 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:266
				printk_putc(0x0A /* LF */, &count, info);
    8ae2:	0022      	movs	r2, r4
    8ae4:	a90a      	add	r1, sp, #40	; 0x28
    8ae6:	200a      	movs	r0, #10
    8ae8:	f7ff fe9c 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:253 (discriminator 2)
	for (p = (char *) fmt; (c = *p) != 0; p++)
    8aec:	3501      	adds	r5, #1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:253 (discriminator 1)
    8aee:	2000      	movs	r0, #0
    8af0:	5628      	ldrsb	r0, [r5, r0]
    8af2:	2800      	cmp	r0, #0
    8af4:	d100      	bne.n	8af8 <printk+0x54>
    8af6:	e27c      	b.n	8ff2 <printk+0x54e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:256
		if (c != '%')
    8af8:	2825      	cmp	r0, #37	; 0x25
    8afa:	d022      	beq.n	8b42 <printk+0x9e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:260
			if (c != '\n') {
    8afc:	280a      	cmp	r0, #10
    8afe:	d0ea      	beq.n	8ad6 <printk+0x32>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:261
				printk_putc(c, &count, info);
    8b00:	9a00      	ldr	r2, [sp, #0]
    8b02:	a90a      	add	r1, sp, #40	; 0x28
    8b04:	f7ff fe8e 	bl	8824 <printk_putc>
    8b08:	e7f0      	b.n	8aec <printk+0x48>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:283
		flags_used = 0;
		done = FALSE;
		while (!done) {
			switch (/* c = */*++p) {
			case '-':
				flags_used |= FLAGS_MINUS;
    8b0a:	2301      	movs	r3, #1
    8b0c:	431e      	orrs	r6, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:204
{
    8b0e:	0005      	movs	r5, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:280
		while (!done) {
    8b10:	2900      	cmp	r1, #0
    8b12:	d11b      	bne.n	8b4c <printk+0xa8>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:281
			switch (/* c = */*++p) {
    8b14:	1c68      	adds	r0, r5, #1
    8b16:	2301      	movs	r3, #1
    8b18:	56eb      	ldrsb	r3, [r5, r3]
    8b1a:	3b20      	subs	r3, #32
    8b1c:	b2da      	uxtb	r2, r3
    8b1e:	2a10      	cmp	r2, #16
    8b20:	d812      	bhi.n	8b48 <printk+0xa4>
    8b22:	0093      	lsls	r3, r2, #2
    8b24:	4abe      	ldr	r2, [pc, #760]	; (8e20 <printk+0x37c>)
    8b26:	58d3      	ldr	r3, [r2, r3]
    8b28:	469f      	mov	pc, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:286
				break;
			case '+':
				flags_used |= FLAGS_PLUS;
    8b2a:	2302      	movs	r3, #2
    8b2c:	431e      	orrs	r6, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:287
				break;
    8b2e:	e7ee      	b.n	8b0e <printk+0x6a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:289
			case ' ':
				flags_used |= FLAGS_SPACE;
    8b30:	2304      	movs	r3, #4
    8b32:	431e      	orrs	r6, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:290
				break;
    8b34:	e7eb      	b.n	8b0e <printk+0x6a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:292
			case '0':
				flags_used |= FLAGS_ZERO;
    8b36:	2308      	movs	r3, #8
    8b38:	431e      	orrs	r6, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:293
				break;
    8b3a:	e7e8      	b.n	8b0e <printk+0x6a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:295
			case '#':
				flags_used |= FLAGS_POUND;
    8b3c:	2310      	movs	r3, #16
    8b3e:	431e      	orrs	r6, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:296
				break;
    8b40:	e7e5      	b.n	8b0e <printk+0x6a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:278
		flags_used = 0;
    8b42:	2600      	movs	r6, #0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:279
		done = FALSE;
    8b44:	2100      	movs	r1, #0
    8b46:	e7e3      	b.n	8b10 <printk+0x6c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:300
			default:
				/* we've gone one char too far */
				--p;
				done = TRUE;
    8b48:	2101      	movs	r1, #1
    8b4a:	e7e1      	b.n	8b10 <printk+0x6c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:307
			}
		}


		//检查%后再下一个字符 确定输出长度
		field_width = 0;
    8b4c:	2400      	movs	r4, #0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:308
		done = FALSE;
    8b4e:	2300      	movs	r3, #0
    8b50:	001f      	movs	r7, r3
    8b52:	e000      	b.n	8b56 <printk+0xb2>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:326
				field_width = (field_width * 10) + (c - '0');
				break;
			default:
				/* we've gone one char too far */
				--p;
				done = TRUE;
    8b54:	000f      	movs	r7, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:309
		while (!done) {
    8b56:	2f00      	cmp	r7, #0
    8b58:	d10e      	bne.n	8b78 <printk+0xd4>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:310
			switch (c = *++p) {
    8b5a:	1c68      	adds	r0, r5, #1
    8b5c:	2301      	movs	r3, #1
    8b5e:	56eb      	ldrsb	r3, [r5, r3]
    8b60:	001a      	movs	r2, r3
    8b62:	3a30      	subs	r2, #48	; 0x30
    8b64:	b2d2      	uxtb	r2, r2
    8b66:	2a09      	cmp	r2, #9
    8b68:	d8f4      	bhi.n	8b54 <printk+0xb0>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:321
				field_width = (field_width * 10) + (c - '0');
    8b6a:	00a2      	lsls	r2, r4, #2
    8b6c:	1912      	adds	r2, r2, r4
    8b6e:	0054      	lsls	r4, r2, #1
    8b70:	3b30      	subs	r3, #48	; 0x30
    8b72:	18e4      	adds	r4, r4, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:310
			switch (c = *++p) {
    8b74:	0005      	movs	r5, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:322
				break;
    8b76:	e7ee      	b.n	8b56 <printk+0xb2>
    8b78:	46bb      	mov	fp, r7
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:331
				break;
			}
		}
		//此时字符为%看是否有.输入
		if (/* (c = *++p) */*++p == '.') {
    8b7a:	1c6f      	adds	r7, r5, #1
    8b7c:	2301      	movs	r3, #1
    8b7e:	56eb      	ldrsb	r3, [r5, r3]
    8b80:	2b2e      	cmp	r3, #46	; 0x2e
    8b82:	d019      	beq.n	8bb8 <printk+0x114>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:368
		} else {
			/* we've gone one char too far */
			--p;
#if 1
			precision_used = FALSE;
			precision_width = 0;
    8b84:	2300      	movs	r3, #0
    8b86:	4699      	mov	r9, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:367
			precision_used = FALSE;
    8b88:	9301      	str	r3, [sp, #4]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:372
#endif
		}
		//判断 输出的是否有lf、LF等
		switch (/* c = */*++p) {
    8b8a:	1c6b      	adds	r3, r5, #1
    8b8c:	2201      	movs	r2, #1
    8b8e:	56aa      	ldrsb	r2, [r5, r2]
    8b90:	2a68      	cmp	r2, #104	; 0x68
    8b92:	d004      	beq.n	8b9e <printk+0xfa>
    8b94:	2a6c      	cmp	r2, #108	; 0x6c
    8b96:	d027      	beq.n	8be8 <printk+0x144>
    8b98:	2a4c      	cmp	r2, #76	; 0x4c
    8b9a:	d02a      	beq.n	8bf2 <printk+0x14e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:384
		case 'L':
			 length_modifier |= LENMOD_L;
			break;
		default:
			/* we've gone one char too far */
			--p;
    8b9c:	002b      	movs	r3, r5
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:389
			break;
		}

		//p为格式字符串的首地址
		switch (c = *++p) {
    8b9e:	1c5d      	adds	r5, r3, #1
    8ba0:	2001      	movs	r0, #1
    8ba2:	5618      	ldrsb	r0, [r3, r0]
    8ba4:	0003      	movs	r3, r0
    8ba6:	3b58      	subs	r3, #88	; 0x58
    8ba8:	b2da      	uxtb	r2, r3
    8baa:	2a20      	cmp	r2, #32
    8bac:	d900      	bls.n	8bb0 <printk+0x10c>
    8bae:	e218      	b.n	8fe2 <printk+0x53e>
    8bb0:	0093      	lsls	r3, r2, #2
    8bb2:	4a9c      	ldr	r2, [pc, #624]	; (8e24 <printk+0x380>)
    8bb4:	58d3      	ldr	r3, [r2, r3]
    8bb6:	469f      	mov	pc, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:337
			precision_width = 0;
    8bb8:	2300      	movs	r3, #0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:338
			done = FALSE;
    8bba:	2000      	movs	r0, #0
    8bbc:	e000      	b.n	8bc0 <printk+0x11c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:359
					done = TRUE;
    8bbe:	4658      	mov	r0, fp
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:339
			while (!done) {
    8bc0:	2800      	cmp	r0, #0
    8bc2:	d10e      	bne.n	8be2 <printk+0x13e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:340
				switch ( c = *++p) {
    8bc4:	1c7d      	adds	r5, r7, #1
    8bc6:	2201      	movs	r2, #1
    8bc8:	56ba      	ldrsb	r2, [r7, r2]
    8bca:	0011      	movs	r1, r2
    8bcc:	3930      	subs	r1, #48	; 0x30
    8bce:	b2c9      	uxtb	r1, r1
    8bd0:	2909      	cmp	r1, #9
    8bd2:	d8f4      	bhi.n	8bbe <printk+0x11a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:352
				precision_width = (precision_width * 10) +	(c - '0');
    8bd4:	0099      	lsls	r1, r3, #2
    8bd6:	18c9      	adds	r1, r1, r3
    8bd8:	004b      	lsls	r3, r1, #1
    8bda:	3a30      	subs	r2, #48	; 0x30
    8bdc:	189b      	adds	r3, r3, r2
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:340
				switch ( c = *++p) {
    8bde:	002f      	movs	r7, r5
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:355
					break;
    8be0:	e7ee      	b.n	8bc0 <printk+0x11c>
    8be2:	4699      	mov	r9, r3
    8be4:	003d      	movs	r5, r7
    8be6:	e7d0      	b.n	8b8a <printk+0xe6>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:377
			 length_modifier |= LENMOD_l;
    8be8:	2201      	movs	r2, #1
    8bea:	4651      	mov	r1, sl
    8bec:	4311      	orrs	r1, r2
    8bee:	468a      	mov	sl, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:378
			break;
    8bf0:	e7d5      	b.n	8b9e <printk+0xfa>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:380
			 length_modifier |= LENMOD_L;
    8bf2:	2202      	movs	r2, #2
    8bf4:	4651      	mov	r1, sl
    8bf6:	4311      	orrs	r1, r2
    8bf8:	468a      	mov	sl, r1
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:381
			break;
    8bfa:	e7d0      	b.n	8b9e <printk+0xfa>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:394
		case 'd':
		case 'i':
			//此时ap为指向可变参数列表的第一个参数
			//返回当前参数，并将ap指向下一个参数
			ival = (int) va_arg(ap, int);  
    8bfc:	4643      	mov	r3, r8
    8bfe:	3304      	adds	r3, #4
    8c00:	9302      	str	r3, [sp, #8]
    8c02:	4643      	mov	r3, r8
    8c04:	681b      	ldr	r3, [r3, #0]
    8c06:	9309      	str	r3, [sp, #36]	; 0x24
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:396
			//将整型转换成字符型保存在vstr中，返回字符数vlen
			vlen = printk_mknumstr(vstr, &ival, TRUE, 10);
    8c08:	230a      	movs	r3, #10
    8c0a:	2201      	movs	r2, #1
    8c0c:	a909      	add	r1, sp, #36	; 0x24
    8c0e:	a80b      	add	r0, sp, #44	; 0x2c
    8c10:	f7ff fe1d 	bl	884e <printk_mknumstr>
    8c14:	4681      	mov	r9, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:398
			//指向转换后的最后一个字符
			vstrp = &vstr[vlen];  
    8c16:	af0b      	add	r7, sp, #44	; 0x2c
    8c18:	444f      	add	r7, r9
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:401

			//若参数小于0，添加'-'号，并将字符长度加1
			if (ival < 0) {
    8c1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8c1c:	2b00      	cmp	r3, #0
    8c1e:	db07      	blt.n	8c30 <printk+0x18c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:407
				schar = '-';
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
    8c20:	07b3      	lsls	r3, r6, #30
    8c22:	d519      	bpl.n	8c58 <printk+0x1b4>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:409
					schar = '+';
					++vlen;
    8c24:	2301      	movs	r3, #1
    8c26:	469c      	mov	ip, r3
    8c28:	44e1      	add	r9, ip
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:408
					schar = '+';
    8c2a:	332a      	adds	r3, #42	; 0x2a
    8c2c:	4698      	mov	r8, r3
    8c2e:	e004      	b.n	8c3a <printk+0x196>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:403
				++vlen;
    8c30:	2301      	movs	r3, #1
    8c32:	469c      	mov	ip, r3
    8c34:	44e1      	add	r9, ip
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:402
				schar = '-';
    8c36:	332c      	adds	r3, #44	; 0x2c
    8c38:	4698      	mov	r8, r3
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:424
			dschar = FALSE;

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
    8c3a:	0733      	lsls	r3, r6, #28
    8c3c:	d51c      	bpl.n	8c78 <printk+0x1d4>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:425
				if (schar)
    8c3e:	4643      	mov	r3, r8
    8c40:	2b00      	cmp	r3, #0
    8c42:	d113      	bne.n	8c6c <printk+0x1c8>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:428
					printk_putc(schar, &count, info);  //输出符号
				dschar = TRUE;
				printk_pad_zero(vlen, field_width, &count, info);
    8c44:	9b00      	ldr	r3, [sp, #0]
    8c46:	aa0a      	add	r2, sp, #40	; 0x28
    8c48:	0021      	movs	r1, r4
    8c4a:	4648      	mov	r0, r9
    8c4c:	f7ff fe41 	bl	88d2 <printk_pad_zero>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:429
				vlen = field_width;
    8c50:	46a1      	mov	r9, r4
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    8c52:	9b02      	ldr	r3, [sp, #8]
    8c54:	4698      	mov	r8, r3
    8c56:	e162      	b.n	8f1e <printk+0x47a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:411
					if (IS_FLAG_SPACE(flags_used)) {
    8c58:	2304      	movs	r3, #4
    8c5a:	4033      	ands	r3, r6
    8c5c:	4698      	mov	r8, r3
    8c5e:	d0ec      	beq.n	8c3a <printk+0x196>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:413
						++vlen;
    8c60:	2301      	movs	r3, #1
    8c62:	469c      	mov	ip, r3
    8c64:	44e1      	add	r9, ip
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:412
						schar = ' ';
    8c66:	331f      	adds	r3, #31
    8c68:	4698      	mov	r8, r3
    8c6a:	e7e6      	b.n	8c3a <printk+0x196>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:426
					printk_putc(schar, &count, info);  //输出符号
    8c6c:	9a00      	ldr	r2, [sp, #0]
    8c6e:	a90a      	add	r1, sp, #40	; 0x28
    8c70:	4640      	mov	r0, r8
    8c72:	f7ff fdd7 	bl	8824 <printk_putc>
    8c76:	e7e5      	b.n	8c44 <printk+0x1a0>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:431
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
    8c78:	07f3      	lsls	r3, r6, #31
    8c7a:	d505      	bpl.n	8c88 <printk+0x1e4>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:442
				}
			}

			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
    8c7c:	4643      	mov	r3, r8
    8c7e:	2b00      	cmp	r3, #0
    8c80:	d116      	bne.n	8cb0 <printk+0x20c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    8c82:	9b02      	ldr	r3, [sp, #8]
    8c84:	4698      	mov	r8, r3
    8c86:	e14a      	b.n	8f1e <printk+0x47a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:432
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
    8c88:	9b00      	ldr	r3, [sp, #0]
    8c8a:	aa0a      	add	r2, sp, #40	; 0x28
    8c8c:	0021      	movs	r1, r4
    8c8e:	4648      	mov	r0, r9
    8c90:	f7ff fe2e 	bl	88f0 <printk_pad_space>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:434
					if (schar)
    8c94:	4643      	mov	r3, r8
    8c96:	2b00      	cmp	r3, #0
    8c98:	d102      	bne.n	8ca0 <printk+0x1fc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    8c9a:	9b02      	ldr	r3, [sp, #8]
    8c9c:	4698      	mov	r8, r3
    8c9e:	e13e      	b.n	8f1e <printk+0x47a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:435
						printk_putc(schar, &count, info);
    8ca0:	9a00      	ldr	r2, [sp, #0]
    8ca2:	a90a      	add	r1, sp, #40	; 0x28
    8ca4:	4640      	mov	r0, r8
    8ca6:	f7ff fdbd 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    8caa:	9b02      	ldr	r3, [sp, #8]
    8cac:	4698      	mov	r8, r3
    8cae:	e136      	b.n	8f1e <printk+0x47a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:443
				printk_putc(schar, &count, info);
    8cb0:	9a00      	ldr	r2, [sp, #0]
    8cb2:	a90a      	add	r1, sp, #40	; 0x28
    8cb4:	4640      	mov	r0, r8
    8cb6:	f7ff fdb5 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:394
			ival = (int) va_arg(ap, int);  
    8cba:	9b02      	ldr	r3, [sp, #8]
    8cbc:	4698      	mov	r8, r3
    8cbe:	e12e      	b.n	8f1e <printk+0x47a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:457
			//实际传入变参数 函数后 浮点数变为:0x6000000040091EB8 实际是将其转化为double型数据
			//但是顺序反了，我们要做的是将后四字节提前，然后把0x60移到紧接着前四个字节后的位置。
			
			//【20200816】  XSX，解决浮点数不优化问题
			ap=ap+4;
			fval= (double)va_arg(ap,double);
    8cc0:	230c      	movs	r3, #12
    8cc2:	4443      	add	r3, r8
    8cc4:	469b      	mov	fp, r3
    8cc6:	4643      	mov	r3, r8
    8cc8:	6859      	ldr	r1, [r3, #4]
    8cca:	689f      	ldr	r7, [r3, #8]
    8ccc:	9102      	str	r1, [sp, #8]
    8cce:	000a      	movs	r2, r1
    8cd0:	003b      	movs	r3, r7
    8cd2:	9206      	str	r2, [sp, #24]
    8cd4:	9307      	str	r3, [sp, #28]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:461
			
			//【20200816】  XSX，解决负数的浮点数输出问题
			//若参数小于0，添加'-'号，并将字符长度加1
			if (fval < 0) {
    8cd6:	2200      	movs	r2, #0
    8cd8:	2300      	movs	r3, #0
    8cda:	9802      	ldr	r0, [sp, #8]
    8cdc:	0039      	movs	r1, r7
    8cde:	f7fe f96f 	bl	6fc0 <__aeabi_dcmplt>
    8ce2:	2800      	cmp	r0, #0
    8ce4:	d106      	bne.n	8cf4 <printk+0x250>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:468
				fval = -fval;				//负数取它的正数
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
    8ce6:	07b3      	lsls	r3, r6, #30
    8ce8:	d424      	bmi.n	8d34 <printk+0x290>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:472
					schar = '+';
					++vlen;
				} else {
					if (IS_FLAG_SPACE(flags_used)) {
    8cea:	2704      	movs	r7, #4
    8cec:	4037      	ands	r7, r6
    8cee:	d008      	beq.n	8d02 <printk+0x25e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:473
						schar = ' ';
    8cf0:	2720      	movs	r7, #32
    8cf2:	e006      	b.n	8d02 <printk+0x25e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:463
				fval = -fval;				//负数取它的正数
    8cf4:	9a02      	ldr	r2, [sp, #8]
    8cf6:	2180      	movs	r1, #128	; 0x80
    8cf8:	0609      	lsls	r1, r1, #24
    8cfa:	187b      	adds	r3, r7, r1
    8cfc:	9206      	str	r2, [sp, #24]
    8cfe:	9307      	str	r3, [sp, #28]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:462
				schar = '-';
    8d00:	272d      	movs	r7, #45	; 0x2d
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:483
				}
			}
			dschar = FALSE;
			
			//确定是否使用小数点精度数值
			if(precision_used)
    8d02:	9b01      	ldr	r3, [sp, #4]
    8d04:	2b00      	cmp	r3, #0
    8d06:	d117      	bne.n	8d38 <printk+0x294>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:491
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);
				vstrp = &vstr[0];  //指向转换后的第一个字符
			}
			else
			{	//浮点型精度到小数点后8位
				if(length_modifier==0)   
    8d08:	4653      	mov	r3, sl
    8d0a:	2b00      	cmp	r3, #0
    8d0c:	d11b      	bne.n	8d46 <printk+0x2a2>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:493
				{	//将整型转换成字符型保存在vstr中，返回字符数vlen
					vlen = printk_mkfloatstr(&fval,vstr,8);
    8d0e:	2208      	movs	r2, #8
    8d10:	a90b      	add	r1, sp, #44	; 0x2c
    8d12:	a806      	add	r0, sp, #24
    8d14:	f7ff fe02 	bl	891c <printk_mkfloatstr>
    8d18:	9002      	str	r0, [sp, #8]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:511
			

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
    8d1a:	0733      	lsls	r3, r6, #28
    8d1c:	d520      	bpl.n	8d60 <printk+0x2bc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:512
				if (schar)
    8d1e:	2f00      	cmp	r7, #0
    8d20:	d118      	bne.n	8d54 <printk+0x2b0>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:515
					printk_putc(schar, &count, info);  //输出符号
				dschar = TRUE;
				printk_pad_zero(vlen, field_width, &count, info);
    8d22:	9b00      	ldr	r3, [sp, #0]
    8d24:	aa0a      	add	r2, sp, #40	; 0x28
    8d26:	0021      	movs	r1, r4
    8d28:	9802      	ldr	r0, [sp, #8]
    8d2a:	f7ff fdd2 	bl	88d2 <printk_pad_zero>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:516
				vlen = field_width;
    8d2e:	9402      	str	r4, [sp, #8]
    8d30:	af0b      	add	r7, sp, #44	; 0x2c
    8d32:	e032      	b.n	8d9a <printk+0x2f6>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:469
					schar = '+';
    8d34:	272b      	movs	r7, #43	; 0x2b
    8d36:	e7e4      	b.n	8d02 <printk+0x25e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:486
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);
    8d38:	464a      	mov	r2, r9
    8d3a:	a90b      	add	r1, sp, #44	; 0x2c
    8d3c:	a806      	add	r0, sp, #24
    8d3e:	f7ff fded 	bl	891c <printk_mkfloatstr>
    8d42:	9002      	str	r0, [sp, #8]
    8d44:	e7e9      	b.n	8d1a <printk+0x276>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:499
					vlen = printk_mkfloatstr(&fval,vstr,precision_width);
    8d46:	464a      	mov	r2, r9
    8d48:	a90b      	add	r1, sp, #44	; 0x2c
    8d4a:	a806      	add	r0, sp, #24
    8d4c:	f7ff fde6 	bl	891c <printk_mkfloatstr>
    8d50:	9002      	str	r0, [sp, #8]
    8d52:	e7e2      	b.n	8d1a <printk+0x276>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:513
					printk_putc(schar, &count, info);  //输出符号
    8d54:	9a00      	ldr	r2, [sp, #0]
    8d56:	a90a      	add	r1, sp, #40	; 0x28
    8d58:	0038      	movs	r0, r7
    8d5a:	f7ff fd63 	bl	8824 <printk_putc>
    8d5e:	e7e0      	b.n	8d22 <printk+0x27e>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:518
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
    8d60:	07f3      	lsls	r3, r6, #31
    8d62:	d507      	bpl.n	8d74 <printk+0x2d0>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:529
				}
			}

			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
    8d64:	2f00      	cmp	r7, #0
    8d66:	d0e3      	beq.n	8d30 <printk+0x28c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:530
				printk_putc(schar, &count, info);
    8d68:	9a00      	ldr	r2, [sp, #0]
    8d6a:	a90a      	add	r1, sp, #40	; 0x28
    8d6c:	0038      	movs	r0, r7
    8d6e:	f7ff fd59 	bl	8824 <printk_putc>
    8d72:	e7dd      	b.n	8d30 <printk+0x28c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:519
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
    8d74:	9b00      	ldr	r3, [sp, #0]
    8d76:	aa0a      	add	r2, sp, #40	; 0x28
    8d78:	0021      	movs	r1, r4
    8d7a:	9802      	ldr	r0, [sp, #8]
    8d7c:	f7ff fdb8 	bl	88f0 <printk_pad_space>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:521
					if (schar)
    8d80:	2f00      	cmp	r7, #0
    8d82:	d0d5      	beq.n	8d30 <printk+0x28c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:522
						printk_putc(schar, &count, info);
    8d84:	9a00      	ldr	r2, [sp, #0]
    8d86:	a90a      	add	r1, sp, #40	; 0x28
    8d88:	0038      	movs	r0, r7
    8d8a:	f7ff fd4b 	bl	8824 <printk_putc>
    8d8e:	e7cf      	b.n	8d30 <printk+0x28c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:533
			}
			while (*vstrp)
				printk_putc(*vstrp++, &count, info);
    8d90:	3701      	adds	r7, #1
    8d92:	9a00      	ldr	r2, [sp, #0]
    8d94:	a90a      	add	r1, sp, #40	; 0x28
    8d96:	f7ff fd45 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:532
			while (*vstrp)
    8d9a:	2000      	movs	r0, #0
    8d9c:	5638      	ldrsb	r0, [r7, r0]
    8d9e:	2800      	cmp	r0, #0
    8da0:	d1f6      	bne.n	8d90 <printk+0x2ec>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:534
			if (IS_FLAG_MINUS(flags_used)) {
    8da2:	07f3      	lsls	r3, r6, #31
    8da4:	d401      	bmi.n	8daa <printk+0x306>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:457
			fval= (double)va_arg(ap,double);
    8da6:	46d8      	mov	r8, fp
    8da8:	e6a0      	b.n	8aec <printk+0x48>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:535
				printk_pad_space(vlen, field_width, &count, info);
    8daa:	9b00      	ldr	r3, [sp, #0]
    8dac:	aa0a      	add	r2, sp, #40	; 0x28
    8dae:	0021      	movs	r1, r4
    8db0:	9802      	ldr	r0, [sp, #8]
    8db2:	f7ff fd9d 	bl	88f0 <printk_pad_space>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:457
			fval= (double)va_arg(ap,double);
    8db6:	46d8      	mov	r8, fp
    8db8:	e698      	b.n	8aec <printk+0x48>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:541
			}
            break;
        //以下是16进制整形输出
		case 'x':
		case 'X':
			uval = (unsigned int) va_arg(ap, unsigned int);
    8dba:	4643      	mov	r3, r8
    8dbc:	3304      	adds	r3, #4
    8dbe:	9302      	str	r3, [sp, #8]
    8dc0:	4643      	mov	r3, r8
    8dc2:	681b      	ldr	r3, [r3, #0]
    8dc4:	9305      	str	r3, [sp, #20]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:542
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
    8dc6:	2310      	movs	r3, #16
    8dc8:	2200      	movs	r2, #0
    8dca:	a905      	add	r1, sp, #20
    8dcc:	a80b      	add	r0, sp, #44	; 0x2c
    8dce:	f7ff fd3e 	bl	884e <printk_mknumstr>
    8dd2:	4681      	mov	r9, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:543
			vstrp = &vstr[vlen];
    8dd4:	af0b      	add	r7, sp, #44	; 0x2c
    8dd6:	444f      	add	r7, r9
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:546

			dschar = FALSE;
			if (IS_FLAG_ZERO(flags_used)) {
    8dd8:	2308      	movs	r3, #8
    8dda:	4033      	ands	r3, r6
    8ddc:	4698      	mov	r8, r3
    8dde:	d023      	beq.n	8e28 <printk+0x384>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:547
				if (IS_FLAG_POUND(flags_used)) {
    8de0:	2310      	movs	r3, #16
    8de2:	4033      	ands	r3, r6
    8de4:	4698      	mov	r8, r3
    8de6:	d10f      	bne.n	8e08 <printk+0x364>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:553
					printk_putc('0', &count, info);
					printk_putc('x', &count, info);
					/*vlen += 2;*/
					dschar = TRUE;
				}
				printk_pad_zero(vlen, field_width, &count, info);
    8de8:	9b00      	ldr	r3, [sp, #0]
    8dea:	aa0a      	add	r2, sp, #40	; 0x28
    8dec:	0021      	movs	r1, r4
    8dee:	4648      	mov	r0, r9
    8df0:	f7ff fd6f 	bl	88d2 <printk_pad_zero>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:554
				vlen = field_width;
    8df4:	46a1      	mov	r9, r4
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:569
						dschar = TRUE;
					}
				}
			}

			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
    8df6:	06f3      	lsls	r3, r6, #27
    8df8:	d400      	bmi.n	8dfc <printk+0x358>
    8dfa:	e09e      	b.n	8f3a <printk+0x496>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:569 (discriminator 1)
    8dfc:	4643      	mov	r3, r8
    8dfe:	2b00      	cmp	r3, #0
    8e00:	d030      	beq.n	8e64 <printk+0x3c0>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:541
			uval = (unsigned int) va_arg(ap, unsigned int);
    8e02:	9b02      	ldr	r3, [sp, #8]
    8e04:	4698      	mov	r8, r3
    8e06:	e08a      	b.n	8f1e <printk+0x47a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:548
					printk_putc('0', &count, info);
    8e08:	9a00      	ldr	r2, [sp, #0]
    8e0a:	a90a      	add	r1, sp, #40	; 0x28
    8e0c:	2030      	movs	r0, #48	; 0x30
    8e0e:	f7ff fd09 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:549
					printk_putc('x', &count, info);
    8e12:	9a00      	ldr	r2, [sp, #0]
    8e14:	a90a      	add	r1, sp, #40	; 0x28
    8e16:	2078      	movs	r0, #120	; 0x78
    8e18:	f7ff fd04 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:551
					dschar = TRUE;
    8e1c:	46d8      	mov	r8, fp
    8e1e:	e7e3      	b.n	8de8 <printk+0x344>
    8e20:	00009150 	.word	0x00009150
    8e24:	00009194 	.word	0x00009194
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:556
				if (!IS_FLAG_MINUS(flags_used)) {
    8e28:	07f3      	lsls	r3, r6, #31
    8e2a:	d4e4      	bmi.n	8df6 <printk+0x352>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:557
					if (IS_FLAG_POUND(flags_used)) {
    8e2c:	2310      	movs	r3, #16
    8e2e:	4033      	ands	r3, r6
    8e30:	4698      	mov	r8, r3
    8e32:	d002      	beq.n	8e3a <printk+0x396>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:558
						vlen += 2;
    8e34:	2302      	movs	r3, #2
    8e36:	469c      	mov	ip, r3
    8e38:	44e1      	add	r9, ip
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:560
					printk_pad_space(vlen, field_width, &count, info);
    8e3a:	9b00      	ldr	r3, [sp, #0]
    8e3c:	aa0a      	add	r2, sp, #40	; 0x28
    8e3e:	0021      	movs	r1, r4
    8e40:	4648      	mov	r0, r9
    8e42:	f7ff fd55 	bl	88f0 <printk_pad_space>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:561
					if (IS_FLAG_POUND(flags_used)) {
    8e46:	4643      	mov	r3, r8
    8e48:	2b00      	cmp	r3, #0
    8e4a:	d0d4      	beq.n	8df6 <printk+0x352>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:562
						printk_putc('0', &count, info);
    8e4c:	9a00      	ldr	r2, [sp, #0]
    8e4e:	a90a      	add	r1, sp, #40	; 0x28
    8e50:	2030      	movs	r0, #48	; 0x30
    8e52:	f7ff fce7 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:563
						printk_putc('x', &count, info);
    8e56:	9a00      	ldr	r2, [sp, #0]
    8e58:	a90a      	add	r1, sp, #40	; 0x28
    8e5a:	2078      	movs	r0, #120	; 0x78
    8e5c:	f7ff fce2 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:564
						dschar = TRUE;
    8e60:	46d8      	mov	r8, fp
    8e62:	e7c8      	b.n	8df6 <printk+0x352>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:570
				printk_putc('0', &count, info);
    8e64:	9a00      	ldr	r2, [sp, #0]
    8e66:	a90a      	add	r1, sp, #40	; 0x28
    8e68:	2030      	movs	r0, #48	; 0x30
    8e6a:	f7ff fcdb 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:571
				printk_putc('x', &count, info);
    8e6e:	9a00      	ldr	r2, [sp, #0]
    8e70:	a90a      	add	r1, sp, #40	; 0x28
    8e72:	2078      	movs	r0, #120	; 0x78
    8e74:	f7ff fcd6 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:572
				vlen += 2;
    8e78:	2302      	movs	r3, #2
    8e7a:	469c      	mov	ip, r3
    8e7c:	44e1      	add	r9, ip
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:541
			uval = (unsigned int) va_arg(ap, unsigned int);
    8e7e:	9b02      	ldr	r3, [sp, #8]
    8e80:	4698      	mov	r8, r3
    8e82:	e04c      	b.n	8f1e <printk+0x47a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:577
			}
			goto cont_xd;
		//无符号以八进制表示的整数输出
		case 'o':
			uval = (unsigned int) va_arg(ap, unsigned int);
    8e84:	4643      	mov	r3, r8
    8e86:	1d1f      	adds	r7, r3, #4
    8e88:	681b      	ldr	r3, [r3, #0]
    8e8a:	9305      	str	r3, [sp, #20]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:578
			vlen = printk_mknumstr(vstr, &uval, FALSE, 8);
    8e8c:	2308      	movs	r3, #8
    8e8e:	2200      	movs	r2, #0
    8e90:	a905      	add	r1, sp, #20
    8e92:	a80b      	add	r0, sp, #44	; 0x2c
    8e94:	f7ff fcdb 	bl	884e <printk_mknumstr>
    8e98:	4681      	mov	r9, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:577
			uval = (unsigned int) va_arg(ap, unsigned int);
    8e9a:	46b8      	mov	r8, r7
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:594
			goto cont_u;
		case 'u':
			uval = (unsigned int) va_arg(ap, unsigned int);
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);

			cont_u: vstrp = &vstr[vlen];
    8e9c:	af0b      	add	r7, sp, #44	; 0x2c
    8e9e:	444f      	add	r7, r9
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:596

			if (IS_FLAG_ZERO(flags_used)) {
    8ea0:	0733      	lsls	r3, r6, #28
    8ea2:	d42f      	bmi.n	8f04 <printk+0x460>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:600
				printk_pad_zero(vlen, field_width, &count, info);
				vlen = field_width;
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
    8ea4:	07f3      	lsls	r3, r6, #31
    8ea6:	d43a      	bmi.n	8f1e <printk+0x47a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:601
					printk_pad_space(vlen, field_width, &count, info);
    8ea8:	9b00      	ldr	r3, [sp, #0]
    8eaa:	aa0a      	add	r2, sp, #40	; 0x28
    8eac:	0021      	movs	r1, r4
    8eae:	4648      	mov	r0, r9
    8eb0:	f7ff fd1e 	bl	88f0 <printk_pad_space>
    8eb4:	e033      	b.n	8f1e <printk+0x47a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:582
			uval = (unsigned int) va_arg(ap, unsigned int);
    8eb6:	4643      	mov	r3, r8
    8eb8:	1d1f      	adds	r7, r3, #4
    8eba:	681b      	ldr	r3, [r3, #0]
    8ebc:	9305      	str	r3, [sp, #20]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:583
			vlen = printk_mknumstr(vstr, &uval, FALSE, 2);
    8ebe:	2302      	movs	r3, #2
    8ec0:	2200      	movs	r2, #0
    8ec2:	a905      	add	r1, sp, #20
    8ec4:	a80b      	add	r0, sp, #44	; 0x2c
    8ec6:	f7ff fcc2 	bl	884e <printk_mknumstr>
    8eca:	4681      	mov	r9, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:582
			uval = (unsigned int) va_arg(ap, unsigned int);
    8ecc:	46b8      	mov	r8, r7
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:584
			goto cont_u;
    8ece:	e7e5      	b.n	8e9c <printk+0x3f8>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:587
			uval = (unsigned int) va_arg(ap, void *);
    8ed0:	4643      	mov	r3, r8
    8ed2:	1d1f      	adds	r7, r3, #4
    8ed4:	681b      	ldr	r3, [r3, #0]
    8ed6:	9305      	str	r3, [sp, #20]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:588
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
    8ed8:	2310      	movs	r3, #16
    8eda:	2200      	movs	r2, #0
    8edc:	a905      	add	r1, sp, #20
    8ede:	a80b      	add	r0, sp, #44	; 0x2c
    8ee0:	f7ff fcb5 	bl	884e <printk_mknumstr>
    8ee4:	4681      	mov	r9, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:587
			uval = (unsigned int) va_arg(ap, void *);
    8ee6:	46b8      	mov	r8, r7
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:589
			goto cont_u;
    8ee8:	e7d8      	b.n	8e9c <printk+0x3f8>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:591
			uval = (unsigned int) va_arg(ap, unsigned int);
    8eea:	4643      	mov	r3, r8
    8eec:	1d1f      	adds	r7, r3, #4
    8eee:	681b      	ldr	r3, [r3, #0]
    8ef0:	9305      	str	r3, [sp, #20]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:592
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);
    8ef2:	230a      	movs	r3, #10
    8ef4:	2200      	movs	r2, #0
    8ef6:	a905      	add	r1, sp, #20
    8ef8:	a80b      	add	r0, sp, #44	; 0x2c
    8efa:	f7ff fca8 	bl	884e <printk_mknumstr>
    8efe:	4681      	mov	r9, r0
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:591
			uval = (unsigned int) va_arg(ap, unsigned int);
    8f00:	46b8      	mov	r8, r7
    8f02:	e7cb      	b.n	8e9c <printk+0x3f8>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:597
				printk_pad_zero(vlen, field_width, &count, info);
    8f04:	9b00      	ldr	r3, [sp, #0]
    8f06:	aa0a      	add	r2, sp, #40	; 0x28
    8f08:	0021      	movs	r1, r4
    8f0a:	4648      	mov	r0, r9
    8f0c:	f7ff fce1 	bl	88d2 <printk_pad_zero>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:598
				vlen = field_width;
    8f10:	46a1      	mov	r9, r4
    8f12:	e004      	b.n	8f1e <printk+0x47a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:606
				}
			}

			cont_xd: while (*vstrp)
				printk_putc(*vstrp--, &count, info);
    8f14:	3f01      	subs	r7, #1
    8f16:	9a00      	ldr	r2, [sp, #0]
    8f18:	a90a      	add	r1, sp, #40	; 0x28
    8f1a:	f7ff fc83 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:605 (discriminator 1)
			cont_xd: while (*vstrp)
    8f1e:	2000      	movs	r0, #0
    8f20:	5638      	ldrsb	r0, [r7, r0]
    8f22:	2800      	cmp	r0, #0
    8f24:	d1f6      	bne.n	8f14 <printk+0x470>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:608

			if (IS_FLAG_MINUS(flags_used)) {
    8f26:	07f3      	lsls	r3, r6, #31
    8f28:	d400      	bmi.n	8f2c <printk+0x488>
    8f2a:	e5df      	b.n	8aec <printk+0x48>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:609
				printk_pad_space(vlen, field_width, &count, info);
    8f2c:	9b00      	ldr	r3, [sp, #0]
    8f2e:	aa0a      	add	r2, sp, #40	; 0x28
    8f30:	0021      	movs	r1, r4
    8f32:	4648      	mov	r0, r9
    8f34:	f7ff fcdc 	bl	88f0 <printk_pad_space>
    8f38:	e5d8      	b.n	8aec <printk+0x48>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:541
			uval = (unsigned int) va_arg(ap, unsigned int);
    8f3a:	9b02      	ldr	r3, [sp, #8]
    8f3c:	4698      	mov	r8, r3
    8f3e:	e7ee      	b.n	8f1e <printk+0x47a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:615
			}

			break;
        //字符型输出
		case 'c':
			cval = (char) va_arg(ap, unsigned int);
    8f40:	4643      	mov	r3, r8
    8f42:	1d1c      	adds	r4, r3, #4
    8f44:	2000      	movs	r0, #0
    8f46:	5618      	ldrsb	r0, [r3, r0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:616
			printk_putc(cval, &count, info);
    8f48:	9a00      	ldr	r2, [sp, #0]
    8f4a:	a90a      	add	r1, sp, #40	; 0x28
    8f4c:	f7ff fc6a 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:615
			cval = (char) va_arg(ap, unsigned int);
    8f50:	46a0      	mov	r8, r4
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:617
			break;
    8f52:	e5cb      	b.n	8aec <printk+0x48>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:619
		case 's':
			sval = (char *) va_arg(ap, char *);
    8f54:	4643      	mov	r3, r8
    8f56:	3304      	adds	r3, #4
    8f58:	9302      	str	r3, [sp, #8]
    8f5a:	4643      	mov	r3, r8
    8f5c:	681f      	ldr	r7, [r3, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:620
			if (sval) {
    8f5e:	2f00      	cmp	r7, #0
    8f60:	d044      	beq.n	8fec <printk+0x548>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:621
				vlen = strlen(sval);
    8f62:	0038      	movs	r0, r7
    8f64:	f7ff f8c6 	bl	80f4 <strlen>
    8f68:	9003      	str	r0, [sp, #12]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:622
				if (!IS_FLAG_MINUS(flags_used)) {
    8f6a:	2301      	movs	r3, #1
    8f6c:	401e      	ands	r6, r3
    8f6e:	d013      	beq.n	8f98 <printk+0x4f4>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:625
					printk_pad_space(vlen, field_width, &count, info);
				}
				if(precision_width!=0)
    8f70:	464b      	mov	r3, r9
    8f72:	2b00      	cmp	r3, #0
    8f74:	d01b      	beq.n	8fae <printk+0x50a>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:627
				{
					while (*sval)
    8f76:	2000      	movs	r0, #0
    8f78:	5638      	ldrsb	r0, [r7, r0]
    8f7a:	2800      	cmp	r0, #0
    8f7c:	d01b      	beq.n	8fb6 <printk+0x512>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:629
					{
						if(precision_width>=1)
    8f7e:	464b      	mov	r3, r9
    8f80:	2b00      	cmp	r3, #0
    8f82:	ddf8      	ble.n	8f76 <printk+0x4d2>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:631
						{
							precision_width--;
    8f84:	2301      	movs	r3, #1
    8f86:	425b      	negs	r3, r3
    8f88:	469c      	mov	ip, r3
    8f8a:	44e1      	add	r9, ip
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:632
							printk_putc(*sval++, &count, info);
    8f8c:	3701      	adds	r7, #1
    8f8e:	9a00      	ldr	r2, [sp, #0]
    8f90:	a90a      	add	r1, sp, #40	; 0x28
    8f92:	f7ff fc47 	bl	8824 <printk_putc>
    8f96:	e7ee      	b.n	8f76 <printk+0x4d2>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:623
					printk_pad_space(vlen, field_width, &count, info);
    8f98:	9b00      	ldr	r3, [sp, #0]
    8f9a:	aa0a      	add	r2, sp, #40	; 0x28
    8f9c:	0021      	movs	r1, r4
    8f9e:	f7ff fca7 	bl	88f0 <printk_pad_space>
    8fa2:	e7e5      	b.n	8f70 <printk+0x4cc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:639
					}
				}
				else    //precision_width=0情况
				{
					while (*sval)
					   printk_putc(*sval++, &count, info);
    8fa4:	3701      	adds	r7, #1
    8fa6:	9a00      	ldr	r2, [sp, #0]
    8fa8:	a90a      	add	r1, sp, #40	; 0x28
    8faa:	f7ff fc3b 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:638
					while (*sval)
    8fae:	2000      	movs	r0, #0
    8fb0:	5638      	ldrsb	r0, [r7, r0]
    8fb2:	2800      	cmp	r0, #0
    8fb4:	d1f6      	bne.n	8fa4 <printk+0x500>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:641
				}
				if (IS_FLAG_MINUS(flags_used)) {
    8fb6:	2e00      	cmp	r6, #0
    8fb8:	d102      	bne.n	8fc0 <printk+0x51c>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:619
			sval = (char *) va_arg(ap, char *);
    8fba:	9b02      	ldr	r3, [sp, #8]
    8fbc:	4698      	mov	r8, r3
    8fbe:	e595      	b.n	8aec <printk+0x48>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:642
					printk_pad_space(vlen, field_width, &count, info);
    8fc0:	9b00      	ldr	r3, [sp, #0]
    8fc2:	aa0a      	add	r2, sp, #40	; 0x28
    8fc4:	0021      	movs	r1, r4
    8fc6:	9803      	ldr	r0, [sp, #12]
    8fc8:	f7ff fc92 	bl	88f0 <printk_pad_space>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:619
			sval = (char *) va_arg(ap, char *);
    8fcc:	9b02      	ldr	r3, [sp, #8]
    8fce:	4698      	mov	r8, r3
    8fd0:	e58c      	b.n	8aec <printk+0x48>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:647
				}
			}
			break;
		case 'n':
			ivalp = (int *) va_arg(ap, int *);
    8fd2:	4643      	mov	r3, r8
    8fd4:	681b      	ldr	r3, [r3, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:648
			*ivalp = count;
    8fd6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8fd8:	601a      	str	r2, [r3, #0]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:647
			ivalp = (int *) va_arg(ap, int *);
    8fda:	2304      	movs	r3, #4
    8fdc:	469c      	mov	ip, r3
    8fde:	44e0      	add	r8, ip
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:649
			break;
    8fe0:	e584      	b.n	8aec <printk+0x48>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:652

		default:
			printk_putc(c, &count, info);
    8fe2:	9a00      	ldr	r2, [sp, #0]
    8fe4:	a90a      	add	r1, sp, #40	; 0x28
    8fe6:	f7ff fc1d 	bl	8824 <printk_putc>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:653
			break;
    8fea:	e57f      	b.n	8aec <printk+0x48>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:619
			sval = (char *) va_arg(ap, char *);
    8fec:	9b02      	ldr	r3, [sp, #8]
    8fee:	4698      	mov	r8, r3
    8ff0:	e57c      	b.n	8aec <printk+0x48>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:657
		}
	}
	return count;
}
    8ff2:	980a      	ldr	r0, [sp, #40]	; 0x28
    8ff4:	b015      	add	sp, #84	; 0x54
    8ff6:	bc3c      	pop	{r2, r3, r4, r5}
    8ff8:	4690      	mov	r8, r2
    8ffa:	4699      	mov	r9, r3
    8ffc:	46a2      	mov	sl, r4
    8ffe:	46ab      	mov	fp, r5
    9000:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9002:	46c0      	nop			; (mov r8, r8)

00009004 <myprintf>:
myprintf():
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:665
//参数说明：const char *:打印参数字符串：对输入的字符串进行解析并按格式输出
//       例如： printf("c=%c\n",c); 将c按char型进行输出
//函数返回：字符串长度
//======================================================================
int myprintf(const char *fmt, ...)
{
    9004:	b40f      	push	{r0, r1, r2, r3}
    9006:	b500      	push	{lr}
    9008:	b085      	sub	sp, #20
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:669
	char * ap;
	int rvalue;
	PRINTK_INFO info;
	info.dest = DEST_CONSOLE;  //宏定义为1
    900a:	2301      	movs	r3, #1
    900c:	9301      	str	r3, [sp, #4]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:670
	info.func = &out_char;     //调用的串口输出函数
    900e:	4b05      	ldr	r3, [pc, #20]	; (9024 <myprintf+0x20>)
    9010:	9302      	str	r3, [sp, #8]
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:673
	//对ap 进行初始化，让它指向可变参数表里面的第一个参数
	va_start(ap, fmt); 
	rvalue = printk(&info, fmt, ap);
    9012:	aa06      	add	r2, sp, #24
    9014:	ca02      	ldmia	r2!, {r1}
    9016:	a801      	add	r0, sp, #4
    9018:	f7ff fd44 	bl	8aa4 <printk>
F:\WorkSpace\AHL-GEC-EXP\Embed\src\UART_上位机_按钮控制七色灯\Debug/srcc/printf.c:678

	va_end(ap);

	return rvalue;
}
    901c:	b005      	add	sp, #20
    901e:	bc08      	pop	{r3}
    9020:	b004      	add	sp, #16
    9022:	4718      	bx	r3
    9024:	0000890f 	.word	0x0000890f

00009028 <memcpy>:
memcpy():
    9028:	2300      	movs	r3, #0
    902a:	b510      	push	{r4, lr}
    902c:	429a      	cmp	r2, r3
    902e:	d100      	bne.n	9032 <memcpy+0xa>
    9030:	bd10      	pop	{r4, pc}
    9032:	5ccc      	ldrb	r4, [r1, r3]
    9034:	54c4      	strb	r4, [r0, r3]
    9036:	3301      	adds	r3, #1
    9038:	e7f8      	b.n	902c <memcpy+0x4>

0000903a <memset>:
memset():
    903a:	0003      	movs	r3, r0
    903c:	1812      	adds	r2, r2, r0
    903e:	4293      	cmp	r3, r2
    9040:	d100      	bne.n	9044 <memset+0xa>
    9042:	4770      	bx	lr
    9044:	7019      	strb	r1, [r3, #0]
    9046:	3301      	adds	r3, #1
    9048:	e7f9      	b.n	903e <memset+0x4>
    904a:	0000      	movs	r0, r0
    904c:	00007614 	.word	0x00007614
    9050:	00007516 	.word	0x00007516
    9054:	00007516 	.word	0x00007516
    9058:	00007834 	.word	0x00007834
    905c:	00007510 	.word	0x00007510
    9060:	00007510 	.word	0x00007510
    9064:	0000781c 	.word	0x0000781c
    9068:	00007834 	.word	0x00007834
    906c:	00007510 	.word	0x00007510
    9070:	0000781c 	.word	0x0000781c
    9074:	00007510 	.word	0x00007510
    9078:	00007834 	.word	0x00007834
    907c:	0000782a 	.word	0x0000782a
    9080:	0000782a 	.word	0x0000782a
    9084:	0000782a 	.word	0x0000782a
    9088:	00007838 	.word	0x00007838

0000908c <GPIO_ARR>:
    908c:	400ff000 400ff040 400ff080 400ff0c0     ...@@..@...@...@
    909c:	400ff100                                ...@

000090a0 <PORT_ARR>:
    90a0:	40049000 4004a000 4004b000 4004c000     ...@...@...@...@
    90b0:	4004d000 33323130 37363534 42413938     ...@0123456789AB
    90c0:	46454443 30323032 36313730 00000000     CDEF20200716....
    90d0:	bea12020 72657355 becae1cc baa3bfa1       ..User........
    90e0:	f8bdabbd 7355ebc8 c4b57265 6e69616d     ......User..main
    90f0:	b4d62928 2e2ed0d0 000a0d2e              ()..........

000090fc <UART_ARR>:
    90fc:	4006b000 4006c000 000087e2 0000870e     ...@...@........
    910c:	0000873a 0000875a 0000877a 00008794     :...Z...z.......
    911c:	000087ae 000087c8 65736163 00003120     ........case 1..
    912c:	65736163 00003220 65736163 00003320     case 2..case 3..
    913c:	65736163 00003020 61666564 21746c75     case 0..default!
    914c:	0000000a 00008b30 00008b48 00008b48     ....0...H...H...
    915c:	00008b3c 00008b48 00008b48 00008b48     <...H...H...H...
    916c:	00008b48 00008b48 00008b48 00008b48     H...H...H...H...
    917c:	00008b2a 00008b48 00008b0a 00008b48     *...H.......H...
    918c:	00008b48 00008b36 00008dba 00008fe2     H...6...........
    919c:	00008fe2 00008fe2 00008fe2 00008fe2     ................
    91ac:	00008fe2 00008fe2 00008fe2 00008fe2     ................
    91bc:	00008eb6 00008f40 00008bfc 00008fe2     ....@...........
    91cc:	00008cc0 00008fe2 00008fe2 00008bfc     ................
    91dc:	00008fe2 00008fe2 00008fe2 00008fe2     ................
    91ec:	00008fd2 00008e84 00008ed0 00008fe2     ................
    91fc:	00008fe2 00008f54 00008fe2 00008eea     ....T...........
    920c:	00008fe2 00008fe2 00008dba              ............

00009218 <_init>:
_init():
    9218:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    921a:	46c0      	nop			; (mov r8, r8)
    921c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    921e:	bc08      	pop	{r3}
    9220:	469e      	mov	lr, r3
    9222:	4770      	bx	lr

00009224 <_fini>:
_fini():
    9224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9226:	46c0      	nop			; (mov r8, r8)
    9228:	bcf8      	pop	{r3, r4, r5, r6, r7}
    922a:	bc08      	pop	{r3}
    922c:	469e      	mov	lr, r3
    922e:	4770      	bx	lr

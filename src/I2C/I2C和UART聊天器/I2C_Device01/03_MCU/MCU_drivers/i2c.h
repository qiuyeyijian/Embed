//=====================================================================
//文件名称：i2c.c
//功能概要：i2c底层驱动构件头文件
//制作单位：苏州大学嵌入式系统与物联网研究所(sumcu.suda.edu.cn)
//版    本：  2019-05-09  V2.0
//适用芯片：KL25、KL26、KL36
//=====================================================================
#ifndef _I2C_H         //防止重复定义（ 开头)
#define _I2C_H
#include "mcu.h"      //包含公共要素头文件
#include "string.h"
#include "printf.h"

//文件级变量声明
uint8_t ModeSelect;    //主从模式，0表示从机模式，1表示主机模式

//**********************对外接口函数************************************

//=====================================================================
//函数名称：i2c_init                                                        
//功能概要：初始化IICX模块。默认为100K.
//参数说明：No:模块号,可用参数可参见gec.h文件
//         Mode：模式  1：主机     0：从机
//         address：本模块初始化地址    范围(1~255)
//         BaudRate：为波特率，其单位为Kb/s，其取值为25,50,75,100K
//函数返回：无
//=====================================================================
void i2c_init(uint8_t No, uint8_t Mode, uint8_t address, uint8_t BaudRate);

//=====================================================================
//函数名称：  i2c_read1
//功能概要：  读取1个字节数据
//参数说明：  No:模块号，可用参数可参见gec.h文件
//          slaveAddress:读取的目标地址
//          command： 读取命令，取值范围为0~255。
//                   若无读取命令则该参数传0xFFFF
//          Data:带回收到的一个字节数据
//函数返回：  1：表示读取失败；0：读取成功
//函数说明: 该函数为对外函数，可以根据命令读取到相应的1个字节，若想读取2个
//         或以上字节数数据，请使用I2C_readN函数，不建议使用循环调用此函数
//=====================================================================
uint8_t i2c_read1(uint8_t No, uint8_t slaveAddress, uint16_t command, uint8_t* Data);

//=====================================================================
//函数名称：i2c_readN.
//功能说明： 读取N个字节，在这里N最小为2。
//函数参数： NO:i2c模块号 ，可用参数可参见gec.h文件
//          slaveAddress:读取的目标地址
//          command： 读取命令，取值范围为0~255。
//                   若无读取命令则该参数传0xFFFF
//          Data：存放的数据首地址
//          DataNum：要读取的字节数（大于等于2）
//函数返回： 1：表示读取失败；0：读取成功
//=====================================================================
uint8_t i2c_readN(uint8_t No, uint8_t slaveAddress, uint16_t command, uint8_t* Data, uint8_t DataNum);

//=====================================================================
//函数名称： i2c_write1
//功能概要： 发送1个字节数据
//参数说明： No:模块号，可用参数可参见gec.h文件
//          slaveAddress：发送目标的地址
//          Data:待发送的的1个字节数据
//          command:地址（命令）
//函数返回：  0，成功发送一个字节；1，发送一个字节失败
//函数说明:  1：表示发送失败；0：发送成功
//=====================================================================
uint8_t i2c_write1(uint8_t No, uint8_t slaveAddress, uint8_t Data, uint16_t command);

//=====================================================================
//函数名称： I2C_writeN
//功能概要： 发送N个字节数据
//参数说明： No:模块号，可用参数可参见gec.h文件
//          slaveAddress：发送目标的地址
//          *Data:待发送N字节数据首地址
//          DataNum：发送的字节数N
//函数返回：  0，成功发送一个字节；1，发送一个字节失败
//函数说明: 1：表示发送失败；0：发送成功
//=====================================================================
uint8_t i2c_writeN(uint8_t No, uint8_t slaveAddress, uint8_t* Data, uint8_t DataNum);

//=====================================================================
//函数名称：I2C_enable_re_int.
//功能说明：打开i2c的IRQ中断。
//函数参数：No:i2c模块号，可用参数可参见gec.h文件
//函数返回：无
//=====================================================================
void i2c_enable_re_int(uint8_t No);

//=====================================================================
//函数名称：I2C_disable_re_int
//功能说明：关闭i2c的IRQ中断。
//函数参数：No:i2c模块号，可用参数可参见gec.h文件
//函数返回：无。
//=====================================================================
void i2c_disable_re_int(uint8_t No);

//=====================================================================
//函数名称：i2c_clear_re_int
//功能说明：清除i2c的接收中断标志。
//函数参数：No:i2c模块号 ，可用参数可参见gec.h文件
//函数返回：无。
//=====================================================================
void i2c_clear_re_int(uint8_t No);

//=====================================================================
//函数名称：wait
//功能概要：等待完成
//参数说明：No:模块号,可用参数可参见gec.h文件
//函数返回：1：表示超时，0：表示正常
//=====================================================================
uint8_t i2c_wait(uint8_t No);

//=====================================================================
//函数名称：i2c_read
//功能概要：接收数据
//参数说明：No:模块号,可用参数可参见gec.h文件
//函数返回：寄存器中的数据
//=====================================================================
uint8_t i2c_read(uint8_t No);

//=====================================================================
//函数名称： i2c_write
//功能概要： 发送数据
//参数说明： No:模块号,可用参数可参见gec.h文件
//          data：要写入的数据
//函数返回： 无
//=====================================================================
void i2c_write(uint8_t No, uint8_t data);

//=====================================================================
//函数名称： i2c_stop
//功能概要： 停止信号
//参数说明： No:模块号,可用参数可参见gec.h文件
//函数返回： 无
//=====================================================================
void i2c_stop(uint8_t No);

//=====================================================================
//函数名称： i2c_start
//功能概要： 开始信号
//参数说明： No:模块号,可用参数可参见gec.h文件
//函数返回： 无
//=====================================================================
void i2c_start(uint8_t No);

//=====================================================================
//函数名称： i2c_restart
//功能概要： 重新开始信号
//参数说明： No:模块号,可用参数可参见gec.h文件
//函数返回： 无
//=====================================================================
void i2c_restart(uint8_t No);

//=====================================================================
//函数名称I2C_M0ndACK
//功能概要： 发送ACK
//参数说明： No:模块号,可用参数可参见gec.h文件
//函数返回：无
//=====================================================================
void I2C_M0ACK(uint8_t No);

//=====================================================================
//函数名称I2C_M0ndNACK
//功能概要： 发送NACK
//参数说明： No:模块号,可用参数可参见gec.h文件
//函数返回：无
//=====================================================================
void I2C_M0NACK(uint8_t No);

//=====================================================================
//函数名称： i2c_changeDir
//功能概要： 改变方向。
//参数说明： No:模块号,可用参数可参见gec.h文件
//        direction: 方向 0是接收，1是发送
//函数返回： 无
//=====================================================================
void i2c_changeDir(uint8_t No, uint8_t direction);

//=====================================================================
//函数名称： i2c_get_ack
//功能概要： 获取应答或者非应答信号
//参数说明： No:模块号,可用参数可参见gec.h文件
//函数返回：0：应答信号；1：非应答信号
//=====================================================================
uint8_t i2c_get_ack(uint8_t No);

//=====================================================================
//函数名称： i2c_recv
//功能概要： 接收字符串组帧函数，当接收到字符'\0'时，认为字符串接收成功，返回接收字符串长度
//参数说明： No:模块号,可用参数可参见gec.h文件
//函数返回：0：尚未接收成功；字符串长度len：字符串接收成功，返回接收字符串长度
//=====================================================================
uint32_t i2c_recv(uint8_t No, uint8_t* buff);

//=====================================================================
//函数名称： i2c_send
//功能概要： 发送len个字节数据
//参数说明： No:模块号，可用参数可参见gec.h文件
//          addr：发送目标的地址
//          buff:待发送N字节数据首地址
//          len：发送的字节数N
//函数返回：  无
//函数说明: 首先将No模块设为主设备，然后调用i2c_writeN()函数发送数据
//          发送完毕后，再将No模块设为从设备，完成主从设备切换
//=====================================================================
uint8_t i2c_send(uint8_t No, uint8_t slaveAddress, uint8_t* buff, uint8_t len);


#endif  //防止重复定义（结尾）

//=====================================================================
//声明：
//（1）我们开发的源代码，在本中心提供的硬件系统测试通过，真诚奉献给社会，不足之处，
//     欢迎指正。
//（2）对于使用非本中心硬件系统的用户，移植代码时，请仔细根据自己的硬件匹配。
//
//苏州大学飞思卡尔嵌入式中心（苏州华祥信息科技有限公司）
//技术咨询：0512-65214835  http://sumcu.suda.edu.cn
//业务咨询：0512-87661670,18915522016  http://www.hxtek.com.cn
